# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_pixelsort_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_pixelsort_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_pixelsort_GL"

def getLabel():
    return "Crok_pixelsort_GL"

def getVersion():
    return 1

def getIconPath():
    return "Crok_pixelsort_GL.png"

def getGrouping():
    return "Community/GLSL/Distort"

def getPluginDescription():
    return "Creates a pixel sort type effect.\n( https://vimeo.com/265955050 )"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.07451, 0.5686, 0.4863)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("SETUP", "Setup")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SETUP = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDoubleParam("pass3paramValueFloat2", "Amount : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.97, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass3paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createBooleanParam("pass3paramValueBool1", "Invert direction :")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass3paramValueBool1 = param
    del param

    param = lastNode.createBooleanParam("pass3paramValueBool3", "Switch Direction :")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.pass3paramValueBool3 = param
    del param

    param = lastNode.createBooleanParam("pass3paramValueBool0", "Switch to Shadow")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.pass3paramValueBool0 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("ROTATION", "Rotation")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ROTATION = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createBooleanParam("pass1paramValueBool1", "Enable rotation :")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueBool1 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat0", "Angle :")
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_pixelsort_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4939, 4270)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4809, 3342)
    lastNode.setSize(80, 36)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(4593, 3344)
    lastNode.setSize(80, 36)
    lastNode.setColor(1, 1, 1)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass1")
    lastNode.setLabel("pass1")
    lastNode.setPosition(4694, 3622)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueBool1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_pixelsort Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_pixelsort Matchbox for Autodesk Flame\n\n\n// iChannel0: Source, filter=linear, wrap=clamp\n// iChannel1: Mask, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/XsBfRG\n\n\n\n\n\nuniform float angle = 0.0; // Angle : (angle)\nuniform bool enable_rotation = true; // Enable roration : (enable rotation)\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / iResolution.xy;\n  vec2 uv_without_rot = uv;\n  vec3 c = vec3(0.0);\n  float m = 0.0;\n\n  if ( enable_rotation)\n  {\n    float rotation = angle/180.*3.14159265;\n    float size = 1;\n    vec2 frontCoords = uv ;\n    float ratio = iResolution.x/iResolution.y ;\n    // rotate and scale\n    vec2 ctr = vec2(0.5);\n    mat2 rotMat = mat2( cos(-rotation)*ratio, -sin(-rotation),\n                       sin(-rotation)*ratio, cos(-rotation) );\n    frontCoords -= ctr;\n    frontCoords *= rotMat/size;\n    frontCoords /= vec2(ratio,1.);\n    frontCoords += ctr;\n    c = texture2D(iChannel0, frontCoords).rgb;\n    m = texture2D(iChannel1, frontCoords).r;\n  }\n\n  else\n  {\n    c = texture2D(iChannel0, uv_without_rot).rgb;\n    m = texture2D(iChannel1, uv_without_rot).r;\n  }\n\n\n    fragColor = vec4(c, m);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("mirror")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Mask")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Angle :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("enable_rotation")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Enable roration :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("enable rotation")
        del param

    param = lastNode.getParam("paramDefaultBool1")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "pass1"

    # Start of node "pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass2")
    lastNode.setLabel("pass2")
    lastNode.setPosition(4694, 3741)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass2 = lastNode

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_pixelsort Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_pixelsort Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/XsBfRG\n\n\n\nfloat gray( vec3 c ) {\n  return dot( c, vec3( 0.299, 0.587, 0.114 ) );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n   vec2 uv = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n   vec3 c = texture2D(iChannel0, uv).rgb;\n   c.r = gray(c);\n   fragColor = vec4(c.r);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "pass2"

    # Start of node "pass3"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass3")
    lastNode.setLabel("pass3")
    lastNode.setPosition(4694, 3856)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass3 = lastNode

    param = lastNode.getParam("paramValueBool0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(0.97, 0)
        del param

    param = lastNode.getParam("paramValueBool3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_pixelsort Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_pixelsort Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter=linear, wrap=clamp\n// iChannel1: pass2_result, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n\n// based on https://www.shadertoy.com/view/XsBfRG\n\n\n\n\nuniform bool SHADOW = false; // Switch to Shadow\nuniform bool REVERSE = false; // Invert direction : \nuniform float amount = 0.97; // Amount : (amount), min=0.0, max=1.0\nuniform bool DIR = false; // Switch Direction : \n\nfloat THR = amount * -1.0 + 1.0;\n\nfloat gray( vec3 c ) {\n  return dot( c, vec3( 0.299, 0.587, 0.114 ) );\n}\n\nvec3 toRgb( float i ) {\n    return vec3(\n        mod( i, 256.0 ),\n        mod( floor( i / 256.0 ), 256.0 ),\n        floor( i / 65536.0 )\n    ) / 255.0;\n}\n\nbool thr( float v ) {\n  return SHADOW ? ( 1.0 - THR < v ) : ( v < THR );\n}\n\nvec4 draw( vec2 uv ) {\n    vec2 dir = DIR ? vec2( 0.0, 1.0 ) : vec2( 1.0, 0.0 );\n    float wid = DIR ? iResolution.y : iResolution.x;\n    float pos = DIR ? floor( uv.y * iResolution.y ) : floor( uv.x * iResolution.x );\n\n    float val = gray( texture2D( iChannel1, uv ).xyz );\n\n    if ( !thr( val ) ) {\n        float post = pos;\n        float rank = 0.0;\n        float head = 0.0;\n        float tail = 0.0;\n\n        for ( int i = 0; i < int( wid ); i ++ ) {\n            post -= 1.0;\n            if ( post == -1.0 ) { head = post + 1.0; break; }\n            vec2 p = dir * ( post + 0.5 ) / wid + dir.yx * uv;\n            float v = gray( texture2D( iChannel1, p ).xyz );\n            if ( thr( v ) ) { head = post + 1.0; break; }\n            if ( v <= val ) { rank += 1.0; }\n        }\n\n        post = pos;\n        for ( int i = 0; i < int( wid ); i ++ ) {\n            post += 1.0;\n            if ( wid == post ) { tail = post - 1.0; break; }\n            vec2 p = dir * ( post + 0.5 ) / wid + dir.yx * uv;\n            float v = gray( texture2D( iChannel1, p ).xyz );\n            if ( thr( v ) ) { tail = post - 1.0; break; }\n            if ( v < val ) { rank += 1.0; }\n        }\n\n        pos = REVERSE ? ( tail - rank ) : ( head + rank );\n    }\n\n    return vec4( toRgb( pos ), 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n  vec4 col = draw( uv );\n  fragColor = col;\n}\n")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("mirror")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("pass2_result")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("SHADOW")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Switch to Shadow")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("REVERSE")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Invert direction :")
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(0.97, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("DIR")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Switch Direction :")
        del param

    del lastNode
    # End of node "pass3"

    # Start of node "pass4"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass4")
    lastNode.setLabel("pass4")
    lastNode.setPosition(4939, 3856)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass4 = lastNode

    param = lastNode.getParam("paramValueBool0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_pixelsort Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_pixelsort Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter=linear, wrap=clamp\n// iChannel1: pass2_result, filter=linear, wrap=clamp\n// iChannel2: pass3_result, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/XsBfRG\n\n\n\nuniform bool DIR = false; // Switch Direction : \nuniform int view ;\n\n\n\nfloat fromRgb( vec3 v ) {\n    return (( v.z * 256.0 + v.y) * 256.0 + v.x) * 255.0;\n}\n\nvec4 draw( vec2 uv ) {\n  float st = texture2D( iChannel1, uv ).r;\n    vec2 dir = DIR ? vec2( 0.0, 1.0 ) : vec2( 1.0, 0.0 );\n    float wid = DIR ? iResolution.y : iResolution.x;\n    float pos = DIR ? floor( uv.y * iResolution.y ) : floor( uv.x * iResolution.x );\n\n    for ( int i = 0; i < int( wid ); i ++ ) {\n        vec2 p = uv + dir * float( i ) / wid;\n        if ( p.x < 1.0 && p.y < 1.0 ) {\n            float v = fromRgb( texture2D( iChannel2, p ).xyz );\n            if ( abs( v - pos ) < 0.5 ) {\n                return texture2D( iChannel0, p ) ;\n                break;\n            }\n        }\n\n        p = uv - dir * float( i ) / wid;\n        if ( 0.0 < p.x && 0.0 < p.y ) {\n            float v = fromRgb( texture2D( iChannel2, p ).xyz ) ;\n            if ( abs( v - pos ) < 0.5 ) {\n                return texture2D( iChannel0, p );\n                break;\n            }\n        }\n    }\n\n    return vec4( 1.0, 0.0, 1.0, 1.0 );\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n  vec4 org = texture2D( iChannel0, uv );\n  vec4 col = draw( uv );\n  col.rgb = vec3(org.a * col.rgb + (1.0 - org.a) * org.rgb);\n  fragColor = vec4(col.rgb, org.a);\n    \n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("mirror")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("mipmap2")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap2")
    if param is not None:
        param.set("mirror")
        del param

    param = lastNode.getParam("inputLabel2")
    if param is not None:
        param.setValue("pass3_result")
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("DIR")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Switch Direction :")
        del param

    del lastNode
    # End of node "pass4"

    # Start of node "pass5"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass5")
    lastNode.setLabel("pass5")
    lastNode.setPosition(4939, 3986)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass5 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueBool1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_pixelsort Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_pixelsort Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter=linear, wrap=clamp\n// iChannel1: pass2_result, filter=linear, wrap=clamp\n// iChannel2: pass3_result, filter=linear, wrap=clamp\n// iChannel3: pass4_result, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/XsBfRG\n\n\n\nuniform float angle;\nuniform int view;\nuniform bool enable_rotation;\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 uv = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n  float rotation = angle/180.*3.14159265;\n  float size = 1.0;\n  vec3 c = texture2D(iChannel3, uv).rgb;\n  float m = texture2D(iChannel3, uv).a;\n\n  if ( enable_rotation)\n  {\n    size = 1.;\n    vec2 frontCoords = uv ;\n    float ratio = iResolution.x/iResolution.y ;\n    // rotate and scale\n    vec2 ctr = vec2(0.5);\n    mat2 rotMat = mat2( cos(rotation)*ratio, -sin(rotation),\n                       sin(rotation)*ratio, cos(rotation) );\n    frontCoords -= ctr;\n    frontCoords *= rotMat/size;\n    frontCoords /= vec2(ratio,1.);\n    frontCoords += ctr;\n    c = texture2D(iChannel3, frontCoords).rgb;\n    m = texture2D(iChannel3, frontCoords).a;\n  }\n\n    fragColor = vec4(c, m);\n}\n")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("mipmap3")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap3")
    if param is not None:
        param.set("mirror")
        del param

    param = lastNode.getParam("inputLabel3")
    if param is not None:
        param.setValue("pass4_result")
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("enable_rotation")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("enable_rotation")
        del param

    del lastNode
    # End of node "pass5"

    # Start of node "Crop_Source"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Source")
    lastNode.setLabel("Crop_Source")
    lastNode.setPosition(4804, 3476)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Source = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Source"

    # Start of node "Crop_Mask"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Mask")
    lastNode.setLabel("Crop_Mask")
    lastNode.setPosition(4588, 3474)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Mask = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Mask"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, grouppass5)
    grouppass1.connectInput(0, groupCrop_Source)
    grouppass1.connectInput(1, groupCrop_Mask)
    grouppass2.connectInput(0, grouppass1)
    grouppass3.connectInput(0, grouppass2)
    grouppass3.connectInput(1, grouppass2)
    grouppass4.connectInput(0, grouppass1)
    grouppass4.connectInput(2, grouppass3)
    grouppass5.connectInput(3, grouppass4)
    groupCrop_Source.connectInput(0, groupSource)
    groupCrop_Mask.connectInput(0, groupMask)

    param = grouppass1.getParam("paramValueFloat0")
    group.getParam("pass1paramValueFloat0").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueBool1")
    group.getParam("pass1paramValueBool1").setAsAlias(param)
    del param
    param = grouppass3.getParam("paramValueBool0")
    group.getParam("pass3paramValueBool0").setAsAlias(param)
    del param
    param = grouppass3.getParam("paramValueBool1")
    group.getParam("pass3paramValueBool1").setAsAlias(param)
    del param
    param = grouppass3.getParam("paramValueFloat2")
    group.getParam("pass3paramValueFloat2").setAsAlias(param)
    del param
    param = grouppass3.getParam("paramValueBool3")
    group.getParam("pass3paramValueBool3").setAsAlias(param)
    del param
    param = grouppass4.getParam("paramValueBool0")
    param.slaveTo(grouppass3.getParam("paramValueBool3"), 0, 0)
    del param
    param = grouppass5.getParam("paramValueFloat0")
    param.slaveTo(grouppass1.getParam("paramValueFloat0"), 0, 0)
    del param
    param = grouppass5.getParam("paramValueBool1")
    param.slaveTo(grouppass1.getParam("paramValueBool1"), 0, 0)
    del param
    param = groupCrop_Source.getParam("size")
    param.setExpression("myWidth = Source.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Source.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = groupCrop_Mask.getParam("size")
    param.setExpression("myWidth = Mask.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Mask.getOutputFormat().height()\nret = myWidth", True, 1)
    del param

    try:
        extModule = sys.modules["Crok_pixelsort_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
