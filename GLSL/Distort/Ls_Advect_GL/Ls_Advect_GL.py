# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Ls_Advect_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Ls_Advect_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Ls_Advect_GL"

def getLabel():
    return "Ls_Advect_GL"

def getVersion():
    return 1

def getIconPath():
    return "Ls_Advect_GL.png"

def getGrouping():
    return "Community/GLSL/Distort"

def getPluginDescription():
    return "Pushes an image along the contours of another."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.07451, 0.5686, 0.4863)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("MAP", "Map")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MAP = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass1paramValueBool1", "Rotate 90 : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass1paramValueBool1 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass1paramValueFloat0", "Sobel kernel size : ")
    param.setMinimum(0.5, 0)
    param.setMaximum(1024, 0)
    param.setDisplayMinimum(0.5, 0)
    param.setDisplayMaximum(1024, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass1paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass1paramValueBool2", "Use map as vectors directly : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass1paramValueBool2 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createSeparatorParam("PATH", "Path")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.PATH = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass2paramValueFloat0", "Length : ")
    param.setMinimum(-2048, 0)
    param.setMaximum(2048, 0)
    param.setDisplayMinimum(-2048, 0)
    param.setDisplayMaximum(2048, 0)
    param.setDefaultValue(8, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass2paramValueFloat3", "Sidestep : ")
    param.setDisplayMinimum(-1024, 0)
    param.setDisplayMaximum(1024, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createDoubleParam("offsetX", "Offset x : ")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-2048, 0)
    param.setDisplayMaximum(2048, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.offsetX = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createDoubleParam("offsetY", "Offset y : ")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-2048, 0)
    param.setDisplayMaximum(2048, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.offsetY = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createSeparatorParam("QUALITY", "Quality")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.QUALITY = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createIntParam("Shadertoy_pass2paramValueInt5", "Path segments : ")
    param.setMinimum(0, 0)
    param.setMaximum(32, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(32, 0)
    param.setDefaultValue(32, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueInt5 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createIntParam("Shadertoy_pass2paramValueInt6", "Oversampling : ")
    param.setMinimum(1, 0)
    param.setMaximum(64, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(64, 0)
    param.setDefaultValue(4, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueInt6 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass2paramValueFloat1", "Softness : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueFloat1 = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("CROP", "Crop")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CROP = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createDoubleParam("CROP_T", "Top : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CROP_T = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createDoubleParam("CROP_L", "Left : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CROP_L = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createDoubleParam("CROP_B", "Bottom : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CROP_B = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createDoubleParam("CROP_R", "Right : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.CROP_R = param
    del param

    param = lastNode.createStringParam("sep26", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep26 = param
    del param

    param = lastNode.createStringParam("sep27", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep27 = param
    del param

    param = lastNode.createSeparatorParam("OUTPUT", "Output")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OUTPUT = param
    del param

    param = lastNode.createStringParam("sep28", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep28 = param
    del param

    param = lastNode.createStringParam("sep29", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep29 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass2paramValueBool12", "Fade in : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueBool12 = param
    del param

    param = lastNode.createStringParam("sep30", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep30 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass2paramValueBool13", "Fade out : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueBool13 = param
    del param

    param = lastNode.createStringParam("sep31", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep31 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass2paramValueFloat2", "Lifetime : ")
    param.setMinimum(0.001, 0)
    param.setMaximum(16, 0)
    param.setDisplayMinimum(0.001, 0)
    param.setDisplayMaximum(16, 0)
    param.setDefaultValue(4, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep32", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep32 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass2paramValueBool9", "Output vectors : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueBool9 = param
    del param

    param = lastNode.createStringParam("sep33", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep33 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy_pass2paramValueBool10", "Output normalized : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueBool10 = param
    del param

    param = lastNode.createStringParam("sep34", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep34 = param
    del param

    param = lastNode.createStringParam("sep35", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep35 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Ls_Advect_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4148, 4120)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4148, 3588)
    lastNode.setSize(80, 36)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Map"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Map")
    lastNode.setLabel("Map")
    lastNode.setPosition(3952, 3590)
    lastNode.setSize(80, 36)
    lastNode.setColor(1, 1, 1)
    groupMap = lastNode

    del lastNode
    # End of node "Map"

    # Start of node "Shadertoy_pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass1")
    lastNode.setLabel("Shadertoy_pass1")
    lastNode.setPosition(3952, 3876)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueBool1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_Advect Matchbox pour Autodesk Flame\n//\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_Advect Matchbox for Autodesk Flame\n//\n// iChannel0: Map, filter = linear, wrap=clamp\n// BBox: iChannel0\n\n// Pass 1: make the vectors\n// lewis@lewissaunders.com\n// TODO:\n//  o Pre-blur input in case of kinks?\n\n\n\n\nuniform float ksize = 0.5; // Sobel kernel size : (Size of Sobel kernels used to detect gradients; increase to remove artifacts at the expense of accuracy), min=0.5, max=1024\n\nuniform bool radial = fasle; // Rotate 90 : (Blur into and out of the contours instead of along the edges.)\nuniform bool directvectors = false; // Use map as vectors directly : (Enable to use the map input red and green channels as XY vectors directly, instead of calulating gradients.)\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 xy = fragCoord.xy;\n\n\t// Factor to convert pixels to [0,1] texture coords\n\tvec2 px = vec2(1.0) / vec2(iResolution.x, iResolution.y);\n\n\tvec2 d = vec2(0.0);\n\n\tif(directvectors == true) {\n\t\t// iChannel0 input is already vectors, yay!\n\t\td = texture2D(iChannel0, xy * px).xy;\n\t\tif(radial) {\n\t\t\t// Rotate 90 degrees\n\t\t\td = vec2(-d.y, d.x);\n\t\t}\n\t\tfragColor = vec4(d.x, d.y, 0.0, 1.0);\n\t\treturn;\n\t}\n\n\t// Convolve by x and y Sobel matrices to get gradient vector\n\td.x  =  1.0 * texture2D(iChannel0, (xy + ksize * vec2(-1.0, -1.0)) * px).g;\n\td.x +=  2.0 * texture2D(iChannel0, (xy + ksize * vec2(-1.0,  0.0)) * px).g;\n\td.x +=  1.0 * texture2D(iChannel0, (xy + ksize * vec2(-1.0, +1.0)) * px).g;\n\td.x += -1.0 * texture2D(iChannel0, (xy + ksize * vec2(+1.0, -1.0)) * px).g;\n\td.x += -2.0 * texture2D(iChannel0, (xy + ksize * vec2(+1.0,  0.0)) * px).g;\n\td.x += -1.0 * texture2D(iChannel0, (xy + ksize * vec2(+1.0, +1.0)) * px).g;\n\td.y +=  1.0 * texture2D(iChannel0, (xy + ksize * vec2(-1.0, -1.0)) * px).g;\n\td.y +=  2.0 * texture2D(iChannel0, (xy + ksize * vec2( 0.0, -1.0)) * px).g;\n\td.y +=  1.0 * texture2D(iChannel0, (xy + ksize * vec2(+1.0, -1.0)) * px).g;\n\td.y += -1.0 * texture2D(iChannel0, (xy + ksize * vec2(-1.0, +1.0)) * px).g;\n\td.y += -2.0 * texture2D(iChannel0, (xy + ksize * vec2( 0.0, +1.0)) * px).g;\n\td.y += -1.0 * texture2D(iChannel0, (xy + ksize * vec2(+1.0, +1.0)) * px).g;\n\n\tif(!radial) {\n\t\t// Rotate 90 degrees\n\t\td = vec2(-d.y, d.x);\n\t}\n\n\t// Bit of a bodge factor right here\n\td *= 32.0 / ksize;\n\n\t// Output vectors for second pass\n\tfragColor = vec4(d.x, d.y, 0.0, 1.0);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Map")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("ksize")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Sobel kernel size :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Size of Sobel kernels used to detect gradients; increase to remove artifacts at the expense of accuracy")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(1024, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("radial")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Rotate 90 :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Blur into and out of the contours instead of along the edges.")
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("directvectors")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Use map as vectors directly :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Enable to use the map input red and green channels as XY vectors directly, instead of calulating gradients.")
        del param

    del lastNode
    # End of node "Shadertoy_pass1"

    # Start of node "Shadertoy_pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass2")
    lastNode.setLabel("Shadertoy_pass2")
    lastNode.setPosition(4148, 3876)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass2 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(8, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueVec24")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("paramValueInt5")
    if param is not None:
        param.setValue(32, 0)
        del param

    param = lastNode.getParam("paramValueInt6")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramValueVec27")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("paramValueVec28")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        del param

    param = lastNode.getParam("paramValueBool9")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool10")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool12")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool13")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_Advect Matchbox pour Autodesk Flame\n//\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_Advect Matchbox for Autodesk Flame\n//\n// iChannel0: Source, filter = nearest, wrap=clamp\n// iChannel1: Pass1_result, filter = nearest, wrap=clamp\n// BBox: iChannel0\n\n// Pass 2: do the displace\n// TODO:\n//  o Diffuse samples out along/around path direction?\n// lewis@lewissaunders.com\n\n\n\n\n\n\nuniform float blength = 8.0; // Length : (Distance to move by), min=-2048.0, max=2048.0\nuniform float spacing = 1.5; // Softness : (Spacing between pixel samples), min=0.0, max=10.0\nuniform float maxlength = 4.0; // Lifetime : (Distance by which brightness dies, as a ratio of the path length), min=0.0001, max=16.0\nuniform float sidestep;\n\nuniform vec2 offset = vec2(0.0,0.0); // Offset : , min=-10000, max=10000\n\nuniform int samples = 32; // Samples : (Number of steps along path, increase to get correct path shape), min=0, max=32\nuniform int oversamples = 4; // Oversampling : (Number of pixel samples, carefully increase for smoothness), min=1, max=64\n\nuniform vec2 bl = vec2(0.0,0.0); // Bottom left : (Bottom left)\nuniform vec2 tr = vec2(1.0,1.0); // Top right : (Top right)\n\nuniform bool radial = false; // Rotate 90 : (Blur into and out of the contours instead of along the edges)\nuniform bool vectors = false; // Output vectors : \nuniform bool normalize = false; // Output normalized : \nuniform bool adsk_degrade = false; // Degrade : (degrade image for faster render.)\nuniform bool fadeout = false; // Fade in : (Darken samples the less they move)\nuniform bool fadein = false; // Fade out : (Darken samples the further they move)\n\n\n\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 xy = fragCoord.xy;\n\n\t// Factor to convert pixels to [0,1] texture coords\n\tvec2 px = vec2(1.0) / vec2(iResolution.x, iResolution.y);\n\n\t// Get vectors from previous pass\n\tvec2 d = texture2D(iChannel1, xy * px).xy;\n\n\tif(vectors) {\n\t\t// Return the vectors, not the blur\n\t\tif(normalize) {\n\t\t\t// Bodge factor for a resonable result from PixelSpread\n\t\t\td /= 4.0;\n\t\t\td += 0.5;\n\t\t\tfragColor = vec4(d.x, d.y, 1.0, 1.0);\n\t\t} else {\n\t\t\tfragColor = vec4(d.x, d.y, 0.0, 1.0);\n\t\t}\n\t\treturn;\n\t}\n\n\t// Crop\n\tvec2 xyn = xy * px;\n\tif((xyn.x < bl.x) || (xyn.x > tr.x)) {\n\t\tfragColor = texture2D(iChannel0, xyn);\n\t\tfragColor.a = 0.0;\n\t\treturn;\n\t}\n\tif((xyn.y < bl.y) || (xyn.y > tr.y)) {\n\t\tfragColor = texture2D(iChannel0, xyn);\n\t\tfragColor.a = 0.0;\n\t\treturn;\n\t}\n\n\tfloat sam = float(samples);\n\tif(adsk_degrade == true) {\n\t\tsam /= 4.0;\n\t}\n\n\tvec4 acc = vec4(0.0);\n\tfor(int j = 0; j < oversamples; j++) {\n\t\tfor(int k = 0; k < oversamples; k++) {\n\t\t\t// Starting point for this sample\n\t\t\txy = fragCoord.xy + spacing * vec2(float(j) / (float(oversamples) + 1.0), float(k) / (float(oversamples) + 1.0));\n\t\t\tfloat dist = 0.0;\n\t\t\t// Walk along path by sampling vector image, moving, sampling, moving...\n\t\t\tfor(float i = 0.0; i < sam; i++) {\n\t\t\t\td = texture2D(iChannel1, xy * px).xy;\n\t\t\t\tif(length(d) == 0.0) {\n\t\t\t\t\t// No gradient at this point in the map, early out\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\txy += d * (blength/sam) + blength * sidestep/1000.0 * vec2(-d.y, d.x) + (blength/32.0) * offset;\n\t\t\t\tdist += length(d * (blength/sam));\n\t\t\t}\n\t\t\t// Sample iChannel0 image where our walk ended up\n\t\t\tacc.rgb += texture2D(iChannel0, xy * px).rgb;\n\n\t\t\t// Diffusion?\n\t\t\t/*for(float ix = 0.0; ix < diffusion; ix++) {\n\t\t\t\tfor(float iy = 0.0; iy < diffusion; iy++) {\n\t\t\t\t\tacc.rgb += texture2D(iChannel0, (xy + vec2(ix, iy) * dist * px)).rgb * length(vec2(ix, iy)-vec2(diffusion/2.0, diffusion/2.0)) / (diffusion * diffusion * 32.0);\n\t\t\t\t}\n\t\t\t}*/\n\n\t\t\t// Length we\'ve travelled to the matte output\n\t\t\tacc.a += dist * (blength/32.0);\n\t\t}\n\t}\n\tacc /= float(oversamples * oversamples);\n\n\tif(fadeout) {\n\t\tacc.rgb *= 1.0 - smoothstep(0.0, 1.0, abs(acc.a/(maxlength*blength+0.0001)));\n\t}\n\tif(fadein) {\n\t\tacc.rgb *= smoothstep(0.0, 1.0, abs(acc.a/(maxlength*blength)));\n\t}\n\n\tfragColor = acc; \n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Pass1_result")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(14, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("blength")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Length :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Distance to move by")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(8, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(-2048, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(2048, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("spacing")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Softness :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Spacing between pixel samples")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("maxlength")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Lifetime :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Distance by which brightness dies, as a ratio of the path length")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(9.999999999999999e-05, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(16, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("sidestep")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("sidestep")
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("offset")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Offset :")
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("samples")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Samples :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("Number of steps along path, increase to get correct path shape")
        del param

    param = lastNode.getParam("paramDefaultInt5")
    if param is not None:
        param.setValue(32, 0)
        del param

    param = lastNode.getParam("paramMinInt5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt5")
    if param is not None:
        param.setValue(32, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("oversamples")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Oversampling :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("Number of pixel samples, carefully increase for smoothness")
        del param

    param = lastNode.getParam("paramDefaultInt6")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramMinInt6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxInt6")
    if param is not None:
        param.setValue(64, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("bl")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Bottom left :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("Bottom left")
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("tr")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Top right :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("Top right")
        del param

    param = lastNode.getParam("paramDefaultVec28")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("vectors")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Output vectors :")
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("normalize")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Output normalized :")
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("adsk_degrade")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Degrade :")
        del param

    param = lastNode.getParam("paramHint11")
    if param is not None:
        param.setValue("degrade image for faster render.")
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("fadeout")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Fade in :")
        del param

    param = lastNode.getParam("paramHint12")
    if param is not None:
        param.setValue("Darken samples the less they move")
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("fadein")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("Fade out :")
        del param

    param = lastNode.getParam("paramHint13")
    if param is not None:
        param.setValue("Darken samples the further they move")
        del param

    del lastNode
    # End of node "Shadertoy_pass2"

    # Start of node "Crop_Source"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Source")
    lastNode.setLabel("Crop_Source")
    lastNode.setPosition(4146, 3745)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Source = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Source"

    # Start of node "Crop_Map"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Map")
    lastNode.setLabel("Crop_Map")
    lastNode.setPosition(3950, 3744)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Map = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Map"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupShadertoy_pass2)
    groupShadertoy_pass1.connectInput(0, groupCrop_Map)
    groupShadertoy_pass2.connectInput(0, groupCrop_Source)
    groupShadertoy_pass2.connectInput(1, groupShadertoy_pass1)
    groupCrop_Source.connectInput(0, groupSource)
    groupCrop_Map.connectInput(0, groupMap)

    param = groupShadertoy_pass1.getParam("paramValueFloat0")
    group.getParam("Shadertoy_pass1paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy_pass1.getParam("paramValueBool1")
    group.getParam("Shadertoy_pass1paramValueBool1").setAsAlias(param)
    del param
    param = groupShadertoy_pass1.getParam("paramValueBool2")
    group.getParam("Shadertoy_pass1paramValueBool2").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueFloat0")
    group.getParam("Shadertoy_pass2paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueFloat1")
    group.getParam("Shadertoy_pass2paramValueFloat1").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueFloat2")
    group.getParam("Shadertoy_pass2paramValueFloat2").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueFloat3")
    group.getParam("Shadertoy_pass2paramValueFloat3").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueVec24")
    param.slaveTo(group.getParam("offsetX"), 0, 0)
    param.slaveTo(group.getParam("offsetY"), 1, 0)
    del param
    param = groupShadertoy_pass2.getParam("paramValueInt5")
    group.getParam("Shadertoy_pass2paramValueInt5").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueInt6")
    group.getParam("Shadertoy_pass2paramValueInt6").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueVec27")
    param.slaveTo(group.getParam("CROP_L"), 0, 0)
    param.slaveTo(group.getParam("CROP_B"), 1, 0)
    del param
    param = groupShadertoy_pass2.getParam("paramValueVec28")
    param.slaveTo(group.getParam("CROP_R"), 0, 0)
    param.slaveTo(group.getParam("CROP_T"), 1, 0)
    del param
    param = groupShadertoy_pass2.getParam("paramValueBool9")
    group.getParam("Shadertoy_pass2paramValueBool9").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueBool10")
    group.getParam("Shadertoy_pass2paramValueBool10").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueBool12")
    group.getParam("Shadertoy_pass2paramValueBool12").setAsAlias(param)
    del param
    param = groupShadertoy_pass2.getParam("paramValueBool13")
    group.getParam("Shadertoy_pass2paramValueBool13").setAsAlias(param)
    del param
    param = groupCrop_Source.getParam("size")
    param.setExpression("myWidth = Source.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Source.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = groupCrop_Map.getParam("size")
    param.setExpression("myWidth = Map.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Map.getOutputFormat().height()\nret = myWidth", True, 1)
    del param

    try:
        extModule = sys.modules["Ls_Advect_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
