# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Ls_wireless_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Ls_wireless_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Ls_wireless_GL"

def getLabel():
    return "Ls_wireless_GL"

def getVersion():
    return 1.0

def getIconPath():
    return "Ls_wireless_GL.png"

def getGrouping():
    return "Community/GLSL/Effect"

def getPluginDescription():
    return "Removes wires, or other straight-ish things."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(1, 0.2353, 0.2353)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("START", "Start")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.START = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDouble2DParam("Shadertoy1_2paramValueVec20", "Start track : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueVec20 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDouble2DParam("Shadertoy1_2paramValueVec21", "Start offset : ")
    param.setDefaultValue(0.25, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(0.25, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueVec21 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createSeparatorParam("END", "End")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.END = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat6", "Curve :")
    param.setMinimum(-99.99999999999999, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(-99.99999999999999, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(0.001, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat6 = param
    del param

    param = lastNode.createDouble2DParam("Shadertoy1_2paramValueVec22", "End track : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueVec22 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createDouble2DParam("Shadertoy1_2paramValueVec23", "End offset : ")
    param.setDefaultValue(0.75, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(0.75, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueVec23 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createSeparatorParam("CURVE", "Curve")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CURVE = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool4", "Display curve : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool4 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat7", "Hook : ")
    param.setMinimum(-99.99999999999999, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(-99.99999999999999, 0)
    param.setDisplayMaximum(99.99999999999999, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat7 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat8", "Radius : ")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(5, 0)
    lastNode.Shadertoy1_2paramValueFloat8 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createColorParam("Shadertoy1_2paramValueVec35", "Curve color : ", False)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueVec35 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createSeparatorParam("OPTIONS", "Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OPTIONS = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat9", "Restore size : ")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat10", "Restore mix : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat10 = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat11", "Angle : ")
    param.setMinimum(-359.9999999999999, 0)
    param.setMaximum(359.9999999999999, 0)
    param.setDisplayMinimum(-359.9999999999999, 0)
    param.setDisplayMaximum(359.9999999999999, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat11 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Ls_wireless_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output2"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4139, 4048)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput2 = lastNode

    del lastNode
    # End of node "Output2"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4139, 3645)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Shadertoy1_2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1_2")
    lastNode.setLabel("Shadertoy1_2")
    lastNode.setPosition(4139, 3836)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1_2 = lastNode

    param = lastNode.getParam("paramValueVec20")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("paramValueVec21")
    if param is not None:
        param.setValue(0.25, 0)
        param.setValue(0.25, 1)
        del param

    param = lastNode.getParam("paramValueVec22")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        del param

    param = lastNode.getParam("paramValueVec23")
    if param is not None:
        param.setValue(0.75, 0)
        param.setValue(0.75, 1)
        del param

    param = lastNode.getParam("paramValueBool4")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueVec35")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(0.001, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_wireless pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_wireless for Autodesk Flame\n\n\n// iChannel0: Source, filter = nearest\n// BBox: iChannel0\n\n// Wireless - removes wires, and other straight-ish things\n// lewis@lewissaunders.com\n// TODO:\n//  o width offset for one end of wire\n//  o de-stripe by blurring sample points along wire direction\n//  o detail restore seems not quite right somehow, looks sharpened\n//  o offset start/end, with fade in/out?\n//  o soft edge to wire or at least alpha?\n//  o overlay colours\n//  o respond to image contours/gradients/edges somehow... somehow?\n//  o try adaptive median a la IRank - pull in pixels that are most different to the wire colour\n//  o sort out the whole resolution/pixels/proxy mode/ResDependent mess!\n\n\nfloat myPixelratio = 1.0;\n\nuniform vec2 starttrack = vec2(0.0,0.0); // Start track : (start track)\nuniform vec2 startoffset = vec2(0.25,0.25); // Start offset : (start offset)\nuniform vec2 endtrack = vec2(0.0,0.0); // End track : (end track)\nuniform vec2 endoffset = vec2(0.75,0.75); // End offset : (end offset)\n\nuniform bool overlay = true; // Display curve : (display curve)\nuniform vec3 curveColor = vec3(1.0,1.0,0.0); // Curve color : (curve color)\nuniform float curve = 0.001; // Curve : (curve), min=-100, max=100\nuniform float hook = 0.0; // Hook : (hook), min=-100, max=100\nuniform float radius = 0.0; // Radius : (radius), min=0.0, max=1000\n\n\nuniform float restoresize = 5.0; // Restore size : (restore size), min=0.0, max=1000\nuniform float restoremix = 0.5; // Restore mix : (restore mix), min=0.0, max=1.0\nuniform float angle = 0.0; // Angle : (angle), min=-360, max=360\n\n\n\n\n\n// Angles\n#define pi 3.14159265358979\nfloat deg2rad(float degrees) {\n\treturn degrees/(180.0/pi);\n}\n\n// Return a matrix to rotate about origin\nmat2 rotation(float rads) {\n\treturn mat2(cos(rads), sin(rads), -sin(rads), cos(rads));\n}\n\n// Return barycentric coordinates for p in triangle v1,v2,v3\nvec3 barycentrics(vec2 p, vec2 v1, vec2 v2, vec2 v3) {\n\tfloat det = (v2.y-v3.y)*(v1.x-v3.x)+(v3.x-v2.x)*(v1.y-v3.y);\n\tfloat b1 = ((v2.y-v3.y)*(p.x-v3.x)+(v3.x-v2.x)*(p.y-v3.y))/det;\n\tfloat b2 = ((v3.y-v1.y)*(p.x-v3.x)+(v1.x-v3.x)*(p.y-v3.y))/det;\n\tfloat b3 = 1.0 - b1 - b2;\n\treturn vec3(b1, b2, b3);\n}\n\n// Return interpolated UVs for p in triangle v1,v2,v3 with vertex UVs u1,u2,u3\nvec2 uvinterp(vec2 p, vec2 v1, vec2 v2, vec2 v3, vec2 u1, vec2 u2, vec2 u3) {\n\tvec3 b = barycentrics(p, v1, v2, v3);\n\treturn b.x*u1 + b.y*u2 + b.z*u3;\n}\n\n// Return value at p of implicit quadratic spline function with control points v1,v2,v3\n// As per Loop & Blinn 2005, GPU Gems 3\nfloat splineimplicit(vec2 p, vec2 v1, vec2 v2, vec2 v3) {\n\tvec2 u1 = vec2(0.0, 0.0);\n\tvec2 u2 = vec2(0.5, 0.0);\n\tvec2 u3 = vec2(1.0, 1.0);\n\tvec2 uv = uvinterp(p, v1, v2, v3, u1, u2, u3);\n\treturn uv.x*uv.x - uv.y;\n}\n\n// Return signed distance to zero of implicit spline function with control points v1,v2,v3\nfloat splinesdf(vec2 p, vec2 v1, vec2 v2, vec2 v3) {\n\tfloat f = splineimplicit(p, v1, v2, v3);\n\treturn f / sqrt(dFdx(f)*dFdx(f) + dFdy(f)*dFdy(f));\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 res = vec2(iResolution.x, iResolution.y);\n\tvec2 coords = fragCoord.xy;\n\tvec3 frontpix = texture2D(iChannel0, coords / res).rgb;\n\n\t// Combine pixel tracks and 0-1 offsets\n\tvec2 start = starttrack / vec2(myPixelratio, 1.0) + (startoffset * res);\n\tvec2 end = endtrack / vec2(myPixelratio, 1.0) + (endoffset * res);\n\n\t// Figure out bend, our actual b-spline control point\n\tvec2 slope = normalize(end - start);\n\tvec2 across = vec2(-slope.y, slope.x);\n\tvec2 midpoint = (start + end) / 2.0;\n\tfloat safecurve = curve;\n\tif(abs(curve) < 0.01) {\n\t\t// Shy away from curve being 0, causes mad freakouts\n\t\tsafecurve = 0.01;\n\t}\n\tfloat safehook = hook;\n\tif(abs(curve) < 1.0) {\n\t\t// Extreme hooking when curve is small is problematic\n\t\tsafehook = mix(hook, 0.0, 1.0 - abs(curve));\n\t}\n\tvec2 bend = midpoint + 10.0 * safecurve * across + 30.0 * safehook * slope;\n\n\t// Grad of the scalar field f is tangent to the wire\n\t// We\'re taking the grad and tangent at the current pixel rather than at\n\t// the closest point on the wire, which isn\'t totally accurate\n\tfloat f = splineimplicit(coords, start, bend, end);\n\tvec2 tangent = vec2(dFdx(f), dFdy(f));\n\tvec2 grad = vec2(-tangent.y, tangent.x);\n\tgrad = normalize(grad);\n\ttangent = rotation(deg2rad(angle)) * tangent;\n\ttangent = normalize(tangent);\n\tfloat tiltedradius = radius / cos(deg2rad(angle));\n\n\t// Find the closest point on the wire along our tangent\n\t// We assume the wire is straight here, without much damage it seems\n\tvec2 closest = coords - splinesdf(coords, start, bend, end) * (tangent / cos(deg2rad(angle)));\n\tvec2 closestdirect = coords - splinesdf(coords, start, bend, end) * normalize(vec2(dFdx(f), dFdy(f)));\n\n\tvec3 o;\n\tfloat m;\n\n\tif(abs(splinesdf(coords, start, bend, end)) > radius) {\n\t\t// Miles away from the wire, get outta here\n\t\to = frontpix;\n\t\tm = 0.0;\n\t} else {\n\t\t// Take samples from either side of the closest point on the wire\n\t\tvec2 sample1 = closest + (tangent * tiltedradius);\n\t\tvec2 sample2 = closest - (tangent * tiltedradius);\n\t\tvec3 color1 = texture2D(iChannel0, sample1 / res).rgb;\n\t\tvec3 color2 = texture2D(iChannel0, sample2 / res).rgb;\n\n\t\t// Interpolate between the two samples\n\t\tfloat blend = length(coords - sample1) / length(sample2 - sample1);\n\t\to = mix(color1, color2, blend);\n\n\t\t// Blur along the line, which should give an approximation of the wire we\'re removing\n\t\t// Then we can subtract that from the original to get some detail to mix back\n\t\tvec3 blurred = vec3(0.0);\n\t\tfloat energy = 0.0;\n\t\tfor(float i = -restoresize; i < restoresize; i += 0.333333) {\n\t\t\tvec2 p = coords + i * grad;\n\t\t\tfloat weight = 1.0 - abs(i/restoresize); // Triangular kernel, bite me\n\t\t\tblurred += weight * texture2D(iChannel0, p / res).rgb;\n\t\t\tenergy += weight;\n\t\t}\n\t\tif(energy < 0.001) {\n\t\t\t// We ain\'t gon\' don\' see that\n\t\t\tblurred = o;\n\t\t} else {\n\t\t\tblurred /= energy;\n\t\t}\n\t\to = mix(o, o + (frontpix - blurred), restoremix);\n\n\t\t// Check if we\'re off the start or end\n\t\tvec3 b = barycentrics(closest, start, bend, end);\n\t\tm = 1.0;\n\t\tif(b.y < 0.0) {\n\t\t\tm = 0.0;\n\t\t}\n\t\to = mix(frontpix, o, m);\n\t}\n\n\tif(length(start - end) < 2.0) {\n\t\t// That is an awfully short wire\n\t\to = frontpix;\n\t}\n\n\tif(overlay) {\n\t\tif(length(coords - start) < 3.0) {\n\t\t\tfloat a = smoothstep(0.0, 1.0, 3.0 - length(coords - start));\n\t\t\to = mix(o, curveColor, a);\n\t\t}\n\t\tif(length(coords - end) < 3.0) {\n\t\t\tfloat a = smoothstep(0.0, 1.0, 3.0 - length(coords - end));\n\t\t\to = mix(o, curveColor, a);\n\t\t}\n\t\tif((abs(splinesdf(coords, start, bend, end)) < 2.0) && barycentrics(closestdirect, start, bend, end).y > 0.0) {\n\t\t\tfloat a = smoothstep(0.0, 1.0, 1.0 - abs(splinesdf(coords, start, bend, end)));\n\t\t\to = mix(o, curveColor, a);\n\t\t}\n\t}\n\n\tfragColor = vec4(o, m);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(12, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("starttrack")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Start track :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("start track")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("startoffset")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Start offset :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("start offset")
        del param

    param = lastNode.getParam("paramDefaultVec21")
    if param is not None:
        param.setValue(0.25, 0)
        param.setValue(0.25, 1)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("endtrack")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("End track :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("end track")
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("endoffset")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("End offset :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("end offset")
        del param

    param = lastNode.getParam("paramDefaultVec23")
    if param is not None:
        param.setValue(0.75, 0)
        param.setValue(0.75, 1)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("overlay")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Display curve :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("display curve")
        del param

    param = lastNode.getParam("paramDefaultBool4")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("curveColor")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Curve color :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("curve color")
        del param

    param = lastNode.getParam("paramDefaultVec35")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("curve")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Curve :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("curve")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(0.001, 0)
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("hook")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Hook :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("hook")
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("radius")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Radius :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("radius")
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("restoresize")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Restore size :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("restore size")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("restoremix")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Restore mix :")
        del param

    param = lastNode.getParam("paramHint10")
    if param is not None:
        param.setValue("restore mix")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Angle :")
        del param

    param = lastNode.getParam("paramHint11")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(-359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat11")
    if param is not None:
        param.setValue(359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("angle")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Angle :")
        del param

    param = lastNode.getParam("paramHint12")
    if param is not None:
        param.setValue("angle")
        del param

    del lastNode
    # End of node "Shadertoy1_2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput2.connectInput(0, groupShadertoy1_2)
    groupShadertoy1_2.connectInput(0, groupSource)

    param = groupShadertoy1_2.getParam("paramValueVec20")
    group.getParam("Shadertoy1_2paramValueVec20").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec21")
    group.getParam("Shadertoy1_2paramValueVec21").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec22")
    group.getParam("Shadertoy1_2paramValueVec22").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec23")
    group.getParam("Shadertoy1_2paramValueVec23").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool4")
    group.getParam("Shadertoy1_2paramValueBool4").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec35")
    group.getParam("Shadertoy1_2paramValueVec35").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat6")
    group.getParam("Shadertoy1_2paramValueFloat6").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat7")
    group.getParam("Shadertoy1_2paramValueFloat7").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat8")
    group.getParam("Shadertoy1_2paramValueFloat8").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat9")
    group.getParam("Shadertoy1_2paramValueFloat9").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat10")
    group.getParam("Shadertoy1_2paramValueFloat10").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat11")
    group.getParam("Shadertoy1_2paramValueFloat11").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Ls_wireless_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
