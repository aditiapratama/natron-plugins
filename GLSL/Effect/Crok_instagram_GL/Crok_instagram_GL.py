# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_instagram_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_instagram_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_instagram_GL"

def getLabel():
    return "Crok_instagram_GL"

def getVersion():
    return 1.1

def getIconPath():
    return "Crok_instagram_GL.png"

def getGrouping():
    return "Community/GLSL/Effect"

def getPluginDescription():
    return "This shader gives you the typical Instagram looks."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(1, 0.2353, 0.2353)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("OVERALL", "Overall")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OVERALL = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createChoiceParam("lookChoice", "Look : ")
    entries = [ ("None", ""),
    ("1977", ""),
    ("Apollo", ""),
    ("Brannan", ""),
    ("Early Birds", ""),
    ("Gotham", ""),
    ("Hefe", ""),
    ("Inkwell", ""),
    ("Lily", ""),
    ("Lomo-Fi", ""),
    ("Lord Kelvin", ""),
    ("Nashville", ""),
    ("Poprocket", ""),
    ("Sutro", ""),
    ("Walden", ""),
    ("X-Pro II", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Brannan")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.lookChoice = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat0", "Saturation : ")
    param.setMinimum(-5, 0)
    param.setMaximum(5, 0)
    param.setDisplayMinimum(-5, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat1", "Contrast : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat1 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat2", "Gamma : ")
    param.setMinimum(0.001, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0.001, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat3", "Blend : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createSeparatorParam("SLOPE", "Slope")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SLOPE = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat4", "Red : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat4 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat5", "Green : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat5 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat6", "Blue : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat6 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createSeparatorParam("OFFSET", "Offset")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OFFSET = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat7", "Red : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat7 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat8", "Green : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat8 = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat9", "Blue : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createSeparatorParam("POWER", "Power")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.POWER = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat10", "Red : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat10 = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat11", "Green : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat11 = param
    del param

    param = lastNode.createStringParam("sep26", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep26 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat12", "Blue : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat12 = param
    del param

    param = lastNode.createStringParam("sep27", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep27 = param
    del param

    param = lastNode.createStringParam("sep28", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep28 = param
    del param

    param = lastNode.createSeparatorParam("OPTIONS", "Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OPTIONS = param
    del param

    param = lastNode.createStringParam("sep29", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep29 = param
    del param

    param = lastNode.createStringParam("sep30", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep30 = param
    del param

    param = lastNode.createBooleanParam("isPremult", "Source is premultiplied : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Source is premultiplied.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.isPremult = param
    del param

    param = lastNode.createStringParam("sep31", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep31 = param
    del param

    param = lastNode.createStringParam("sep32", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep32 = param
    del param

    param = lastNode.createSeparatorParam("MASK", "Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MASK = param
    del param

    param = lastNode.createStringParam("sep33", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep33 = param
    del param

    param = lastNode.createStringParam("sep34", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep34 = param
    del param

    param = lastNode.createBooleanParam("useMask", "Use mask : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Use mask input.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.useMask = param
    del param

    param = lastNode.createBooleanParam("invertMask", "Invert mask : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Invert mask input.")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.invertMask = param
    del param

    param = lastNode.createChoiceParam("channelChoose", "Channel : ")
    entries = [ ("Red", ""),
    ("Green", ""),
    ("Blue", ""),
    ("Alpha", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Alpha")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Channel used as mask.")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.channelChoose = param
    del param

    param = lastNode.createStringParam("sep35", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep35 = param
    del param

    param = lastNode.createStringParam("sep36", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep36 = param
    del param

    param = lastNode.createSeparatorParam("MIX", "Mix")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MIX = param
    del param

    param = lastNode.createStringParam("sep37", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep37 = param
    del param

    param = lastNode.createStringParam("sep38", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep38 = param
    del param

    param = lastNode.createDoubleParam("Dissolve2which", "Mix : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Dissolve2which = param
    del param

    param = lastNode.createStringParam("sep39", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep39 = param
    del param

    param = lastNode.createStringParam("sep40", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep40 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_instagram_GL v1.1")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2019)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4035, 4671)
    lastNode.setSize(80, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Source")
    lastNode.setPosition(4035, 3829)
    lastNode.setSize(80, 22)
    lastNode.setColor(1, 1, 1)
    groupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass1")
    lastNode.setLabel("pass1")
    lastNode.setPosition(4164, 4236)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass1 = lastNode

    param = lastNode.getParam("paramValueInt0")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_instagram Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_instagram Matchbox for Autodesk Flame\n\n\n// iChannel0: Source,filter=nearest,wrap=clamp\n// BBox: iChannel0\n\nuniform int look = 3; // Look : (look), min=0, max=15\n\nvec2 resolution = vec2(iResolution.x, iResolution.y);\n\n// Algorithm from Chapter 16 of OpenGL Shading Language\nvec3 saturation(vec3 rgb, float adjustment)\n{\n    const vec3 W = vec3(0.2126, 0.7152, 0.0722);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n\n// Real contrast adjustments by  Miles\nvec3 contrast(vec3 col, vec4 con)\n{\n\tvec3 c = con.rgb * vec3(con.a);\n\tvec3 t = (vec3(1.0) - c) / vec3(2.0);\n\tt = vec3(.5);\n\tcol = (1.0 - c.rgb) * t + c.rgb * col;\nreturn col;\n}\n\nvec3 sig (vec3 s) \n{\n    return 1.0 / (1.0 + (exp(-(s - 0.5) * 7.0))); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / resolution.xy;\n    vec3 org = texture2D(iChannel0, uv).rgb;\n\tfloat alpha = texture2D(iChannel0, uv).a;\n\t\n\tvec3 c = org;\n\tvec3 slope = vec3(1.0);\n\tvec3 offset = vec3(0.0);\n\tvec3 power = vec3(1.0);\n\tfloat sat = 1.0;\n\tfloat con = 1.0;\n\tfloat gam = 1.0;\n\tint f_con = 0;\n\t\n\t\t//  Instagram looks\n\tif ( look == 1 ) \t\n\t{\n\t\tslope = vec3(1.002344, 1.002344, 1.002344);\n\t\toffset = vec3(0.177295, 0.102685, 0.124902);\n\t\tpower = vec3(1.271409, 1.412865, 1.441414);\n\t\tsat = 1.0;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 2 ) \t\n\t{\n\t\tslope = vec3(1.027020, 1.019360, 0.997714);\n\t\toffset = vec3(-0.012891, 0.139844, 0.139844);\n\t\tpower = vec3(1.186510, 1.859080, 1.896160);\n\t\tsat = 0.600441;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 3 ) \t\n\t{\n\t\tslope = vec3(0.842500, 0.956808, 0.805664);\n\t\toffset = vec3(-0.035071, -0.052115, 0.172788);\n\t\tpower = vec3(0.985901, 1.188610, 2.283580);\n\t\tsat = 0.607811;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 4 ) \t\n\t{\n\t\tslope = vec3(1.050910, 0.806908, 0.758130);\n\t\toffset = vec3(-0.052488, -0.022408, -0.043116);\n\t\tpower = vec3(1.294280 , 1.117030, 1.186460);\n\t\tsat = 1.019480;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 5 ) \t\n\t{\n\t\tslope = vec3(1.002633, 1.283138, -1.022549);\n\t\toffset = vec3(-0.894868, -0.192727, 1.629342);\n\t\tpower = vec3(0.694179, 1.469600, 0.000000);\n\t\tsat = 0.026953;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 6 ) \t\n\t{\n\t\tslope = vec3(1.086620, 1.086620, 1.086620);\n\t\toffset = vec3(0.123243, -0.034278, 0.024562);\n\t\tpower = vec3(1.501950, 1.312590, 2.000000);\n\t\tsat = 0.776757;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 7 ) \t\n\t{\n\t\tslope = vec3(-1.956830, 1.401900, 3.810730);\n\t\toffset = vec3(0.013761, -0.143172, -21.281799);\n\t\tpower = vec3(1.497810, 1.277210, 1.985840);\n\t\tsat = 0.000000;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 8 ) \t\n\t{\n\t\tslope = vec3(0.723593, 0.715874, 0.6668720);\n\t\toffset = vec3(0.094940, 0.141620, 0.097916);\n\t\tpower = vec3(0.910115, 1.177830, 1.714090);\n\t\tsat = 0.754297;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 9 ) \t\n\t{\n\t\tslope = vec3(1.435720, 1.250320, 1.186830);\n\t\toffset = vec3(-0.279101, -0.226710, -0.081201);\n\t\tpower = vec3(1.178660, 0.889618, 1.169710);\n\t\tsat = 1.000000;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 10 ) \t\n\t{\n\t\tslope = vec3(0.649603, 0.769153, 0.752337);\n\t\toffset = vec3(0.364704, 0.213678, 0.031597);\n\t\tpower = vec3(1.096905, 1.688936, 1.286792);\n\t\tsat = 0.743945;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 11 ) \t\n\t{\n\t\tslope = vec3(1.24203, 0.87111, 0.52847);\n\t\toffset = vec3(0.01127, 0.21499, 0.48637);\n\t\tpower = vec3(1.58391, 1.92828, 2.36919);\n\t\tsat = 0.56308;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 12 ) \t\n\t{\n\t\tslope = vec3(0.511196, 0.754472, 1.069880);\n\t\toffset = vec3(0.349511, -0.022850, 0.128856);\n\t\tpower = vec3(0.995112, 1.195600, 1.462390);\n\t\tsat = 0.510202;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 13 ) \t\n\t{\n\t\tslope = vec3(1.310010, 1.216570, 1.286590);\n\t\toffset = vec3(-0.068845, -0.278657, -0.001999);\n\t\tpower = vec3(0.507390, 0.963987, 1.188950);\n\t\tsat = 0.328368;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 14 ) \t\n\t{\n\t\tslope = vec3(1.077660, 1.197070, 1.15260);\n\t\toffset = vec3(-0.087942, -0.051414, 0.026514);\n\t\tpower = vec3(1.264750, 1.251250, 1.247840);\n\t\tsat = 0.547076;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 15 ) \t\n\t{\n\t\tslope = vec3(1.047730, 1.109550, 1.226080);\n\t\toffset = vec3(-0.122850, -0.088573,-0.113134);\n\t\tpower = vec3(1.214190, 1.361770, 0.992396);\n\t\tsat = 1.000000;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\t//apply gamma correction \n\tc = pow(c, vec3(gam));\n\t// apply CDL values\n\tc = pow(clamp(((c * slope) + offset), 0.0, 1.0), power);\n\t// apply saturation\n\tc = saturation(c, (sat));\n\t// apply contrast\n\tc = contrast(c, vec4(con));\n\t\n\t//apply film contrast\n\tif ( f_con == 0 )\n\t\tc;\n\telse\n\t\tc = vec3(sig(c));\n\n\tc = clamp(c, 0.0, 1.0);\n\n    fragColor = vec4(c, alpha);\n}\n\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("look")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Look :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("look")
        del param

    param = lastNode.getParam("paramDefaultInt0")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinInt0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt0")
    if param is not None:
        param.setValue(15, 0)
        del param

    del lastNode
    # End of node "pass1"

    # Start of node "pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass2")
    lastNode.setLabel("pass2")
    lastNode.setPosition(4035, 4236)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass2 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_instagram Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_instagram Matchbox for Autodesk Flame\n\n\n// iChannel0: Source,filter=nearest,wrap=clamp\n// iChannel1: pass1_result,filter=nearest,wrap=clamp\n// BBox: iChannel0\n\nuniform float m_sat = 1.0; // Saturation : ,min=-5.0, max=5.0\nuniform float m_con = 1.0; // Contrast : ,min=0.0, max=10.0\nuniform float m_gam = 1.0; // Gamma : ,min=0.001, max=10.0\nuniform float blend = 1.0; // Blend : ,min=0.0, max=10.0\n\nuniform float m_slope_r = 1.0; // Red : ,min=-1000.0, max=1000.0\nuniform float m_slope_g = 1.0; // Green : ,min=-1000.0, max=1000.0\nuniform float m_slope_b = 1.0; // Blue : ,min=-1000.0, max=1000.0\n\nuniform float m_offset_r = 0.0; // Red : ,min=-1000.0, max=1000.0\nuniform float m_offset_g = 0.0; // Green : ,min=-1000.0, max=1000.0\nuniform float m_offset_b = 0.0; // Blue : ,min=-1000.0, max=1000.0\n\nuniform float m_power_r = 1.0; // Red : ,min=-1000.0, max=1000.0\nuniform float m_power_g = 1.0; // Green : ,min=-1000.0, max=1000.0\nuniform float m_power_b = 1.0; // Blue : ,min=-1000.0, max=1000.0\n\n\nuniform int look = 3; // Look : (look), min=0, max=15\n\nvec2 resolution = vec2(iResolution.x, iResolution.y);\n\n// Algorithm from Chapter 16 of OpenGL Shading Language\nvec3 saturation(vec3 rgb, float adjustment)\n{\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n\n// Real contrast adjustments by  Miles\nvec3 contrast(vec3 col, vec4 con)\n{\n\tvec3 c = con.rgb * vec3(con.a);\n\tvec3 t = (vec3(1.0) - c) / vec3(2.0);\n\tt = vec3(.5);\n\tcol = (1.0 - c.rgb) * t + c.rgb * col;\nreturn col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / resolution.xy;\n    vec3 org = texture2D(iChannel0, uv).rgb;\n    vec3 res1 = texture2D(iChannel1, uv).rgb;\n\tfloat alpha = texture2D(iChannel0, uv).a;\n\t\n\tvec3 c = res1;\n\tvec3 slope = vec3(1.0);\n\tvec3 offset = vec3(0.0);\n\tvec3 power = vec3(1.0);\n\tfloat sat = 1.0;\n\tfloat con = 1.0;\n\tfloat gam = 1.0;\n\t\n\tslope = vec3(m_slope_r, m_slope_g, m_slope_b);\n\toffset = vec3(m_offset_r, m_offset_g, m_offset_b);\n\tpower = vec3(m_power_r, m_power_g, m_power_b);\n\tsat = m_sat;\n\tcon = m_con;\n\tgam = m_gam;\t\t\n\n\t//apply gamma correction \n\tc = pow(c, vec3(gam));\n\t// apply CDL values\n\tc = pow(clamp(((c * slope) + offset), 0.0, 1.0), power);\n\t// apply saturation\n\tc = saturation(c, (sat));\n\t// apply contrast\n\tc = contrast(c, vec4(con));\n\t// blend original in/out\n\tc = mix(org, c, blend);\n\t\n    fragColor = vec4(c, alpha);\n}")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(13, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("m_sat")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Saturation :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(-5, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("m_con")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Contrast :")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("m_gam")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Gamma :")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0.001, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("blend")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Blend :")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("m_slope_r")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Red :")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("m_slope_g")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Green :")
        del param

    param = lastNode.getParam("paramDefaultFloat5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat5")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat5")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("m_slope_b")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Blue :")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("m_offset_r")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Red :")
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("m_offset_g")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Green :")
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("m_offset_b")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Blue :")
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("m_power_r")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Red :")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("m_power_g")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Green :")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat11")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("m_power_b")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Blue :")
        del param

    param = lastNode.getParam("paramDefaultFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat12")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat12")
    if param is not None:
        param.setValue(1000, 0)
        del param

    del lastNode
    # End of node "pass2"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(4035, 4163)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(4035, 4330)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult1"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(4068, 3999)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Dot2_2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2_2")
    lastNode.setLabel("Dot2_2")
    lastNode.setPosition(4401, 3998)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2_2 = lastNode

    del lastNode
    # End of node "Dot2_2"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(4401, 4553)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Start of node "Dissolve2"
    lastNode = app.createNode("net.sf.openfx.DissolvePlugin", 1, group)
    lastNode.setScriptName("Dissolve2")
    lastNode.setLabel("Dissolve2")
    lastNode.setPosition(4035, 4543)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupDissolve2 = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Dissolve2"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(3536, 3671)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(3514, 4482)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(4035, 4469)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("copy")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Alpha"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Alpha")
    lastNode.setLabel("Alpha")
    lastNode.setPosition(3689, 4065)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupAlpha = lastNode

    del lastNode
    # End of node "Alpha"

    # Start of node "Red"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Red")
    lastNode.setLabel("Red")
    lastNode.setPosition(3345, 4059)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupRed = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.R")
        del param

    del lastNode
    # End of node "Red"

    # Start of node "Green"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Green")
    lastNode.setLabel("Green")
    lastNode.setPosition(3466, 4062)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupGreen = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.G")
        del param

    del lastNode
    # End of node "Green"

    # Start of node "Blue"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Blue")
    lastNode.setLabel("Blue")
    lastNode.setPosition(3588, 4062)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupBlue = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.B")
        del param

    del lastNode
    # End of node "Blue"

    # Start of node "SwitchChannel"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchChannel")
    lastNode.setLabel("SwitchChannel")
    lastNode.setPosition(3514, 4249)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitchChannel = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(3, 0)
        del param

    del lastNode
    # End of node "SwitchChannel"

    # Start of node "Crop"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop")
    lastNode.setLabel("Crop")
    lastNode.setPosition(3536, 3900)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(400, 0)
        param.setValue(445, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop"

    # Start of node "Blur1"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur1")
    lastNode.setLabel("Blur1")
    lastNode.setPosition(3536, 3793)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(3825, 4239)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Invert1_2"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert1_2")
    lastNode.setLabel("Invert1_2")
    lastNode.setPosition(3733, 4482)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert1_2 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Invert1_2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupDissolve2)
    grouppass1.connectInput(0, groupUnpremult1)
    grouppass2.connectInput(0, groupUnpremult1)
    grouppass2.connectInput(1, grouppass1)
    groupUnpremult1.connectInput(0, groupDot1)
    groupPremult1.connectInput(0, grouppass2)
    groupDot1.connectInput(0, groupInput1)
    groupDot2_2.connectInput(0, groupDot1)
    groupDot5.connectInput(0, groupDot2_2)
    groupDissolve2.connectInput(0, groupDot5)
    groupDissolve2.connectInput(1, groupMerge2)
    groupShuffle1.connectInput(0, groupSwitchChannel)
    groupMerge2.connectInput(0, groupPremult1)
    groupMerge2.connectInput(1, groupDot2)
    groupMerge2.connectInput(2, groupInvert1_2)
    groupAlpha.connectInput(0, groupCrop)
    groupRed.connectInput(0, groupCrop)
    groupGreen.connectInput(0, groupCrop)
    groupBlue.connectInput(0, groupCrop)
    groupSwitchChannel.connectInput(0, groupRed)
    groupSwitchChannel.connectInput(1, groupGreen)
    groupSwitchChannel.connectInput(2, groupBlue)
    groupSwitchChannel.connectInput(3, groupAlpha)
    groupCrop.connectInput(0, groupBlur1)
    groupBlur1.connectInput(0, groupMask)
    groupDot2.connectInput(0, groupDot1)
    groupInvert1_2.connectInput(0, groupShuffle1)

    param = grouppass1.getParam("paramValueInt0")
    param.setExpression("thisGroup.lookChoice.get()", False, 0)
    del param
    param = grouppass2.getParam("paramValueFloat0")
    group.getParam("pass2paramValueFloat0").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat1")
    group.getParam("pass2paramValueFloat1").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat2")
    group.getParam("pass2paramValueFloat2").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat3")
    group.getParam("pass2paramValueFloat3").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat4")
    group.getParam("pass2paramValueFloat4").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat5")
    group.getParam("pass2paramValueFloat5").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat6")
    group.getParam("pass2paramValueFloat6").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat7")
    group.getParam("pass2paramValueFloat7").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat8")
    group.getParam("pass2paramValueFloat8").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat9")
    group.getParam("pass2paramValueFloat9").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat10")
    group.getParam("pass2paramValueFloat10").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat11")
    group.getParam("pass2paramValueFloat11").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat12")
    group.getParam("pass2paramValueFloat12").setAsAlias(param)
    del param
    param = groupUnpremult1.getParam("disableNode")
    param.setExpression("not thisGroup.isPremult.get()", False, 0)
    del param
    param = groupPremult1.getParam("disableNode")
    param.setExpression("not thisGroup.isPremult.get()", False, 0)
    del param
    param = groupDissolve2.getParam("which")
    group.getParam("Dissolve2which").setAsAlias(param)
    del param
    param = groupMerge2.getParam("disableNode")
    param.setExpression("not thisGroup.useMask.get()", False, 0)
    del param
    param = groupSwitchChannel.getParam("which")
    param.setExpression("thisGroup.channelChoose.get()", False, 0)
    del param
    param = groupCrop.getParam("size")
    param.setExpression("myWidth = Blur1.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myHeight = Blur1.getOutputFormat().height()\nret = myHeight", True, 1)
    del param
    param = groupInvert1_2.getParam("disableNode")
    param.setExpression("thisGroup.invertMask.get()", False, 0)
    del param

    try:
        extModule = sys.modules["Crok_instagram_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
