# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Ls_Glint_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Ls_Glint_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Ls_Glint_GL"

def getLabel():
    return "Ls_Glint_GL"

def getVersion():
    return 1

def getIconPath():
    return "Ls_Glint_GL.png"

def getGrouping():
    return "Community/GLSL/Effect"

def getPluginDescription():
    return "Makes highlights bloom into stars."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(1, 0.2353, 0.2353)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("STARS", "STARS")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.STARS = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createSeparatorParam("COLOUR", "Colour")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.COLOUR = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat10", "Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.7, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat10 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat2", "Gain : ")
    param.setMinimum(0, 0)
    param.setMaximum(2000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)
    param.setDefaultValue(40, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat0", "Threshold : ")
    param.setMinimum(0, 0)
    param.setMaximum(200, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(200, 0)
    param.setDefaultValue(0.6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat0 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat1", "Threshold Clamp : ")
    param.setMinimum(0, 0)
    param.setMaximum(200, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(200, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat1 = param
    del param

    param = lastNode.createColorParam("pass1paramValueVec313", "Tint : ", False)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueVec313 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createSeparatorParam("SHAPE", "Shape")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SHAPE = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createDoubleParam("AASAMPLES", "AA Samples : ")
    param.setMinimum(0.1, 0)
    param.setMaximum(16, 0)
    param.setDisplayMinimum(0.1, 0)
    param.setDisplayMaximum(16, 0)
    param.setDefaultValue(1.4, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Increase to avoid stepping artifacts")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.AASAMPLES = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat6", "Falloff : ")
    param.setMinimum(-2, 0)
    param.setMaximum(4, 0)
    param.setDisplayMinimum(-2, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(1.9, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat6 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat5", "Spin : ")
    param.setMinimum(-360, 0)
    param.setMaximum(360, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)
    param.setDefaultValue(48, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat5 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat3", "Size : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(400, 0)
    param.setDisplayMinimum(0.01, 0)
    param.setDisplayMaximum(400, 0)
    param.setDefaultValue(50, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat3 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat4", "Rays : ")
    param.setMinimum(0, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat4 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createSeparatorParam("DISPERSION", "Dispersion")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.DISPERSION = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createDoubleParam("DISPCYCLES", "Dispersion Cycles : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(30, 0)
    param.setDisplayMinimum(0.01, 0)
    param.setDisplayMaximum(30, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("\"How many complete rainbows fit along each ray")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DISPCYCLES = param
    del param

    param = lastNode.createDoubleParam("DISPOFFSET", "Dispersion Offset : ")
    param.setMinimum(-360, 0)
    param.setMaximum(360, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)
    param.setDefaultValue(-45, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Hue-clock the dispersion rainbows")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DISPOFFSET = param
    del param

    param = lastNode.createDoubleParam("DISP", "Dispersion : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.25, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("How much the stars change colour along their arms")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DISP = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createSeparatorParam("BLEND", "Blend")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.BLEND = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createBooleanParam("pass1paramValueBool15", "Use Matte on Glint Source : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueBool15 = param
    del param

    param = lastNode.createBooleanParam("pass1paramValueBool16", "Use Matte to Blend : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Only processes pixels inside the matte - this is really fast for small mattes, but glints will be cut off at the matte edge")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueBool16 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool4", "Screen Highlights : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool4 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool6", "Output Glints Only :")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool6 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("DISTORTBLUR", "DISTORT + BLUR")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.DISTORTBLUR = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createSeparatorParam("GEOMETRY", "Geometry")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.GEOMETRY = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat8", "Barrel Distort : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat8 = param
    del param

    param = lastNode.createDoubleParam("ASPECT", "Aspect : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Stretch stars for anamorphic glints")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ASPECT = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat7", "Twirl : ")
    param.setMinimum(-1080, 0)
    param.setMaximum(1080, 0)
    param.setDisplayMinimum(-1080, 0)
    param.setDisplayMaximum(1080, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat7 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat9", "Barrel Bend : ")
    param.setMinimum(1, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createSeparatorParam("NOISE", "Noise")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NOISE = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createBooleanParam("pass1paramValueBool14", "Use Noise : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueBool14 = param
    del param

    param = lastNode.createDoubleParam("DIRT", "Dirt : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DIRT = param
    del param

    param = lastNode.createDoubleParam("DIRTFREQUENCY", "Frequency : ")
    param.setMinimum(0, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.DIRTFREQUENCY = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createSeparatorParam("BLURGLINTS", "Blur Glints")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.BLURGLINTS = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat0", "Blur : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat0 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat1", "Blur weight R : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat1 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat2", "Blur weight G : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat2 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat3", "Blur weight B : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("SLOW", "Slow Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SLOW = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat11", "Extra Size : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0.01, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat11 = param
    del param

    param = lastNode.createDoubleParam("pass1paramValueFloat12", "Extra Rays : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0.01, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass1paramValueFloat12 = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Ls_Glint_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4221, 4602)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Input1"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Input1")
    lastNode.setLabel("Source")
    lastNode.setPosition(4026, 3894)
    lastNode.setSize(90, 36)
    lastNode.setColor(1, 1, 1)
    groupInput1 = lastNode

    del lastNode
    # End of node "Input1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(4221, 3896)
    lastNode.setSize(90, 36)
    lastNode.setColor(1, 1, 1)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass2")
    lastNode.setLabel("pass2")
    lastNode.setPosition(4026, 4402)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass2 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_Glint Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_Glint Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter = linear , wrap = clamp\n// BBox: iChannel0\n\n\n// Glint pass 2: Gaussian blur horizontal\n// lewis@lewissaunders.com\n\n\n\nuniform float blursize = 0.5;     // Blur : , min=0.0, max=10000.0\nuniform float blursizer = 1.0;    // Blur weight R : , min=0.0, max=10000.0\nuniform float blursizeg = 1.0;    // Blur weight G : , min=0.0, max=10000.0\nuniform float blursizeb = 1.0;    // Blur weight B : , min=0.0, max=10000.0\n\n\n\n// Return a 1D Gaussian blur from texture tex\n// xy: centre of blur in pixels\n// res: pixel size of mipmap level selected by lod param\n// sizes: sigma of blurs, in pixels\n// dir: direction of blur, usually vec2(1.0, 0.0) for horizontal followed by\n//      another pass for vertical\nvec4 gaussianblur(sampler2D tex, vec2 xy, vec2 res, float sizered, float sizegreen, float sizeblue, float sizealpha, vec2 dir) {\n    vec4 sigmas = vec4(sizered, sizegreen, sizeblue, sizealpha);\n\n    // Set up state for incremental coefficient calculation, see GPU Gems\n    // We use vec4s to store four copies of the state, for different size\n    // red/green/blue/alpha blurs\n    vec4 gx = vec4(0.0);\n    vec4 gy = vec4(0.0);\n    vec4 gz = vec4(0.0);\n\n    gx = 1.0 / (sqrt(2.0 * 3.141592653589793238) * sigmas);\n    gy = exp(-0.5 / (sigmas * sigmas));\n    gz = gy * gy;\n    // vec4 a, centre, sample1, sample2 = vec4(0.0);\n    vec4 a = vec4(0.0);\n    vec4 centre = vec4(0.0);\n    vec4 sample1 = vec4(0.0);\n    vec4 sample2 = vec4(0.0);\n\n    // First take the centre sample\n    centre = texture2D(tex, xy / res);\n    a += gx * centre;\n    vec4 energy = gx;\n    gx *= gy;\n    gy *= gz;\n\n    // Now the other samples\n    float support = max(max(max(sigmas.r, sigmas.g), sigmas.b), sigmas.a) * 3.0;\n    for(float i = 1.0; i <= support; i++) {\n        sample1 = texture2D(tex, (xy - i * dir) / res);\n        sample2 = texture2D(tex, (xy + i * dir) / res);\n        a += gx * sample1;\n        a += gx * sample2;\n        energy += 2.0 * gx;\n        gx *= gy;\n        gy *= gz;\n    }\n    \n    a /= energy;\n    \n    if(sizered < 0.1) a.r = centre.r;\n    if(sizegreen < 0.1) a.g = centre.g;\n    if(sizeblue < 0.1) a.b = centre.b;\n    \n    return a; \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = vec2(iResolution.x, iResolution.y);\n    vec2 xy = fragCoord.xy;\n    fragColor = gaussianblur(iChannel0, xy, res, blursize*blursizer, blursize*blursizeg, blursize*blursizeb, 0.0, vec2(1.0, 0.0));\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("blursize")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Blur :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("blursizer")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Blur weight R :")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("blursizeg")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Blur weight G :")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("blursizeb")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Blur weight B :")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10000, 0)
        del param

    del lastNode
    # End of node "pass2"

    # Start of node "Shadertoy1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1")
    lastNode.setLabel("pass3")
    lastNode.setPosition(4221, 4402)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueBool4")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool5")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool6")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_Glint Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_Glint Matchbox for Autodesk Flame\n\n\n// iChannel0: pass2_result, filter = linear , wrap = clamp\n// iChannel1: Source, filter = linear , wrap = clamp\n// iChannel2: Mask, filter = linear , wrap = clamp\n// BBox: iChannel0\n\n\n// Glint pass 3: Gaussian blur vertical and comp\n// lewis@lewissaunders.com\n\n\n\nuniform float blursize = 0.5;     // Blur : , min=0.0, max=10000.0\nuniform float blursizer = 1.0;    // Blur weight R : , min=0.0, max=10000.0\nuniform float blursizeg = 1.0;    // Blur weight G : , min=0.0, max=10000.0\nuniform float blursizeb = 1.0;    // Blur weight B : , min=0.0, max=10000.0\n\nuniform bool screen = true; // Screen Highlights : (Screens the glints over the image instead of simply adding them)\nuniform bool usematte = false; // Use Matte on Glint Source : (Generate glints only from highlights inside the matte; the matte can also be RGB to selectively tint the stars)\nuniform bool useblendmatte = false; // Use Matte to Blend (faster) : (Only processes pixels inside the matte - this is really fast for small mattes, but glints will be cut off at the matte edge)\nuniform bool outputglints = false; // Output Glints Only : (Output just the glints on black)\n\n\n// RGB to Rec709 YPbPr\nvec3 yuv(vec3 rgb) {\n    return mat3(0.2215, -0.1145, 0.5016, 0.7154, -0.3855, -0.4556, 0.0721, 0.5, -0.0459) * rgb;\n}\n\n// Return a 1D Gaussian blur from texture tex\n// xy: centre of blur in pixels\n// res: pixel size of mipmap level selected by lod param\n// sizes: sigma of blurs, in pixels\n// dir: direction of blur, usually vec2(1.0, 0.0) for horizontal followed by\n//      another pass for vertical\nvec4 gaussianblur(sampler2D tex, vec2 xy, vec2 res, float sizered, float sizegreen, float sizeblue, float sizealpha, vec2 dir) {\n    vec4 sigmas = vec4(sizered, sizegreen, sizeblue, sizealpha);\n\n    // Set up state for incremental coefficient calculation, see GPU Gems\n    // We use vec4s to store four copies of the state, for different size\n    // red/green/blue/alpha blurs\n    vec4 gx, gy, gz;\n    gx = 1.0 / (sqrt(2.0 * 3.141592653589793238) * sigmas);\n    gy = exp(-0.5 / (sigmas * sigmas));\n    gz = gy * gy;\n    // vec4 a, centre, sample1, sample2 = vec4(0.0);\n    vec4 a = vec4(0.0);\n    vec4 centre = vec4(0.0);\n    vec4 sample1 = vec4(0.0);\n    vec4 sample2 = vec4(0.0);\n\n    // First take the centre sample\n    centre = texture2D(tex, xy / res);\n    a += gx * centre;\n    vec4 energy = gx;\n    gx *= gy;\n    gy *= gz;\n\n    // Now the other samples\n    float support = max(max(max(sigmas.r, sigmas.g), sigmas.b), sigmas.a) * 3.0;\n    for(float i = 1.0; i <= support; i++) {\n        sample1 = texture2D(tex, (xy - i * dir) / res);\n        sample2 = texture2D(tex, (xy + i * dir) / res);\n        a += gx * sample1;\n        a += gx * sample2;\n        energy += 2.0 * gx;\n        gx *= gy;\n        gy *= gz;\n    }\n\n    a /= energy;\n\n    if(sizered < 0.1) a.r = centre.r;\n    if(sizegreen < 0.1) a.g = centre.g;\n    if(sizeblue < 0.1) a.b = centre.b;\n\n    return a;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 res = vec2(iResolution.x, iResolution.y);\n    vec2 xy = fragCoord.xy;\n\n    vec3 frontpix = texture2D(iChannel1, xy/res).rgb;\n    vec3 mattepix = texture2D(iChannel2, xy/res).rgb;\n\n    vec3 blurred = gaussianblur(iChannel0, xy, res, blursize*blursizer, blursize*blursizeg, blursize*blursizeb, 0.0, vec2(0.0, 1.0)).rgb;\n\n    // Blend with front input\n    vec3 result;\n    float blurredluma;\n    if(useblendmatte == true) {\n        blurred *= mattepix;\n        blurredluma = yuv(blurred.rgb).r; // Luma is used for matte output below\n    }\n    if(screen == true) {\n        result = max(max(frontpix, blurred), blurred+frontpix-(blurred*frontpix));\n    } else {\n        result = frontpix + blurred;\n    }\n    if(outputglints == true) {\n        result = blurred;\n    }\n\n    // Matte output is luma of glint only\n    fragColor = vec4(result, blurredluma);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass2_result")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap2")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap2")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel2")
    if param is not None:
        param.setValue("Mask")
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(7, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("blursize")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Blur :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("blursizer")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Blur weight R :")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("blursizeg")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Blur weight G :")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("blursizeb")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Blur weight B :")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10000, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("screen")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Screen Highlights :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("Screens the glints over the image instead of simply adding them")
        del param

    param = lastNode.getParam("paramDefaultBool4")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("useblendmatte")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Use Matte to Blend")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("faster")
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("outputglints")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Output Glints Only :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("Output just the glints on black")
        del param

    del lastNode
    # End of node "Shadertoy1"

    # Start of node "pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass1")
    lastNode.setLabel("pass1")
    lastNode.setPosition(4026, 4288)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(40, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(50, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(6, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(48, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(1.9, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueVec313")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramValueBool14")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool15")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueBool16")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueVec217")
    if param is not None:
        param.setValue(0.1, 0)
        param.setValue(5, 1)
        del param

    param = lastNode.getParam("paramValueVec318")
    if param is not None:
        param.setValue(0.25, 0)
        param.setValue(-45, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramValueVec219")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1.4, 1)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_Glint Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_Glint Matchbox for Autodesk Flame\n\n\n// iChannel0: Source, filter = linear , wrap = clamp\n// iChannel1: Mask, filter = linear , wrap = clamp\n// BBox: iChannel0\n\n\n// Glint pass 1: convolve with a dynamically generated star function\n// lewis@lewissaunders.com\n\n\n// TODO: option to downres / process / upres, as request by GP-M\n\n\n\nuniform float threshold = 0.6;              // Threshold : (Highlights darker than this are ignored), min=0.0, max=200.0\nuniform float thresholdclamp = 5.0;         // Threshold Clamp : (Highlights brighter than this don\'t increase the glint further, to avoid hot pixels creating huge stars), min=0.0, max=200.0\n\nuniform float gain = 40.0;                  // Gain : (Overall brightness of stars), min=0.0, max=2000.0\nuniform float size = 50.0;                  // Size : (Size of the stars), min=0.01, max=400.0\nuniform float rays = 6.0;                   // Rays : (How many points each star has), min=0.0, max=100.0\nuniform float spin = 48.0;                  // Spin : (Rotate the stars), min=-360.0, max=360.0\nuniform float falloff = 1.9;                // Falloff : (Dissolves away ends of rays), min=-2.0, max=4.0\nuniform float twirl = 0.0;                  // Twirl : (Bend the arms of the stars), min=-1080.0, max=1080.0\nuniform float barrel = 0.0;                 // Barrel Distort : (Bend stars around center of frame), min=-10.0, max=10.0\nuniform float barrelbend = 2.0;             // Barrel Bend : (Bendiness of barrel distortion), min=1.0, max=20.0\nuniform float saturation = 0.7;             // Saturation : (How much star colour comes from the underlying image), min=-10.0, max=10.0\nuniform float extrasize = 1.0;              // Extra Size : (Extra multiplier on size if you want extra big glints - it will get slow, be careful!), min=0.01, max=20.0\nuniform float extrarays = 1.0;              // Extra Rays : (Extra multiplier on ray count if you want many more ray arms - it will get slow, be careful!), min=0.01, max=20.0\n\nuniform vec3 tint = vec3( 1.0 , 1.0 , 1.0); // Tint : (Tint the stars towards this colour)\n\nuniform bool dirton = false; // Use Noise : \nuniform bool usematte = false; // Use Matte on Glint Source : (Generate glints only from highlights inside the matte; the matte can also be RGB to selectively tint the stars)\nuniform bool useblendmatte = false; // Use Matte to Blend (faster) : (Only processes pixels inside the matte - this is really fast for small mattes, but glints will be cut off at the matte edge)\n\nuniform vec2 dirtParam = vec2( 0.1, 5.0 ); // Dirt Parameters : \n\nuniform vec3 dispDispOffsetDispCycles = vec3( 0.25 , -45.0 , 1.0 ); // Dispersion Parameters : \n\nuniform vec2 aspectAA = vec2( 1.0 , 1.4 ); // Aspect and AA samples : \n\n\n\n#define realsize (size*extrasize)\n#define samples (size*extrasize*aspectAA.y)\n#define tau (2.0*3.1415926535)\n\n// RGB to Rec709 YPbPr\nvec3 yuv(vec3 rgb) {\n    return mat3(0.2215, -0.1145, 0.5016, 0.7154, -0.3855, -0.4556, 0.0721, 0.5, -0.0459) * rgb;\n}\n\n// Rec709 YPbPr to RGB\nvec3 rgb(vec3 yuv) {\n    return mat3(1.0, 1.0, 1.0, 0.0, -0.1870, 1.8556, 1.5701, -0.4664, 0.0) * yuv;\n}\n\n// Noise\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy, vec2(12.9898, 78.233))) * 43758.5453) - 0.5;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n    vec2 uv = fragCoord.xy / vec2(iResolution.x, iResolution.y);\n    vec3 frontpix = texture2D(iChannel0, uv).rgb;\n    vec3 mattepix = texture2D(iChannel1, uv).rgb;\n    vec3 sample, glint = vec3(0.0);\n    vec2 offset;\n    float angle;\n\n    // If matte is being used to blend with, we can take a massive shortcut where it\'s black\n    if(useblendmatte && (length(mattepix) < 0.0001)) {\n        fragColor = vec4(frontpix, 0.0);\n        return;\n    }\n\n    // Iterate around rays\n    for(float ray = 0.0; ray < floor(rays*extrarays); ray++) {\n        // Figure out what angle this ray is at\n        angle = ray * tau/floor(rays*extrarays);\n\n        // Spin rotates entire glint\n        angle -= spin/360.0 * tau;\n\n        // Iterate along arm of ray\n        for(float i = realsize/samples; i < realsize; i += realsize/samples) {\n            // Twirl ray around further as we move out\n            angle -= (twirl/samples * i/realsize)/360.0 * tau;\n\n            // Offset along ray direction\n            offset = i/vec2(iResolution.x, iResolution.y) * vec2(cos(angle), sin(angle));\n\n            // Horizontal stretch/squash for anamorphic glints\n            offset.x *= aspectAA.x;\n\n            // Barrel pushes ends of rays away towards edge of frame\n            offset -= pow((i/realsize), barrelbend) * 0.1 * barrel * (-uv+vec2(0.5, 0.5));\n\n            // Read a pixel\n            sample = texture2D(iChannel0, uv + offset).rgb;\n\n            // Affect it by the matte\n            if(usematte) {\n                sample *= texture2D(iChannel1, uv + offset).rgb;\n            }\n\n            // Only keep pixels over threshold\n            sample = min(sample, thresholdclamp);\n            sample *= max(sample - threshold, 0.0);\n\n            // Falloff darkens the ray ends\n            if(falloff > 1.0) {\n                sample *= max(0.0, mix(1.0, -falloff+2.0, i/realsize));\n            } else {\n                sample *= max(0.0, mix(falloff, 1.0, i/realsize));\n            }\n\n            // Do saturation in YUV\n            vec3 sampley = yuv(sample);\n            sampley.gb *= saturation;\n\n            // Hue varies along length of ray\n            float hue = dispDispOffsetDispCycles.b * tau *-i/realsize;\n            hue -= dispDispOffsetDispCycles.g/360.0 * tau;\n\n            // I\'m adventurously using YUV to do a rainbow tint here\n            // The discontinuities in the usual HSV method bug me\n            // and are probably slower than this, which just requires\n            // matrix mults and a bit of trig\n            // Hue is the angle around centre of UV plane\n            vec2 rainbow = vec2(cos(hue), sin(hue)) * sampley.r;\n            sampley.gb = mix(sampley.gb, rainbow, dispDispOffsetDispCycles.r * i/realsize);\n            sample = rgb(sampley);\n\n            if(dirton) {\n                // Multiply by a bit of noise texture\n                float noiz = rand(vec2(42.1, 12.4) + 0.01 * vec2(dirtParam.y/100.0)   * offset);\n                noiz +=      rand(vec2(4.1, 1.4)   + 0.01 * vec2(dirtParam.y/1000.0)  * offset);\n                noiz +=      rand(vec2(2.1, 2.4)   + 0.01 * vec2(dirtParam.y/10000.0) * offset);\n                sample *= mix(1.0, clamp(10.0 * noiz, 0.0, 99.0), dirtParam.x);\n            }\n\n            // Accumulate\n            glint += sample;\n        }\n    }\n    // Normalise all our accumulated samples\n    glint /= floor(rays*extrarays) * samples;\n\n    // Master brightness\n    glint *= gain;\n\n    // Tint in YUV space\n    vec3 glinty = yuv(glint);\n    vec3 tinty = yuv(tint);\n    tinty.gb *= glinty.r; // If U/V aren\'t 0 when Y is black, bad things happen...\n    glinty.gb = mix(glinty.gb, tinty.gb, 4.0*length(tinty.gb));\n    glint = rgb(glinty);\n\n    fragColor = vec4(glint, 0.0);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Mask")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("threshold")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Threshold :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Highlights darker than this are ignored")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(200, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("thresholdclamp")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Threshold Clamp :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Highlights brighter than this don\'t increase the glint further, to avoid hot pixels creating huge stars")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(200, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("gain")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Gain :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Overall brightness of stars")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(40, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(2000, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("size")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Size :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("Size of the stars")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(49.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0.01, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(399.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("rays")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Rays :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("How many points each star has")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(6, 0)
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("spin")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Spin :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("Rotate the stars")
        del param

    param = lastNode.getParam("paramDefaultFloat5")
    if param is not None:
        param.setValue(47.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMinFloat5")
    if param is not None:
        param.setValue(-359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat5")
    if param is not None:
        param.setValue(359.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("falloff")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Falloff :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("Dissolves away ends of rays")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(1.9, 0)
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(-2, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("twirl")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Twirl :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("Bend the arms of the stars")
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(-1080, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(1080, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("barrel")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Barrel Distort :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("Bend stars around center of frame")
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("barrelbend")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Barrel Bend :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("Bendiness of barrel distortion")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("saturation")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Saturation :")
        del param

    param = lastNode.getParam("paramHint10")
    if param is not None:
        param.setValue("How much star colour comes from the underlying image")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("extrasize")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Extra Size :")
        del param

    param = lastNode.getParam("paramHint11")
    if param is not None:
        param.setValue("Extra multiplier on size if you want extra big glints - it will get slow, be careful!")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(0.01, 0)
        del param

    param = lastNode.getParam("paramMaxFloat11")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("extrarays")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Extra Rays :")
        del param

    param = lastNode.getParam("paramHint12")
    if param is not None:
        param.setValue("Extra multiplier on ray count if you want many more ray arms - it will get slow, be careful!")
        del param

    param = lastNode.getParam("paramDefaultFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat12")
    if param is not None:
        param.setValue(0.01, 0)
        del param

    param = lastNode.getParam("paramMaxFloat12")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("tint")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("Tint :")
        del param

    param = lastNode.getParam("paramHint13")
    if param is not None:
        param.setValue("Tint the stars towards this colour")
        del param

    param = lastNode.getParam("paramDefaultVec313")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType14")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName14")
    if param is not None:
        param.setValue("dirton")
        del param

    param = lastNode.getParam("paramLabel14")
    if param is not None:
        param.setValue("Use Noise :")
        del param

    param = lastNode.getParam("paramType15")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName15")
    if param is not None:
        param.setValue("usematte")
        del param

    param = lastNode.getParam("paramLabel15")
    if param is not None:
        param.setValue("Use Matte on Glint Source :")
        del param

    param = lastNode.getParam("paramHint15")
    if param is not None:
        param.setValue("Generate glints only from highlights inside the matte; the matte can also be RGB to selectively tint the stars")
        del param

    param = lastNode.getParam("paramType16")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName16")
    if param is not None:
        param.setValue("useblendmatte")
        del param

    param = lastNode.getParam("paramLabel16")
    if param is not None:
        param.setValue("Use Matte to Blend")
        del param

    param = lastNode.getParam("paramHint16")
    if param is not None:
        param.setValue("faster")
        del param

    param = lastNode.getParam("paramType17")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName17")
    if param is not None:
        param.setValue("dirtParam")
        del param

    param = lastNode.getParam("paramLabel17")
    if param is not None:
        param.setValue("Dirt Parameters :")
        del param

    param = lastNode.getParam("paramDefaultVec217")
    if param is not None:
        param.setValue(0.09999999999999999, 0)
        param.setValue(5, 1)
        del param

    param = lastNode.getParam("paramType18")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName18")
    if param is not None:
        param.setValue("dispDispOffsetDispCycles")
        del param

    param = lastNode.getParam("paramLabel18")
    if param is not None:
        param.setValue("Dispersion Parameters :")
        del param

    param = lastNode.getParam("paramDefaultVec318")
    if param is not None:
        param.setValue(0.25, 0)
        param.setValue(-44.99999999999999, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType19")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName19")
    if param is not None:
        param.setValue("aspectAA")
        del param

    param = lastNode.getParam("paramLabel19")
    if param is not None:
        param.setValue("Aspect and AA samples :")
        del param

    param = lastNode.getParam("paramDefaultVec219")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1.4, 1)
        del param

    del lastNode
    # End of node "pass1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(4221, 4129)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupShadertoy1)
    grouppass2.connectInput(0, grouppass1)
    groupShadertoy1.connectInput(0, grouppass2)
    groupShadertoy1.connectInput(1, groupInput1)
    groupShadertoy1.connectInput(2, groupShuffle1)
    grouppass1.connectInput(0, groupInput1)
    grouppass1.connectInput(1, groupShuffle1)
    groupShuffle1.connectInput(0, groupMask)

    param = grouppass2.getParam("paramValueFloat0")
    group.getParam("pass2paramValueFloat0").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat1")
    group.getParam("pass2paramValueFloat1").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat2")
    group.getParam("pass2paramValueFloat2").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat3")
    group.getParam("pass2paramValueFloat3").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat0")
    param.slaveTo(grouppass2.getParam("paramValueFloat0"), 0, 0)
    del param
    param = groupShadertoy1.getParam("paramValueFloat1")
    param.slaveTo(grouppass2.getParam("paramValueFloat1"), 0, 0)
    del param
    param = groupShadertoy1.getParam("paramValueFloat2")
    param.slaveTo(grouppass2.getParam("paramValueFloat2"), 0, 0)
    del param
    param = groupShadertoy1.getParam("paramValueFloat3")
    param.slaveTo(grouppass2.getParam("paramValueFloat3"), 0, 0)
    del param
    param = groupShadertoy1.getParam("paramValueBool4")
    group.getParam("Shadertoy1paramValueBool4").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool5")
    param.slaveTo(grouppass1.getParam("paramValueBool16"), 0, 0)
    del param
    param = groupShadertoy1.getParam("paramValueBool6")
    group.getParam("Shadertoy1paramValueBool6").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat0")
    group.getParam("pass1paramValueFloat0").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat1")
    group.getParam("pass1paramValueFloat1").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat2")
    group.getParam("pass1paramValueFloat2").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat3")
    group.getParam("pass1paramValueFloat3").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat4")
    group.getParam("pass1paramValueFloat4").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat5")
    group.getParam("pass1paramValueFloat5").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat6")
    group.getParam("pass1paramValueFloat6").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat7")
    group.getParam("pass1paramValueFloat7").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat8")
    group.getParam("pass1paramValueFloat8").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat9")
    group.getParam("pass1paramValueFloat9").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat10")
    group.getParam("pass1paramValueFloat10").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat11")
    group.getParam("pass1paramValueFloat11").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueFloat12")
    group.getParam("pass1paramValueFloat12").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueVec313")
    group.getParam("pass1paramValueVec313").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueBool14")
    group.getParam("pass1paramValueBool14").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueBool15")
    group.getParam("pass1paramValueBool15").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueBool16")
    group.getParam("pass1paramValueBool16").setAsAlias(param)
    del param
    param = grouppass1.getParam("paramValueVec217")
    param.slaveTo(group.getParam("DIRT"), 0, 0)
    param.slaveTo(group.getParam("DIRTFREQUENCY"), 1, 0)
    del param
    param = grouppass1.getParam("paramValueVec318")
    param.slaveTo(group.getParam("DISP"), 0, 0)
    param.slaveTo(group.getParam("DISPOFFSET"), 1, 0)
    param.slaveTo(group.getParam("DISPCYCLES"), 2, 0)
    del param
    param = grouppass1.getParam("paramValueVec219")
    param.slaveTo(group.getParam("ASPECT"), 0, 0)
    param.slaveTo(group.getParam("AASAMPLES"), 1, 0)
    del param

    try:
        extModule = sys.modules["Ls_Glint_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
