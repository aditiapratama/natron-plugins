# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_sketch_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_sketch_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "Crok_sketch_GL"

def getLabel():
    return "Crok_sketch_GL"

def getVersion():
    return 1.1

def getIconPath():
    return "Crok_sketch_GL.png"

def getGrouping():
    return "Community/GLSL/Effect"

def getPluginDescription():
    return "Creates a sketch type look."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(1, 0.2353, 0.2353)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("SETUP", "Setup")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SETUP = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createChoiceParam("fillChoice", "Fill / Outline : ")
    entries = [ ("Both", ""),
    ("Outline", ""),
    ("Fill", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.fillChoice = param
    del param

    param = lastNode.createChoiceParam("paperChoice", "Paper : ")
    entries = [ ("None", ""),
    ("Karo", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.paperChoice = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat7", "Amount : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat7 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat8", "Blend Outline : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat8 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat9", "Blend : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat10", "Blend Fill : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat10 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat11", "Blend : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat11 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createSeparatorParam("LOOK", "Sketch look")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LOOK = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createIntParam("Shadertoy1paramValueInt0", "Strokes : ")
    param.setMinimum(1, 0)
    param.setMaximum(32, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(32, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueInt0 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createIntParam("Shadertoy1paramValueInt1", "Steps : ")
    param.setMinimum(1, 0)
    param.setMaximum(64, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(64, 0)
    param.setDefaultValue(16, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueInt1 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat2", "Amount : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2000, 0)
    param.setDefaultValue(400, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool3", "Enable Vignette : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool3 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createSeparatorParam("BLENDING", "Blending")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.BLENDING = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createChoiceParam("blendChoice", "Blend Modes : ")
    entries = [ ("None", ""),
    ("Add", ""),
    ("Substract", ""),
    ("Multiply", ""),
    ("Linear Burn", ""),
    ("SpotLight Blend", ""),
    ("Soft Light", ""),
    ("Hard Light", ""),
    ("Pin Light", ""),
    ("Screen", ""),
    ("Overlay", ""),
    ("Difference", ""),
    ("Exclusion", ""),
    ("Linear Light", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.blendChoice = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createSeparatorParam("OPTIONS", "Options")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OPTIONS = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createBooleanParam("isPremult", "Source is premultiplied : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Source is premultiplied.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.isPremult = param
    del param

    param = lastNode.createStringParam("sep26", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep26 = param
    del param

    param = lastNode.createStringParam("sep27", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep27 = param
    del param

    param = lastNode.createSeparatorParam("MASK", "Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MASK = param
    del param

    param = lastNode.createStringParam("sep28", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep28 = param
    del param

    param = lastNode.createStringParam("sep29", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep29 = param
    del param

    param = lastNode.createBooleanParam("useMask", "Use mask : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Use mask input.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.useMask = param
    del param

    param = lastNode.createBooleanParam("invertMask", "Invert mask : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Invert mask input.")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.invertMask = param
    del param

    param = lastNode.createChoiceParam("channelChoice", "Channel : ")
    entries = [ ("Red", ""),
    ("Green", ""),
    ("Blue", ""),
    ("Alpha", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Alpha")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("Channel used as mask.")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.channelChoice = param
    del param

    param = lastNode.createStringParam("sep30", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep30 = param
    del param

    param = lastNode.createStringParam("sep31", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep31 = param
    del param

    param = lastNode.createSeparatorParam("MIX", "Mix")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MIX = param
    del param

    param = lastNode.createStringParam("sep32", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep32 = param
    del param

    param = lastNode.createStringParam("sep33", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep33 = param
    del param

    param = lastNode.createDoubleParam("Dissolvewhich", "Mix : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Dissolvewhich = param
    del param

    param = lastNode.createStringParam("sep34", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep34 = param
    del param

    param = lastNode.createStringParam("sep35", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep35 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_sketch_GL v1.1")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE103", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE103 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2019)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4573, 4473)
    lastNode.setSize(80, 30)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Front"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Front")
    lastNode.setLabel("Front")
    lastNode.setPosition(4570, 3364)
    lastNode.setSize(80, 22)
    lastNode.setColor(1, 1, 1)
    groupFront = lastNode

    del lastNode
    # End of node "Front"

    # Start of node "Shadertoy1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1")
    lastNode.setLabel("Shadertoy1")
    lastNode.setPosition(4570, 3874)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1 = lastNode

    param = lastNode.getParam("paramValueInt0")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramValueInt1")
    if param is not None:
        param.setValue(16, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(400, 0)
        del param

    param = lastNode.getParam("paramValueBool3")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueInt4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueInt5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueInt6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_sketch Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_sketch Matchbox for Autodesk Flame\n\n\n// iChannel0: Source, filter=linear, wrap=clamp\n// iChannel1: Noise, filter=linear, wrap=clamp\n// BBox: iChannel0\n\n\n// based on https://www.shadertoy.com/view/XtVGD1 by flockaroo\n// created by florian berger (flockaroo) - 2016\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n// trying to resemle some hand drawing style\n\n\nuniform int AngleNum = 3; // Strokes : (Strokes), min=1, max=32\nuniform int SampNum = 16; // Steps : (Steps), min=1, max=64\nuniform float amount = 400.0; // Amount : (Amount)\nuniform bool vignette = true; // Enable Vignette : (Enable vignette)\n\nuniform int style = 0; // Fill/Outline : ,min=0, max=2\nuniform int paper = 0; // Paper : , min=0, max=1\nuniform int blendModes = 0; // Blend Modes : , min=0, max=13\n\nuniform float p_amount = 1.0; // Amount : , min=0.0\n\nuniform float out_blend = 1.0; // Blend Outline : , min=0.0, max=1.0\nuniform float out_blend2 = 1.0; // Blend : , min=0.0, max=1.0\n\nuniform float fill_blend = 1.0; // Blend Fill : , min=0.0, max=1.0\nuniform float fill_blend2 = 1.0; // Blend : , min=0.0, max=1.0\n\n\nfloat myGlobalTime = iTime *.05;\n\n\n//********************* fonctions ***********************//\n\nfloat overlay( float s, float d )\n{\n\treturn (d < 0.5) ? 2.0 * s * d : 1.0 - 2.0 * (1.0 - s) * (1.0 - d);\n}\n\nfloat softLight( float s, float d )\n{\n\treturn (s < 0.5) ? d - (1.0 - 2.0 * s) * d * (1.0 - d) \n\t\t: (d < 0.25) ? d + (2.0 * s - 1.0) * d * ((16.0 * d - 12.0) * d + 3.0) \n\t\t\t\t\t : d + (2.0 * s - 1.0) * (sqrt(d) - d);\n}\n\nfloat hardLight( float s, float d )\n{\n\treturn (s < 0.5) ? 2.0 * s * d : 1.0 - 2.0 * (1.0 - s) * (1.0 - d);\n}\n\nfloat vividLight( float s, float d )\n{\n\treturn (s < 0.5) ? 1.0 - (1.0 - d) / (2.0 * s) : d / (2.0 * (1.0 - s));\n}\n\nfloat pinLight( float s, float d )\n{\n\treturn (2.0 * s - 1.0 > d) ? 2.0 * s - 1.0 : (s < 0.5 * d) ? 2.0 * s : d;\n}\n\n\nvec4 getBlendedValue( int blendType, vec4 srcColor, vec4 dstColor )\n{\n\tvec4 blendResult = vec4(0,0,0,0);\n\n\n\tif (blendType == 0)\n\t{\n\t\t// None\n\t\tblendResult = dstColor;\n\t}\n\n\tif (blendType == 1)\n\t{\n\t\t// Add\n\t\tblendResult = srcColor + dstColor;\n\t}\n\n\tif (blendType == 2)\n\t{\n\t\t// Substract\n\t\tblendResult = srcColor - dstColor;\n\t}\n\n\tif (blendType == 3)\n\t{\n\t\t// Multiply\n\t\tblendResult = srcColor * dstColor;\n\t}\n\n\tif (blendType == 4)\n\t{\n\t\t// Linear Burn\n\t\tblendResult = srcColor + dstColor - 1.0;\n\t}\n\n\tif (blendType == 5)\n\t{\n\t\t// Spot light Blend\n\t\tblendResult = dstColor * srcColor + dstColor;\n\t}\n\n\tif (blendType == 6)\n\t{\n\t\t// Soft light\n\t\tblendResult.x = softLight(srcColor.x,dstColor.x);\n\t\tblendResult.y = softLight(srcColor.y,dstColor.y);\n\t\tblendResult.z = softLight(srcColor.z,dstColor.z);\t\n\t}\n\n\tif (blendType == 7)\n\t{\n\t\t// Hard light\n\t\tblendResult.x = hardLight(srcColor.x,dstColor.x);\n\t\tblendResult.y = hardLight(srcColor.y,dstColor.y);\n\t\tblendResult.z = hardLight(srcColor.z,dstColor.z);\t\n\t}\n\n\tif (blendType == 8)\n\t{\n\t\t// Pin light\n\t\tblendResult.x = pinLight(srcColor.x,dstColor.x);\n\t\tblendResult.y = pinLight(srcColor.y,dstColor.y);\n\t\tblendResult.z = pinLight(srcColor.z,dstColor.z);\t\n\t}\n\n\tif (blendType == 9)\n\t{\n\t\t// Screen\n\t\tblendResult = 1 - ( 1 - srcColor ) * ( 1 - dstColor );\n\t}\n\n\tif (blendType == 10)\n\t{\n\t\t// Overlay\n\t\tblendResult.x = overlay(srcColor.x,dstColor.x);\n\t\tblendResult.y = overlay(srcColor.y,dstColor.y);\n\t\tblendResult.z = overlay(srcColor.z,dstColor.z);\t\t\n\t}\n\n\tif (blendType == 11)\n\t{\n\t\t// Difference\n\t\tblendResult = abs(srcColor - dstColor);\n\t}\n\n\tif (blendType == 12)\n\t{\n\t\t// Exclusion\n\t\tblendResult = srcColor + dstColor - 2.0 * srcColor * dstColor;\n\t}\n\n\tif (blendType == 13)\n\t{\n\t\t// Linear light\n\t\tblendResult = 2.0 * srcColor + dstColor - 1.0;\n\t}\n\n\treturn blendResult;\n}\n\n\nfloat getLuminance( vec3 rgb )\n{\n\treturn dot(rgb, vec3(0.299, 0.587, 0.114));\n}\n\nvec3 hsv2rgb( vec3 c )\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n\treturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n#define Res iResolution.xy\n#define PI2 6.28318530717959\n\n\n\n\n\n\n\nvec4 getRand(vec2 pos)\n{\n    return texture2D(iChannel1, pos / Res / Res.y * Res.y);\n}\n\nvec4 getCol(vec2 pos)\n{\n    vec2 uv = ((pos - Res.xy * 0.5) / Res.y * Res.y) / Res.xy + 0.5;\n    vec4 c1 = texture2D(iChannel0, uv);\n    vec4 e = smoothstep(vec4(-0.05), vec4(0.0), vec4(uv,vec2(1.0) - uv));\n    c1 = mix(vec4(1.0, 1.0, 1.0, 0.0), c1, e.x * e.y * e.z * e.w);\n    float d = clamp(dot(c1.xyz, vec3(-0.5, 1.0, -0.5)), 0.0, 1.0);\n    vec4 c2 = vec4(0.7);\n    return min(mix(c1, c2, 1.8 * d), 0.7);\n}\n\nvec4 getColHT(vec2 pos)\n{\n \treturn smoothstep(0.95, 1.05, getCol(pos) * 0.8 + 0.2 + getRand(pos * 0.7));\n}\n\nfloat getVal(vec2 pos)\n{\n    vec4 c = getCol(pos);\n \treturn pow(abs(dot(c.xyz, vec3(0.333))), 1.0);\n}\n\nvec2 getGrad(vec2 pos, float eps)\n{\n   \tvec2 d = vec2(eps, 0.0);\n    return vec2(\n        getVal(pos+d.xy)-getVal(pos-d.xy),\n        getVal(pos+d.yx)-getVal(pos-d.yx)\n    ) / eps / 2.0;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n  vec2 pos = fragCoord.xy + 4.0 * Res.y / amount;\n\tvec2 uv = fragCoord.xy / Res;\n\tvec3 org = texture2D(iChannel0, uv).rgb;\n\tvec4 f_col = vec4(0.0);\n\tfloat c_out = 0.0;\n    vec3 c_fill = vec3(0.0);\n    float sum = 0.0;\n    for(int i=0; i<AngleNum; i++)\n    {\n        float ang = PI2 / float(AngleNum) * (float(i) + 0.8);\n        vec2 v = vec2(cos(ang),sin(ang));\n        for(int j=0; j<SampNum; j++)\n        {\n            vec2 dpos  = v.yx * vec2(1.0, -1.0) * float(j) * Res.y / amount;\n            vec2 dpos2 = v.xy * float(j*j) / float(SampNum) * Res.y / amount;\n\t        vec2 g = vec2(0.0);\n            float fact = 0.0;\n            float fact2 = 0.0;\n\n            for(float s=-1.0; s<=1.0; s+=2.0)\n            {\n                vec2 pos2 = pos + s * dpos + dpos2;\n                vec2 pos3 = pos + (s * dpos + dpos2).yx * vec2(1.0, -1.0) * 2.0;\n            \tg = getGrad(pos2, 0.4);\n            \tfact = dot(g, v) - 0.5 * abs(dot(g, v.yx * vec2(1.0, -1.0))) * 1.6;\n            \tfact2 = dot(normalize(g + vec2(0.0001)), v.yx * vec2(1.0,-1.0));\n                fact = clamp(fact, 0.0, 0.05);\n                fact2 = abs(fact2);\n                fact *= 1.0 - float(j) / float(SampNum);\n            \tc_out += fact;\n            \tc_fill += fact2 * getColHT(pos3).xyz;\n            \tsum += fact2;\n            }\n        }\n    }\n    c_out /= float(SampNum * AngleNum) * 0.75 / sqrt(Res.y);\n    c_fill /= sum;\n    c_out = 1.0 - c_out;\n    c_out *= c_out * c_out;\n\n\t// add paper texture\n\tvec3 p_text=vec3(1.0);\n\tif ( paper == 1)\n\t{\n\t\tvec2 s = sin(pos.xy * 0.1 / sqrt(Res.y / amount));\n\t    p_text -= 0.5 * vec3(0.25, 0.1, 0.1) * (exp(-s.x * s.x * 80.0) + exp(-s.y * s.y * 80.0));\n\t\tp_text = mix(vec3(1.0), p_text, p_amount);\n\t}\n\n\t// add vignette\n\tfloat vign = 1.0;\n\tif ( vignette )\n\t{\n\t\tfloat r = length(pos - Res * 0.5) / Res.x;\n\t\tvign = 1.0 - r*r*r;\n\t}\n\n\tfloat matte = 1.0 - clamp(c_out * c_out, 0.0, 1.0);\n\tif ( style == 0 )\n\t{\n\t\tc_out = mix(1.0, c_out, out_blend);\n\t\tc_fill = mix(org, c_fill, fill_blend);\n\t\tf_col = vec4(vec3(c_out * c_fill * p_text * vign), matte);\n\t}\n\tif ( style == 1 )\n\t{\n\t\tf_col.rgb = mix(org, vec3(c_out), out_blend2);\n\t\tf_col = vec4(vec3(f_col.rgb * p_text * vign), matte);\n\t}\n\tif ( style == 2 )\n\t{\n\t\tf_col.rgb = mix(org, vec3(c_fill), fill_blend2);\n\t\tf_col = vec4(vec3(f_col.rgb * p_text * vign), matte);\n\t}\n\n\tf_col = getBlendedValue(blendModes, vec4(org, 1.0), vec4(f_col));\n\n\tfragColor = f_col;\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Noise")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(12, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("AngleNum")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Strokes :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Strokes")
        del param

    param = lastNode.getParam("paramDefaultInt0")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinInt0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxInt0")
    if param is not None:
        param.setValue(32, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("SampNum")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Steps :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Steps")
        del param

    param = lastNode.getParam("paramDefaultInt1")
    if param is not None:
        param.setValue(16, 0)
        del param

    param = lastNode.getParam("paramMinInt1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxInt1")
    if param is not None:
        param.setValue(64, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Amount")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(399.9999999999999, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("vignette")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Enable Vignette :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("Enable vignette")
        del param

    param = lastNode.getParam("paramDefaultBool3")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("style")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Fill/Outline :")
        del param

    param = lastNode.getParam("paramMinInt4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt4")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("paper")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Paper :")
        del param

    param = lastNode.getParam("paramMinInt5")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("blendModes")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Blend Modes :")
        del param

    param = lastNode.getParam("paramMinInt6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt6")
    if param is not None:
        param.setValue(13, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("p_amount")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("out_blend")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Blend Outline :")
        del param

    param = lastNode.getParam("paramDefaultFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("out_blend2")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Blend :")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("fill_blend")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Blend Fill :")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("fill_blend2")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Blend :")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("cpuDriver")
    if param is not None:
        param.set("swr")
        del param

    del lastNode
    # End of node "Shadertoy1"

    # Start of node "Noise"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Noise")
    lastNode.setLabel("Noise")
    lastNode.setPosition(4291, 3879)
    lastNode.setSize(80, 22)
    lastNode.setColor(1, 1, 1)
    groupNoise = lastNode

    del lastNode
    # End of node "Noise"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(4570, 3798)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(4573, 3999)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult1"

    # Start of node "Shuffle1"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1")
    lastNode.setLabel("Shuffle1")
    lastNode.setPosition(4573, 3943)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1 = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("A.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle1"

    # Start of node "Dot2"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot2")
    lastNode.setLabel("Dot2")
    lastNode.setPosition(4805, 3672)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot2 = lastNode

    del lastNode
    # End of node "Dot2"

    # Start of node "Dot3"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot3")
    lastNode.setLabel("Dot3")
    lastNode.setPosition(4805, 3953)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot3 = lastNode

    del lastNode
    # End of node "Dot3"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(4603, 3674)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(3941, 3359)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Shuffle1_2"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Shuffle1_2")
    lastNode.setLabel("Shuffle1_2")
    lastNode.setPosition(3919, 4000)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupShuffle1_2 = lastNode

    param = lastNode.getParam("outputR")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputG")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    param = lastNode.getParam("outputB")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.A")
        del param

    del lastNode
    # End of node "Shuffle1_2"

    # Start of node "Alpha"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Alpha")
    lastNode.setLabel("Alpha")
    lastNode.setPosition(4094, 3753)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupAlpha = lastNode

    del lastNode
    # End of node "Alpha"

    # Start of node "Red"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Red")
    lastNode.setLabel("Red")
    lastNode.setPosition(3750, 3747)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupRed = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.R")
        del param

    del lastNode
    # End of node "Red"

    # Start of node "Green"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Green")
    lastNode.setLabel("Green")
    lastNode.setPosition(3871, 3750)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupGreen = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.G")
        del param

    del lastNode
    # End of node "Green"

    # Start of node "Blue"
    lastNode = app.createNode("net.sf.openfx.ShufflePlugin", 3, group)
    lastNode.setScriptName("Blue")
    lastNode.setLabel("Blue")
    lastNode.setPosition(3993, 3750)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.6, 0.24, 0.39)
    groupBlue = lastNode

    param = lastNode.getParam("outputA")
    if param is not None:
        param.set("B.uk.co.thefoundry.OfxImagePlaneColour.B")
        del param

    del lastNode
    # End of node "Blue"

    # Start of node "SwitchChannel"
    lastNode = app.createNode("net.sf.openfx.switchPlugin", 1, group)
    lastNode.setScriptName("SwitchChannel")
    lastNode.setLabel("SwitchChannel")
    lastNode.setPosition(3919, 3933)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupSwitchChannel = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(3, 0)
        del param

    del lastNode
    # End of node "SwitchChannel"

    # Start of node "Crop"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop")
    lastNode.setLabel("Crop")
    lastNode.setPosition(3941, 3588)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(640, 0)
        param.setValue(480, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop"

    # Start of node "Blur1"
    lastNode = app.createNode("net.sf.cimg.CImgBlur", 4, group)
    lastNode.setScriptName("Blur1")
    lastNode.setLabel("Blur1")
    lastNode.setPosition(3941, 3481)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.8, 0.5, 0.3)
    groupBlur1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Blur1"

    # Start of node "Invert1"
    lastNode = app.createNode("net.sf.openfx.Invert", 2, group)
    lastNode.setScriptName("Invert1")
    lastNode.setLabel("Invert1")
    lastNode.setPosition(3919, 4165)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.48, 0.66, 1)
    groupInvert1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Invert1"

    # Start of node "Merge2"
    lastNode = app.createNode("net.sf.openfx.MergePlugin", 1, group)
    lastNode.setScriptName("Merge2")
    lastNode.setLabel("Merge2")
    lastNode.setPosition(4573, 4152)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupMerge2 = lastNode

    param = lastNode.getParam("operation")
    if param is not None:
        param.set("copy")
        del param

    param = lastNode.getParam("enableMask_Mask")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Merge2"

    # Start of node "Dot6"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot6")
    lastNode.setLabel("Dot6")
    lastNode.setPosition(4464, 3674)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot6 = lastNode

    del lastNode
    # End of node "Dot6"

    # Start of node "Dissolve"
    lastNode = app.createNode("net.sf.openfx.DissolvePlugin", 1, group)
    lastNode.setScriptName("Dissolve")
    lastNode.setLabel("Dissolve")
    lastNode.setPosition(4573, 4330)
    lastNode.setSize(80, 34)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupDissolve = lastNode

    param = lastNode.getParam("which")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "Dissolve"

    # Start of node "Dot4"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot4")
    lastNode.setLabel("Dot4")
    lastNode.setPosition(4983, 3672)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot4 = lastNode

    del lastNode
    # End of node "Dot4"

    # Start of node "Dot5"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot5")
    lastNode.setLabel("Dot5")
    lastNode.setPosition(4983, 4340)
    lastNode.setSize(15, 15)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot5 = lastNode

    del lastNode
    # End of node "Dot5"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupDissolve)
    groupShadertoy1.connectInput(0, groupUnpremult1)
    groupShadertoy1.connectInput(1, groupNoise)
    groupUnpremult1.connectInput(0, groupDot1)
    groupPremult1.connectInput(0, groupShuffle1)
    groupShuffle1.connectInput(0, groupShadertoy1)
    groupShuffle1.connectInput(1, groupDot3)
    groupDot2.connectInput(0, groupDot1)
    groupDot3.connectInput(0, groupDot2)
    groupDot1.connectInput(0, groupFront)
    groupShuffle1_2.connectInput(0, groupSwitchChannel)
    groupAlpha.connectInput(0, groupCrop)
    groupRed.connectInput(0, groupCrop)
    groupGreen.connectInput(0, groupCrop)
    groupBlue.connectInput(0, groupCrop)
    groupSwitchChannel.connectInput(0, groupRed)
    groupSwitchChannel.connectInput(1, groupGreen)
    groupSwitchChannel.connectInput(2, groupBlue)
    groupSwitchChannel.connectInput(3, groupAlpha)
    groupCrop.connectInput(0, groupBlur1)
    groupBlur1.connectInput(0, groupMask)
    groupInvert1.connectInput(0, groupShuffle1_2)
    groupMerge2.connectInput(0, groupPremult1)
    groupMerge2.connectInput(1, groupDot6)
    groupMerge2.connectInput(2, groupInvert1)
    groupDot6.connectInput(0, groupDot1)
    groupDissolve.connectInput(0, groupDot5)
    groupDissolve.connectInput(1, groupMerge2)
    groupDot4.connectInput(0, groupDot2)
    groupDot5.connectInput(0, groupDot4)

    param = groupShadertoy1.getParam("paramValueInt0")
    group.getParam("Shadertoy1paramValueInt0").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueInt1")
    group.getParam("Shadertoy1paramValueInt1").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat2")
    group.getParam("Shadertoy1paramValueFloat2").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool3")
    group.getParam("Shadertoy1paramValueBool3").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueInt4")
    param.setExpression("thisGroup.fillChoice.get()", False, 0)
    del param
    param = groupShadertoy1.getParam("paramValueInt5")
    param.setExpression("thisGroup.paperChoice.get()", False, 0)
    del param
    param = groupShadertoy1.getParam("paramValueInt6")
    param.setExpression("thisGroup.blendChoice.get()", False, 0)
    del param
    param = groupShadertoy1.getParam("paramValueFloat7")
    group.getParam("Shadertoy1paramValueFloat7").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat8")
    group.getParam("Shadertoy1paramValueFloat8").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat9")
    group.getParam("Shadertoy1paramValueFloat9").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat10")
    group.getParam("Shadertoy1paramValueFloat10").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat11")
    group.getParam("Shadertoy1paramValueFloat11").setAsAlias(param)
    del param
    param = groupUnpremult1.getParam("disableNode")
    param.setExpression("not thisGroup.isPremult.get()", False, 0)
    del param
    param = groupPremult1.getParam("disableNode")
    param.setExpression("not thisGroup.isPremult.get()", False, 0)
    del param
    param = groupSwitchChannel.getParam("which")
    param.setExpression("thisGroup.channelChoice.get()", False, 0)
    del param
    param = groupCrop.getParam("size")
    param.setExpression("myWidth = Blur1.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myHeight = Blur1.getOutputFormat().height()\nret = myHeight", True, 1)
    del param
    param = groupInvert1.getParam("disableNode")
    param.setExpression("thisGroup.invertMask.get()", False, 0)
    del param
    param = groupMerge2.getParam("disableNode")
    param.setExpression("not thisGroup.useMask.get()", False, 0)
    del param
    param = groupDissolve.getParam("which")
    group.getParam("Dissolvewhich").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Crok_sketch_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
