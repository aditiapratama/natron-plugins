# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# Natron PyPlug
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Lightning_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Lightning_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Lightning_GL"

def getLabel():
    return "Lightning_GL"

def getVersion():
    return 1

def getIconPath():
    return "Lightning_GL.png"

def getGrouping():
    return "Community/GLSL/Source"

def getPluginDescription():
    return "Lightning version 1.0"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.7, 0.7, 0.7)

    # Create the user parameters
    lastNode.controls = lastNode.createPageParam("controls", "Controls")
    param = lastNode.createSeparatorParam("seperator", "Lighting Setup")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Configure the lightning settings here")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperator = param
    del param

    param = lastNode.createDoubleParam("roatation", "Rotation")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-3, 0)
    param.setDisplayMaximum(3, 0)
    param.setDefaultValue(-0.65, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set the lightning rotation")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.roatation = param
    del param

    param = lastNode.createDoubleParam("size", "Size")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.9, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set the size of the bolt")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.size = param
    del param

    param = lastNode.createDouble2DParam("origin", "Origin")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-3, 0)
    param.setDisplayMaximum(3, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(-3, 1)
    param.setDisplayMaximum(3, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set starting point")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.origin = param
    del param

    param = lastNode.createIntParam("branches", "Branches")
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(15, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set number of branches")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.branches = param
    del param

    param = lastNode.createDoubleParam("noise", "Noise")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1.93, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("set noise detail for bolts")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.noise = param
    del param

    param = lastNode.createDoubleParam("smoothness", "Smoothness")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1.9, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set the smoothing level for bolt movment")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.smoothness = param
    del param

    param = lastNode.createDoubleParam("glow", "Glow")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set level of bolt glow")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.glow = param
    del param

    param = lastNode.createDoubleParam("gain", "Gain")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(2.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set level of gain")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.gain = param
    del param

    param = lastNode.createDoubleParam("speed", "Speed")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(30, 0)
    param.setDefaultValue(15, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set speed of bolt movement")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.speed = param
    del param

    param = lastNode.createDoubleParam("frequency", "Bolt Frequency")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.649, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("The frequency of visible bolts.")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.frequency = param
    del param

    param = lastNode.createSeparatorParam("seperator2", "Motion Blur")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Motion Blur settings")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperator2 = param
    del param

    param = lastNode.createBooleanParam("enableblur", "Enable Blur")

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set motion blur on/off")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.enableblur = param
    del param

    param = lastNode.createDoubleParam("samples", "Blur Samples")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1.52, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.controls.addParam(param)

    # Set param properties
    param.setHelp("Set number of blur samples")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.samples = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['controls', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Lightning_2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Lightning_2")
    lastNode.setLabel("Lightning")
    lastNode.setPosition(60, 40)
    lastNode.setSize(104, 32)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupLightning_2 = lastNode

    param = lastNode.getParam("mousePosition")
    if param is not None:
        param.setValue(1093, 0)
        param.setValue(736, 1)
        del param

    param = lastNode.getParam("mouseClick")
    if param is not None:
        param.setValue(-6, 0)
        param.setValue(-1, 1)
        del param

    param = lastNode.getParam("mousePressed")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(-0.65, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(0.3, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1.93, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(0.9, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(0.649, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(1.9, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(2.2, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0.3, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(15, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(1.52, 0)
        del param

    param = lastNode.getParam("paramValueInt11")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramValueVec212")
    if param is not None:
        param.setValue(0.5, 0)
        param.setValue(1, 1)
        del param

    param = lastNode.getParam("paramValueBool14")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("imageShaderFileName")
    if param is not None:
        param.setValue("/media/tom/Projects/Natron/Shadertoys/Lightning/crok_lightning/shaders/natron_lightning.glsl")
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//#version 120\n\n// based on https://www.shadertoy.com/view/XlsGRs\n// srtuss, 2015\n\n// volumetric cloud tunnel, a single light source, lightning and something that is supposed\n// to look like raindrops. :)\n// visuals are inspired by a piece of music, 2d-texture based 3d noise function by iq.\n// the code could need some cleaning, but i don\'t want to do that right now.\n\n//uniform sampler2D iChannel0;\n//uniform float adsk_time;\nuniform float adsk_result_w, adsk_result_h;\nuniform float speed, rot, glow, noise, size, bias, smoothness, gain, p1, p2;\nuniform float moblur_samples, moblur_shutter;\nuniform int branches;\nuniform vec2 center;\nvec2 resolution = vec2(adsk_result_w, adsk_result_h);\n\nuniform bool out_gamma;\nuniform bool enbl_moblur;\n\nfloat adsk_time = iTime;\nfloat time = adsk_time * 0.05 + 0.69;\n\n#define pi 3.1415926535897932384626433832795\n\nstruct ITSC\n{\n\tvec3 p;\n\tfloat dist;\n\tvec3 n;\n    vec2 uv;\n};\n\nvec3 p = vec3(0.0);\nfloat dist = 0.0;\nvec3 n = vec3(0.0);\nvec2 uv = vec2(0.0);\n\n\n\n\nvoid tPlane(inout ITSC hit, vec3 ro, vec3 rd, vec3 o, vec3 n, vec3 tg, vec2 si)\n{\n    vec2 uv = vec2(0.0);\n    ro -= o;\n    float t = -dot(ro, n) / dot(rd, n);\n    if(t < 0.0)\n        return;\n    vec3 its = ro + rd * t;\n    uv.x = dot(its, tg);\n    uv.y = dot(its, cross(tg, n));\n    if(abs(uv.x) > si.x || abs(uv.y) > si.y)\n        return;\n    \n    {\n        hit.dist = t;\n        hit.uv = uv;\n    }\n    return;\n}\n\n\n// Using Ashima\'s simplex noise\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\nvec2 rotate(vec2 p, float a)\n{\n\treturn vec2(p.x * cos(a) - p.y * sin(a), p.x * sin(a) + p.y * cos(a));\n}\n\nfloat hash1(float p)\n{\n\treturn fract(sin(p * 172.435) * 29572.683) - 0.5;\n}\n\nfloat ns(float p)\n{\n\tfloat fr = fract(p);\n\tfloat fl = floor(p);\n\treturn mix(hash1(fl), hash1(fl + 1.0), fr);\n}\n\nfloat fbm(float p)\n{\n\treturn (ns(p) * 0.4 + ns(p * 2.0 - 10.0) * 0.125 + ns(p * 8.0 + 10.0) * 0.025);\n}\n\nfloat fbmd(float p)\n{\n\tfloat h = 0.01;\n\treturn atan(fbm(p + h) - fbm(p - h), h);\n}\n\nfloat arcsmp(float x, float seed)\n{\n\treturn fbm(x * noise + seed * 1111.111)  * (1.0 - exp(-x * 5.0));\n}\n\nfloat arc(vec2 p, float seed, float len)\n{\n\tp *= len;\n\tfloat v = abs(p.y - arcsmp(p.x, seed));\n\tv += exp((2.0 - p.x) * -6.0);\n\tv = exp(v * -60. * (-gain +5.0)) + exp(v * -10.0) * glow * .1;\n\tv *= smoothstep(0.0, 0.05, p.x);\n\treturn v;\n}\n\nfloat arcc(vec2 p, float sd)\n{\n\tfloat v = 0.0;\n\tfloat rnd = fract(sd);\n\tfloat sp = 0.0;\n\tv += arc(p, sd, 1.0);\n\tfor(int i = 0; i < branches - 1; i ++)\n\t{\n\t\tsp = rnd + 0.01;\n\t\tvec2 mrk = vec2(sp, arcsmp(sp, sd));\n\t\tv += arc(rotate(p - mrk, fbmd(sp)), mrk.x, mrk.x * 0.4 + 1.5);\n\t\trnd = fract(sin(rnd * 195.2837) * 1720.938);\n\t}\n\treturn v;\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\t\n    vec2 uv = fragCoord/iResolution.xy - center;\n    uv.x *= iResolution.x / iResolution.y;\n    //vec2 uv = (gl_FragCoord.xy / resolution.xy) - center;\n    //uv.x *= resolution.x / resolution.y;\n    \n    vec3 ro = vec3(0.0);\n    vec3 rd = normalize(vec3(uv, 1.2));\n    vec3 col = vec3(0.0);\n    vec4 rnd = vec4(0.1, 0.2, 0.3, 0.4);\n \n    float arcv = 0.0;\n\tfloat arclight = 0.0;\n    float v = 0.0;\n    rnd = fract(sin(rnd * 1.111111) * 298729.258972);\n    float ts = rnd.z * 1.61803398875 + 1.0;\n    float arcfl = ts * rot;\n        \n    ITSC arcits;\n    arcits.dist = 1e38;\n    float arcz = ro.z + 1.0 + rnd.x / size;\n    tPlane(arcits, ro, rd, vec3(0.0, 0.0, arcz), vec3(0.0, 0.0, -1.0), vec3(cos(arcfl), sin(arcfl), 0.0), vec2(2.0));\n\t\n\tvec3 arccol = vec3(0.9, 0.7, 0.7);\n\t\n\tif (enbl_moblur)\n\t{\n\t \tfor(float mytime = time-moblur_shutter /2.0; mytime < time+moblur_shutter /2.0; mytime += moblur_shutter /moblur_samples)\n\t\t{\n\t\t    float arcseed = floor(mytime * 12.0 * speed + rnd.y);\n\t\t    if(arcits.dist < 20.0)\n\t\t        {\n\t\t            arcits.uv *= 0.8;\n\t\t            v = arcc(vec2(arcits.uv.x, arcits.uv.y * sign(arcits.uv.x)) * 1.4, arcseed * 0.0003333 / -smoothness);\n\t\t        }\n\t\t\t    arcv += v;\n\t\t}\n\n\t\tarcv /= moblur_samples;\n\t}\n\t\n\telse\n\t{\n\t    float arcseed = floor(time * 12.0 * speed + rnd.y);\n\t\tif(arcits.dist < 20.0)\n\t\t{\n            arcits.uv *= 0.8;\n            // 2 bolts from the center \n\t\t\t//v = arcc(vec2(abs(arcits.uv.x), arcits.uv.y * sign(arcits.uv.x)) * 1.4, arcseed * 0.0033333);\n            v = arcc(vec2(arcits.uv.x, arcits.uv.y * sign(arcits.uv.x)) * 1.4, arcseed * 0.0003333 / -smoothness);\n\t\t\t\n        }\n    arcv += v;\n\t}\n\n    col = mix(col, arccol, clamp(arcv, 0.0, 1.0));\n    col = pow(col, vec3(1.0, 0.8, 0.5) * 1.5) * 1.5;\n\t\n    float blend = snoise(vec2(adsk_time * 200.));\n    blend = clamp((blend-(1.0-bias))*9.0, 0.0, 1.0);\n\tcol = mix(vec3(0.0), col, blend);\n\n\tif ( out_gamma )\n\t{\n\t\tcol = pow(col, vec3(2.2));\n\t}\n\t\n\tfragColor = vec4(col, 1.0);\n}\n")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(15, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("rot")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("rot")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("glow")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("glow")
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("noise")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("noise")
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("size")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("size")
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("bias")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("bias")
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("smoothness")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("smoothness")
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("gain")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("gain")
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("moblur_shutter")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("moblur_shutter")
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("adsk_time")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("adsk_time")
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("speed")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("speed")
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("moblur_samples")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("moblur_samples")
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("branches")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("branches")
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("center")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("center")
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("out_gamma")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("out_gamma")
        del param

    param = lastNode.getParam("paramType14")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName14")
    if param is not None:
        param.setValue("enbl_moblur")
        del param

    param = lastNode.getParam("paramLabel14")
    if param is not None:
        param.setValue("enbl_moblur")
        del param


    # Create the user parameters
    lastNode.settings = lastNode.createPageParam("settings", "Settings")
    param = lastNode.createSeparatorParam("boltseperator", "Bolt Settings")

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Main bolt settings")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.boltseperator = param
    del param

    param = lastNode.createDoubleParam("rot", "Rotation")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(-5, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(-0.76, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Lightning rotation")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(-1.73, 0)
    lastNode.rot = param
    del param

    param = lastNode.createDoubleParam("size", "Size")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.9, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Size of bolt")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.size = param
    del param

    param = lastNode.createDouble2DParam("center", "Center")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)
    param.setMinimum(-2147483648, 1)
    param.setMaximum(2147483647, 1)
    param.setDisplayMinimum(0, 1)
    param.setDisplayMaximum(5, 1)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.center = param
    del param

    param = lastNode.createIntParam("branches", "Branches")
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(15, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Bolt branches")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.branches = param
    del param

    param = lastNode.createDoubleParam("noise", "Noise")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1.93, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Noise detail")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.noise = param
    del param

    param = lastNode.createDoubleParam("smooth", "Smoothness")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1.9, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.smooth = param
    del param

    param = lastNode.createDoubleParam("glow", "Glow")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Bolt glow")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.glow = param
    del param

    param = lastNode.createDoubleParam("gain", "Gain")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(4, 0)
    param.setDefaultValue(2.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.gain = param
    del param

    param = lastNode.createDoubleParam("speed", "Speed")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(30, 0)
    param.setDefaultValue(15, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.speed = param
    del param

    param = lastNode.createDoubleParam("frequency", "Bolt Frequency")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    param.setValue(0.649, 0)
    lastNode.frequency = param
    del param

    param = lastNode.createSeparatorParam("seperate", "Motion Blur")

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.seperate = param
    del param

    param = lastNode.createBooleanParam("enableblur", "Enable Blur")

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("Enable motion blur")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.enableblur = param
    del param

    param = lastNode.createDoubleParam("blursamples", "Blur Samples")
    param.setMinimum(-2147483648, 0)
    param.setMaximum(2147483647, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1.52, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.settings.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.blursamples = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['settings', 'Controls', 'Node', 'Info'])
    lastNode.refreshUserParamsGUI()
    del lastNode
    # End of node "Lightning_2"

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output1")
    lastNode.setPosition(60, 183)
    lastNode.setSize(104, 31)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupLightning_2)

    param = groupLightning_2.getParam("paramValueFloat0")
    param.setExpression("thisGroup.roatation.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat1")
    param.setExpression("thisGroup.glow.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat2")
    param.setExpression("thisGroup.noise.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat3")
    param.setExpression("thisGroup.size.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat4")
    param.setExpression("thisGroup.frequency.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat5")
    param.setExpression("thisGroup.smoothness.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat6")
    param.setExpression("thisGroup.gain.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat9")
    param.setExpression("thisGroup.speed.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueFloat10")
    param.setExpression("thisGroup.samples.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueInt11")
    param.setExpression("thisGroup.branches.get()", False, 0)
    del param
    param = groupLightning_2.getParam("paramValueVec212")
    param.setExpression("thisGroup.origin.get()[0]", False, 0)
    param.setExpression("thisGroup.origin.get()[1]", False, 1)
    del param
    param = groupLightning_2.getParam("paramValueBool14")
    param.setExpression("thisGroup.enableblur.get()", False, 0)
    del param

    try:
        extModule = sys.modules["Lightning_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
