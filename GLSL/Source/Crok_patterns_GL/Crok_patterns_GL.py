# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_patterns_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_patterns_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_patterns_GL"

def getLabel():
    return "Crok_patterns_GL"

def getVersion():
    return 1.0

def getIconPath():
    return "Crok_patterns_GL.png"

def getGrouping():
    return "Community/GLSL/Source"

def getPluginDescription():
    return "Creates diffferent patterns."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.9529, 0.4314, 1)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createChoiceParam("patternType", "Pattern type : ")
    entries = [ ("Polka dots", ""),
    ("Loading screen", ""),
    ("Zig Zag", ""),
    ("Iching", ""),
    ("Truchet", ""),
    ("Binary", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.patternType = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createSeparatorParam("TRANSFORM", "Transform")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.TRANSFORM = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat2", "Scale : ")
    param.setMinimum(-49.99999999999999, 0)
    param.setMaximum(49.99999999999999, 0)
    param.setDisplayMinimum(-49.99999999999999, 0)
    param.setDisplayMaximum(49.99999999999999, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat3", "Aspect : ")
    param.setMinimum(-99.99999999999999, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(-99.99999999999999, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat4", "Rotation : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-1000, 0)
    param.setDisplayMaximum(1000, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat4 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDouble2DParam("Shadertoy1paramValueVec25", "Position : ")
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(0.5, 1)
    param.restoreDefaultValue(1)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueVec25 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createSeparatorParam("TIMING", "Timing")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.TIMING = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat0", "Speed :")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-1000, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(10, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat1", "Offset :")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-1000, 0)
    param.setDisplayMaximum(1000, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat1 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createSeparatorParam("POLKA_DOTS", "Polka dots")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.POLKA_DOTS = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat7", "Radius : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.7, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat7 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat8", "Noise : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat8 = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("LOADING_SCREEN", "Loading screen")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LOADING_SCREEN = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat11", "In circle : ")
    param.setMinimum(0, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(20, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat11 = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat12", "Out circle : ")
    param.setMinimum(0, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(30, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat12 = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat13", "Sharpness : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.98, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat13 = param
    del param

    param = lastNode.createStringParam("sep26", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep26 = param
    del param

    param = lastNode.createStringParam("sep27", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep27 = param
    del param

    param = lastNode.createSeparatorParam("ZIGZAG", "Zig Zag")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ZIGZAG = param
    del param

    param = lastNode.createStringParam("sep28", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep28 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat9", "Sharpness : ")
    param.setMinimum(0.01, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0.01, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.98, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep29", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep29 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat10", "Style : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(-100, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat10 = param
    del param

    param = lastNode.createStringParam("sep30", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep30 = param
    del param

    param = lastNode.createStringParam("sep31", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep31 = param
    del param

    param = lastNode.createSeparatorParam("ITCHING", "Itching")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.ITCHING = param
    del param

    param = lastNode.createStringParam("sep32", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep32 = param
    del param

    param = lastNode.createStringParam("sep33", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep33 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat14", "Amount : ")
    param.setMinimum(0, 0)
    param.setMaximum(2, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.7, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat14 = param
    del param

    param = lastNode.createStringParam("sep34", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep34 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat15", "Detail : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat15 = param
    del param

    param = lastNode.createStringParam("sep35", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep35 = param
    del param

    param = lastNode.createStringParam("sep36", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep36 = param
    del param

    param = lastNode.createSeparatorParam("TRUCHET", "Truchet")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.TRUCHET = param
    del param

    param = lastNode.createStringParam("sep37", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep37 = param
    del param

    param = lastNode.createStringParam("sep38", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep38 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1paramValueBool17", "Additional curvature : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueBool17 = param
    del param

    param = lastNode.createStringParam("sep39", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep39 = param
    del param

    param = lastNode.createIntParam("Shadertoy1paramValueInt16", "Popup : ")
    param.setMinimum(0, 0)
    param.setMaximum(8, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(8, 0)
    param.setDefaultValue(6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueInt16 = param
    del param

    param = lastNode.createStringParam("sep40", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep40 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat18", "Frequence : ")
    param.setMinimum(-100, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(-100, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat18 = param
    del param

    param = lastNode.createStringParam("sep41", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep41 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1paramValueFloat19", "Amplitude : ")
    param.setMinimum(-100, 0)
    param.setMaximum(100, 0)
    param.setDisplayMinimum(-100, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(-0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1paramValueFloat19 = param
    del param

    param = lastNode.createStringParam("sep42", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep42 = param
    del param

    param = lastNode.createStringParam("sep43", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep43 = param
    del param

    param = lastNode.createSeparatorParam("OUTPUT", "Output")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OUTPUT = param
    del param

    param = lastNode.createStringParam("sep44", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep44 = param
    del param

    param = lastNode.createStringParam("sep45", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep45 = param
    del param

    param = lastNode.createChoiceParam("Shadertoy1bbox", "Output BBox : ")
    param.setDefaultValue(1)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1bbox = param
    del param

    param = lastNode.createChoiceParam("Shadertoy1NatronParamFormatChoice", "Format : ")
    param.setDefaultValue(6)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.Shadertoy1NatronParamFormatChoice = param
    del param

    param = lastNode.createStringParam("sep46", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep46 = param
    del param

    param = lastNode.createStringParam("sep47", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep47 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_patterns_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output2"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4139, 4048)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput2 = lastNode

    del lastNode
    # End of node "Output2"

    # Start of node "Shadertoy1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1")
    lastNode.setLabel("Shadertoy1")
    lastNode.setPosition(4139, 3843)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueVec25")
    if param is not None:
        param.setValue(0.5, 0)
        param.setValue(0.5, 1)
        del param

    param = lastNode.getParam("paramValueInt6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(0.98, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramValueFloat12")
    if param is not None:
        param.setValue(30, 0)
        del param

    param = lastNode.getParam("paramValueFloat13")
    if param is not None:
        param.setValue(0.98, 0)
        del param

    param = lastNode.getParam("paramValueFloat14")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramValueFloat15")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueInt16")
    if param is not None:
        param.setValue(6, 0)
        del param

    param = lastNode.getParam("paramValueBool17")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramValueFloat18")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat19")
    if param is not None:
        param.setValue(-0.5, 0)
        del param

    param = lastNode.getParam("imageShaderFileName")
    if param is not None:
        param.setValue("/run/media/ffernandez/FABRICE/PERSO/NATRON/GIT_DEV/natron-plugins/Shadertoy/Crok_patterns.frag.glsl")
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_patterns Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_patterns Matchbox for Autodesk Flame\n\n\n// PolkaDot2D based on http://briansharpe.files.wordpress.com/2012/01/simplexpolkadotsample.jpg\n// Simple loading screen based on https://www.shadertoy.com/view/XdBXzd by ndel\n// ZigZag based on http://patriciogonzalezvivo.com/2015/thebookofshaders/edit.html#09/zigzag.frag by patriciogv\n// iching based on http://patriciogonzalezvivo.com/2015/thebookofshaders/edit.html#09/iching-01.frag by patriciogv\n// Truchet based on http://patriciogonzalezvivo.com/2015/thebookofshaders/edit.html#09/truchet.frag by patriciogv\n// Binary Noise based on http://glslsandbox.com/e#27146.0\n\n\n#define PI 3.14159265359\n#define TWO_PI 6.28318530718\n\n\n\n// global uniforms\nuniform float speed = 10.0; // Speed : (speed), min=-1000, max=1000\nuniform float offset = 0.0; // Offset : (offset), min=-1000, max=1000\nuniform float scale = 2.0; // Scale : (scale), min=-50, max=50\nuniform float aspect = 1.0; // Aspect : (aspect), min=-100, max=100\nuniform float rot = 0.0; // Rotation : (rotation), min=-1000, max=1000\nuniform vec2 pos = vec2(0.5,0.5);\nuniform int pattern_type = 0; // Pattern type (pattern type), min=0, max=5\n\nfloat time = iTime *.05 * speed + offset -1.0;\n\n// polka dots uniforms\nuniform float radius = 0.7; // Radius : (radius), min=0, max=1\nuniform float dim = 1.0; // Noise : (noise), min=0, max=10\n\n// zigzag uniforms\nuniform float zigzag_sharpness = 0.98; // Sharpness : (sharpness), min=0.01, max=1\nuniform float zigzag_style = 2.0; // Style : (style), min=-100, max=100\n\n// loading screen uniforms\nuniform float loading_inner = 20.0; // In circle : (in circle), min=0.0, max=100\nuniform float loading_outer = 30.0; // Out circle : (out circle), min=0.0, max=100\nuniform float loading_sharpness = 0.98; // Sharpness : (sharpness), min=0.0, max=1\n\n// iching uniforms\nuniform float iching_amount = 0.7; // Amount : (amount), min=0.0, max=2\nuniform float iching_detail = 1.0; // Detail : (detail), min=0.0, max=1\n\n// truchet uniforms\nuniform int truchet_style = 6; // Popup : (popup), min=0, max=5000\nuniform bool truchet_curve = false; // Additional curvature : (additional curvature)\nuniform float truchet_frequence = 1.0; // Frequence : (frequence), min=-100, max=100\nuniform float truchet_amplitude = -0.5; // Amplitude : (amplitude), min=-100, max=100\n\n// binary uniforms\nuniform float binary_seed = 0.5;\nuniform float binary_move = 2.0;\n\nfloat hash2(vec2 uv) {\n\treturn fract(sin(uv.x * 15.78 + uv.y * 35.14) * 43758.23);\n}\n\nvec4 FAST32_hash_2D( vec2 gridcell )\t//\tgenerates a random number for each of the 4 cell corners\n{\n    //\tgridcell is assumed to be an integer coordinate\n    const vec2 OFFSET = vec2( 26.0, 161.0 );\n    float DOMAIN = 71.0 * 0.02;\n    const float SOMELARGEFLOAT = 951.135664;\n    vec4 P = vec4( gridcell.xy, gridcell.xy + 1.0 );\n    P = P - floor(P * ( 1.0 / DOMAIN )) * DOMAIN;\t//\ttruncate the domain\n    P += OFFSET.xyxy;\t\t\t\t\t\t\t\t//\toffset to interesting part of the noise\n    P *= P;\t\t\t\t\t\t\t\t\t\t\t//\tcalculate and return the hash\n    return fract( P.xzxz * P.yyww * ( 1.0 / SOMELARGEFLOAT ) );\n}\n\nfloat SimplexPolkaDot2D( \tvec2 P,\n                            float radius, \t\t//\tradius range is 0.0->1.0\n                            float max_dimness )\t//\tthe maximal dimness of a dot ( 0.0->1.0   0.0 = all dots bright,  1.0 = maximum variation )\n{\n    //\tsimplex math based off Stefan Gustavson\'s and Ian McEwan\'s work at...\n    //\thttp://github.com/ashima/webgl-noise\n\n    //\tsimplex math constants\n    const float SKEWFACTOR = 0.36602540378443864676372317075294;\t\t\t// 0.5*(sqrt(3.0)-1.0)\n    const float UNSKEWFACTOR = 0.21132486540518711774542560974902;\t\t\t// (3.0-sqrt(3.0))/6.0\n    const float SIMPLEX_TRI_HEIGHT = 0.70710678118654752440084436210485;\t// sqrt( 0.5 )\theight of simplex triangle\n    const float INV_SIMPLEX_TRI_HALF_EDGELEN = 2.4494897427831780981972840747059;\t// sqrt( 0.75 )/(2.0*sqrt( 0.5 ))\n    const vec3 SIMPLEX_POINTS = vec3( 1.0-UNSKEWFACTOR, -UNSKEWFACTOR, 1.0-2.0*UNSKEWFACTOR );\t\t//\tvertex info for simplex triangle\n\n    //\testablish our grid cell.\n    P *= SIMPLEX_TRI_HEIGHT;\t\t// scale space so we can have an approx feature size of 1.0  ( optional )\n    vec2 Pi = floor( P + dot( P, vec2( SKEWFACTOR ) ) );\n\n    //\testablish vectors to the 4 corners of our simplex triangle\n    vec2 v0 = ( Pi - dot( Pi, vec2( UNSKEWFACTOR ) ) - P);\n    vec4 v0123_x = vec4( 0.0, SIMPLEX_POINTS.xyz ) + v0.x;\n    vec4 v0123_y = vec4( 0.0, SIMPLEX_POINTS.yxz ) + v0.y;\n\n    //\tcalculate the hash.\n    vec4 hash = FAST32_hash_2D( Pi + time * .0005);\n\n    //\tapply user controls\n    radius = INV_SIMPLEX_TRI_HALF_EDGELEN/radius * 1.2;\t\t//\tINV_SIMPLEX_TRI_HALF_EDGELEN here is to scale to a nice 0.0->1.0 range\n    v0123_x *= radius;\n    v0123_y *= radius;\n\n    //\treturn a smooth falloff from the closest point.  ( we use a f(x)=(1.0-x*x)^3 falloff )\n    vec4 point_distance = max( vec4( 0.0 ), 1.0 - ( v0123_x*v0123_x + v0123_y*v0123_y ) );\n    point_distance = point_distance*point_distance*point_distance;\n    return dot( 1.0 - hash * max_dimness, point_distance);\n}\n\n// begin loading screen\nfloat movingRing(vec2 uv, float r1, float r2)\n{\n\t#define SMOOTH(r) (mix(1.0, 0.0, smoothstep(loading_sharpness, 1.0, r)))\n    vec2 d = (uv *250.0);\n\tfloat r = sqrt( dot( d, d ) );\n    d = normalize(d);\n    float theta = -atan(d.y,d.x);\n    theta  = mod(-time+0.5*(1.0+theta/PI), 1.0);\n    //anti aliasing for the ring\'s head (thanks to TDM !)\n    theta -= max(theta - 1.0 + 1e-2, 0.0) * 200.0 * loading_sharpness;\n    return theta*(SMOOTH(r/r2)-SMOOTH(r/r1));\n}\n// end loading screen\n\n// begin zig zag\nvec2 zigzag(vec2 zig_uv, float zigzag_zoom)\n{\n    zig_uv *= zigzag_zoom;\n    if (fract(zig_uv.y * 0.5) > 0.5){\n        zig_uv.x = zig_uv.x+0.5;\n        zig_uv.y = 1.0-zig_uv.y;\n    }\n    return fract(zig_uv);\n}\n\nfloat fillY(vec2 _st, float _pct,float _antia)\n{\n  return  smoothstep( _pct-_antia, _pct, _st.y);\n}\n// end zig zag\n\n//begin iching\nfloat shape(vec2 st, float N){\n    st = st*2.-1.;\n    float a = atan(st.x,st.y)+PI;\n    float r = TWO_PI/N;\n    return abs(cos(floor(.5+a/r)*r-a)*length(st));\n}\n\nfloat box(vec2 st, vec2 size){\n    return shape(st*size,4.);\n}\n\nfloat rect(vec2 _st, vec2 _size){\n    _size = vec2(0.5)-_size* iching_detail * .50;\n    vec2 uv = smoothstep(_size,_size+vec2(1e-4),_st);\n    uv *= smoothstep(_size,_size+vec2(1e-4),vec2(1.0)-_st);\n    return uv.x*uv.y;\n}\n\nfloat hex(vec2 st, float a, float b, float c, float d, float e, float f){\n    st = st*vec2(2.,6.);\n\n    vec2 fpos = fract(st);\n    vec2 ipos = floor(st);\n\n    if (ipos.x == 1.0) fpos.x = 1.-fpos.x;\n    if (ipos.y < 1.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),a);\n    } else if (ipos.y < 2.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),b);\n    } else if (ipos.y < 3.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),c);\n    } else if (ipos.y < 4.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),d);\n    } else if (ipos.y < 5.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),e);\n    } else if (ipos.y < 6.0){\n        return mix(box(fpos, vec2(0.84,1.)),box(fpos-vec2(0.03,0.),vec2(1.)),f);\n    }\n    return 0.0;\n}\n\nfloat hex(vec2 st, float N){\n    float b[6];\n    float remain = floor(mod(N,64.));\n    for(int i = 0; i < 6; i++){\n        b[i] = 0.0;\n        b[i] = step(1.0,mod(remain,2.));\n        remain = ceil(remain/2.);\n    }\n    return hex(st,b[0],b[1],b[2],b[3],b[4],b[5]);\n}\n//end iching\n\n// begin truchet\nvec2 rotate2D (vec2 _st, float _angle) {\n    _st -= 0.5;\n    _st =  mat2(cos(_angle),-sin(_angle),\n                sin(_angle),cos(_angle)) * _st;\n    _st += 0.5;\n    return _st;\n}\n\nvec2 tile (vec2 _st, float _zoom) {\n    _st *= _zoom;\n    return fract(_st);\n}\n\nvec2 rotateTilePattern(vec2 _st){\n\n    //  Scale the coordinate system by 2x2 \n    _st *= 2.0;\n\n    //  Give each cell an index number\n    //  according to its position\n    float index = 0.0;    \n    index += step(1., mod(_st.x,2.0));\n    index += step(1., mod(_st.y,2.0))*2.0;\n\n    //      |\n    //  0   |   1\n    //      |\n    //--------------\n    //      |\n    //  2   |   3\n    //      |\n\n    // Make each cell between 0.0 - 1.0\n    _st = fract(_st);\n\n    // Rotate each cell according to the index\n    if(index == 1.0){\n        //  Rotate cell 1 by 90 degrees\n        _st = rotate2D(_st,PI*0.5);\n    } else if(index == 2.0){\n        //  Rotate cell 2 by -90 degrees\n        _st = rotate2D(_st,PI*-0.5);\n    } else if(index == 3.0){\n        //  Rotate cell 3 by 180 degrees\n        _st = rotate2D(_st,PI);\n    }\n\n    return _st;\n}\n// end truchet\n\n// begin binary\nfloat random (vec2 st) \n{ \n    return fract(sin(dot(st, vec2(12.9898,78.233+0.0001 * binary_seed)))* 43758.5453123);\n}\n\nfloat eq(float v, float compareTo)\n{\n    return step(compareTo-1.,v) * step(v, compareTo+1.); \t\n}\n// end binary\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = (fragCoord.xy / iResolution.xy) - pos;\n    vec4 col = vec4(0.0);\n    float frameratio = (iResolution.x / iResolution.y);\n\tuv.x *= frameratio;\n\tfloat rad_rot = (rot+180.0) * PI / 180.0; \n\tmat2 rotation = mat2( cos(-rad_rot), -sin(-rad_rot), sin(-rad_rot), cos(-rad_rot));\n\tuv *= rotation;\n\tuv.x *= aspect;\n\tuv *= scale;\n\t\n\tif ( pattern_type == 0 )\n\t{\n\t\t// polka dots\n\t\tcol = vec4(SimplexPolkaDot2D (uv * 20., radius * 1.9, dim));\n\t}\n\t\n\telse if ( pattern_type == 1 )\n\t{\n\t\t// loading screen\n\t    float ring = movingRing(uv, loading_inner, loading_outer);\n\t\t\n\t    col = vec4( ring );\n\t}\n\t\n\telse if ( pattern_type == 2 )\n\t{\n\t\t// Zig Zag\n\t    uv = zigzag(uv*vec2(1.,2.),5.);\n\t    float x = uv.x* zigzag_style; \n\t    float a = floor(1.+sin(x*PI));\n\t    float b = floor(1.+sin((x+1.)*PI));\n\t    float f = fract(x);\n\t    col.rgb = vec3( fillY(uv,mix(a,b,f),0.1 / zigzag_sharpness *0.1) );\n\t}\n\t\n\telse if ( pattern_type == 3 )\n\t{\n\t\t// iching\n\t\tuv.y *= iResolution.y/iResolution.x;\n\t    uv *= 5.0;\n\t    vec2 fpos = fract(uv);\n\t    vec2 ipos = floor(uv);\n\t    float t = time*5.0;\n\t    float df = 1.0;\n\t    df = hex(fpos,ipos.x+ipos.y+t)+(1.0-rect(fpos,vec2(1.0)));\n\t    col = vec4(mix(vec3(1.),vec3(0.),step(iching_amount,df)),1.0);\n\t}\n\t\n\telse if ( pattern_type == 4 )\n\t{\n\t\t// Truchet\n\t    uv = tile(uv,2.0);\n\t    uv = rotateTilePattern(uv);\n\t\tfloat paint = 0.0;\n\t    // Make more interesting combinations\n\t\tif ( truchet_style == 1)\n\t\t{\n\t\t\tuv = rotate2D(uv,-PI*time*0.25);\n\t\t    uv = rotateTilePattern(uv*2.);\n\t\t    uv = rotate2D(uv,PI*time*0.25);\n\t\t}\n\t\telse if ( truchet_style == 2)\n\t\t{\n\t\t\tuv = rotate2D(uv,-PI*time*0.25);\n\t\t    uv += rotateTilePattern(uv*2.);\n\t\t    uv = rotate2D(uv,PI*time*0.25);\n\t\t}\n\t\telse if ( truchet_style == 3)\n\t\t{\n\t\t\tuv *= rotate2D(uv,-PI*time*0.25);\n\t\t    uv = rotateTilePattern(uv*2.);\n\t\t    uv *= rotate2D(uv,PI*time*0.25);\n\t\t}\n\t\telse if ( truchet_style == 4)\n\t\t{\n\t\t\tuv = rotateTilePattern(uv*2.);\n\t\t    uv *= rotate2D(uv,PI*time*0.25);\n\t\t}\n\t\telse if ( truchet_style == 5)\n\t\t{\n\t\t\tuv *= rotate2D(uv,-PI*time*0.25);\n\t\t\tuv *= rotateTilePattern(uv*2.);\n\t\t}\n\t\telse if ( truchet_style == 6)\n\t\t{\n\t\t\tuv *= rotate2D(uv,-PI*time*0.25);\n\t\t\tuv = rotateTilePattern(uv*2.);\n\t\t}\n\t\telse if ( truchet_style == 7)\n\t\t{\n\t\t\tuv = rotate2D(uv,-PI*time*0.25);\n\t\t\tuv *= rotateTilePattern(uv*2.);\n\t\t}\n\n\t    // step(st.x,st.y) just makes a b&w triangles\n\t    // but you can use whatever design you want.  \n\t\tif ( truchet_curve )\n\t\t{\n\t\t\t// enable additional curvature\n\t\t\tcol.rgb = vec3(fillY(uv,0.5+sin(uv.x*PI*truchet_frequence)*truchet_amplitude,0.01));\n\t\t}\n\t\telse col.rgb = vec3(step(uv.x,uv.y));\n\t}\n\telse if ( pattern_type == 5 )\n\t{\n\t\t// Binary\n        uv.x *= 100.;\n\t\tuv.y *= 100.;\n\n\t\tfloat line = floor(uv.y);\n\t\tuv.x += time*40.*(mod(line,binary_move)*2. -1.)*random(vec2(line));\n\n\t\tvec2 ipos = floor(uv);\n\t\tvec2 fpos = fract(uv);\n\n\t\tcol.rgb = vec3(step(0.5*random(vec2(line)), binary_seed * random(ipos)));\n\t}\n\t\t\n\tfragColor = col;\n}\n\t")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("format")
        del param

    param = lastNode.getParam("NatronParamFormatSize")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("speed")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Speed :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("speed")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("offset")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Offset :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("offset")
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("scale")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Scale :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("scale")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(-49.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(49.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("aspect")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Aspect :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("aspect")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("rot")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Rotation :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("rotation")
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("pos")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("pos")
        del param

    param = lastNode.getParam("paramDefaultVec25")
    if param is not None:
        param.setValue(0.5, 0)
        param.setValue(0.5, 1)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("pattern_type")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Pattern type")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("pattern type")
        del param

    param = lastNode.getParam("paramMinInt6")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt6")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("radius")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Radius :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("radius")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("dim")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Noise :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("noise")
        del param

    param = lastNode.getParam("paramDefaultFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("zigzag_sharpness")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Sharpness :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("sharpness")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(0.98, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(0.01, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("zigzag_style")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Style :")
        del param

    param = lastNode.getParam("paramHint10")
    if param is not None:
        param.setValue("style")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("loading_inner")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("In circle :")
        del param

    param = lastNode.getParam("paramHint11")
    if param is not None:
        param.setValue("in circle")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat11")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("loading_outer")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Out circle :")
        del param

    param = lastNode.getParam("paramHint12")
    if param is not None:
        param.setValue("out circle")
        del param

    param = lastNode.getParam("paramDefaultFloat12")
    if param is not None:
        param.setValue(30, 0)
        del param

    param = lastNode.getParam("paramMinFloat12")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat12")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("loading_sharpness")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("Sharpness :")
        del param

    param = lastNode.getParam("paramHint13")
    if param is not None:
        param.setValue("sharpness")
        del param

    param = lastNode.getParam("paramDefaultFloat13")
    if param is not None:
        param.setValue(0.98, 0)
        del param

    param = lastNode.getParam("paramMinFloat13")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat13")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType14")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName14")
    if param is not None:
        param.setValue("iching_amount")
        del param

    param = lastNode.getParam("paramLabel14")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint14")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramDefaultFloat14")
    if param is not None:
        param.setValue(0.7, 0)
        del param

    param = lastNode.getParam("paramMinFloat14")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat14")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType15")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName15")
    if param is not None:
        param.setValue("iching_detail")
        del param

    param = lastNode.getParam("paramLabel15")
    if param is not None:
        param.setValue("Detail :")
        del param

    param = lastNode.getParam("paramHint15")
    if param is not None:
        param.setValue("detail")
        del param

    param = lastNode.getParam("paramDefaultFloat15")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat15")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat15")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType16")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName16")
    if param is not None:
        param.setValue("truchet_style")
        del param

    param = lastNode.getParam("paramLabel16")
    if param is not None:
        param.setValue("Popup :")
        del param

    param = lastNode.getParam("paramHint16")
    if param is not None:
        param.setValue("popup")
        del param

    param = lastNode.getParam("paramDefaultInt16")
    if param is not None:
        param.setValue(6, 0)
        del param

    param = lastNode.getParam("paramMinInt16")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt16")
    if param is not None:
        param.setValue(5000, 0)
        del param

    param = lastNode.getParam("paramType17")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName17")
    if param is not None:
        param.setValue("truchet_curve")
        del param

    param = lastNode.getParam("paramLabel17")
    if param is not None:
        param.setValue("Additional curvature :")
        del param

    param = lastNode.getParam("paramHint17")
    if param is not None:
        param.setValue("additional curvature")
        del param

    param = lastNode.getParam("paramType18")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName18")
    if param is not None:
        param.setValue("truchet_frequence")
        del param

    param = lastNode.getParam("paramLabel18")
    if param is not None:
        param.setValue("Frequence :")
        del param

    param = lastNode.getParam("paramHint18")
    if param is not None:
        param.setValue("frequence")
        del param

    param = lastNode.getParam("paramDefaultFloat18")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat18")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat18")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType19")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName19")
    if param is not None:
        param.setValue("truchet_amplitude")
        del param

    param = lastNode.getParam("paramLabel19")
    if param is not None:
        param.setValue("Amplitude :")
        del param

    param = lastNode.getParam("paramHint19")
    if param is not None:
        param.setValue("amplitude")
        del param

    param = lastNode.getParam("paramDefaultFloat19")
    if param is not None:
        param.setValue(-0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat19")
    if param is not None:
        param.setValue(-99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramMaxFloat19")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    del lastNode
    # End of node "Shadertoy1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput2.connectInput(0, groupShadertoy1)

    param = groupShadertoy1.getParam("paramValueFloat0")
    group.getParam("Shadertoy1paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat1")
    group.getParam("Shadertoy1paramValueFloat1").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat2")
    group.getParam("Shadertoy1paramValueFloat2").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat3")
    group.getParam("Shadertoy1paramValueFloat3").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat4")
    group.getParam("Shadertoy1paramValueFloat4").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueVec25")
    group.getParam("Shadertoy1paramValueVec25").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueInt6")
    param.setExpression("thisGroup.patternType.get()", False, 0)
    del param
    param = groupShadertoy1.getParam("paramValueFloat7")
    group.getParam("Shadertoy1paramValueFloat7").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat8")
    group.getParam("Shadertoy1paramValueFloat8").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat9")
    group.getParam("Shadertoy1paramValueFloat9").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat10")
    group.getParam("Shadertoy1paramValueFloat10").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat11")
    group.getParam("Shadertoy1paramValueFloat11").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat12")
    group.getParam("Shadertoy1paramValueFloat12").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat13")
    group.getParam("Shadertoy1paramValueFloat13").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat14")
    group.getParam("Shadertoy1paramValueFloat14").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat15")
    group.getParam("Shadertoy1paramValueFloat15").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueInt16")
    group.getParam("Shadertoy1paramValueInt16").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueBool17")
    group.getParam("Shadertoy1paramValueBool17").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat18")
    group.getParam("Shadertoy1paramValueFloat18").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("paramValueFloat19")
    group.getParam("Shadertoy1paramValueFloat19").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("bbox")
    group.getParam("Shadertoy1bbox").setAsAlias(param)
    del param
    param = groupShadertoy1.getParam("NatronParamFormatChoice")
    group.getParam("Shadertoy1NatronParamFormatChoice").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Crok_patterns_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
