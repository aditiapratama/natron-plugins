# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Ls_RndmGrade_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Ls_RndmGrade_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Ls_RndmGrade_GL"

def getLabel():
    return "Ls_RndmGrade_GL"

def getVersion():
    return 1

def getIconPath():
    return "Ls_RndmGrade_GL.png"

def getGrouping():
    return "Community/GLSL/Color"

def getPluginDescription():
    return "Generates random grades. Works best on log footage or low-contrast ungraded video."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.2941, 0.5294, 1)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("RGB_CURVES", "RGB curves")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.RGB_CURVES = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat0", "Seed : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-200, 0)
    param.setDisplayMaximum(200, 0)
    param.setDefaultValue(10, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat1", "Amount : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat1 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createIntParam("Shadertoy1_2paramValueInt2", "Curve points : ")
    param.setMinimum(2, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(2, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(4, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueInt2 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat3", "colourfulness : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.75, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createSeparatorParam("CROSS_CHANNEL", "Cross-channel matrix")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CROSS_CHANNEL = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat4", "Cross seed : ")
    param.setMinimum(-1000, 0)
    param.setMaximum(1000, 0)
    param.setDisplayMinimum(-200, 0)
    param.setDisplayMaximum(200, 0)
    param.setDefaultValue(33, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat4 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat5", "Cross amount : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat5 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("PRESERVE", "Preserve some sanity")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.PRESERVE = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat6", "Lock white : ")
    param.setMinimum(-1, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat6 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat7", "Smooth white : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat7 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat8", "Lock white : ")
    param.setMinimum(-1, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(-1, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat8 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat9", "Smooth white : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(0.5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createSeparatorParam("OUTPUT", "Output")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OUTPUT = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool12", "Overlays : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool12 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool11", "Clamp negs : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool11 = param
    del param

    param = lastNode.createBooleanParam("DivMult", "Pre-Div / Post-Mult : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.DivMult = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat10", "Mix : ")
    param.setMinimum(0, 0)
    param.setMaximum(1, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat10 = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Ls_RndmGrade_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4139, 4048)
    lastNode.setSize(80, 44)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4139, 3645)
    lastNode.setSize(80, 30)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Shadertoy1_2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1_2")
    lastNode.setLabel("Shadertoy1_2")
    lastNode.setPosition(4139, 3859)
    lastNode.setSize(80, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1_2 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueInt2")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(0.75, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(33, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueBool11")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramValueBool12")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : Ls_RndmGrade Matchbox pour Autodesk Flame\n//\n// Adapted to Natron by F.Fernandez\n// Original code : Ls_RndmGrade Matchbox for Autodesk Flame\n//\n// Create random grades\n// lewis@lewissaunders.com\n// TODO:\n//  o Prevent solarization somehow?\n//  o HSV, Lab, YUV curve options?\n\n\n\n// iChannel0: Source, filter = nearest, wrap=clamp\n// iChannel1: Mask, filter = nearest, wrap=clamp\n// BBox: iChannel0\n\n\n\n\n\n\nuniform float rgbseed = 10; // Seed : (seed), min=-1000, max=1000\nuniform float rgbamount = 1; // Amount : (amount), min=-10, max=10\nuniform int rgbpoints = 4; // Curve points : (curve points), min=2, max=20\nuniform float colourfulness = 0.75; // colourfulness : (colourfulness), min=-10, max=10\n\nuniform float crossseed = 33; // Cross seed : (cross seed), min=-1000, max=1000\nuniform float crossamount = 0.5; // Cross amount : (cross amount), min=-10, max=10\n\nuniform float lockwhite = 0.5; // Lock white : (lock white), min=-1, max=1\nuniform float smoothwhite = 0.5; // Smooth white : (smooth white), min=0, max=1\n\nuniform float lockblack = 0.5; // Lock white : (lock white), min=-1, max=1\nuniform float smoothblack = 0.5; // Smooth white : (smooth white), min=0, max=1\n\n\nuniform float mixx = 1; // Mix : (mix), min=0, max=1\n\nuniform bool clampnegs = true;\nuniform bool overlays = true;\n\n\n\n\n\n\n\n// RGB to Rec709 YPbPr\nvec3 yuv(vec3 rgb) {\n    return mat3(0.2215, -0.1145, 0.5016, 0.7154, -0.3855, -0.4556, 0.0721, 0.5, -0.0459) * rgb;\n}\n\n// Rec709 YPbPr to RGB\nvec3 rgb(vec3 yuv) {\n    return mat3(1.0, 1.0, 1.0, 0.0, -0.1870, 1.8556, 1.5701, -0.4664, 0.0) * yuv;\n}\n\nfloat rando(float a, float b) {\n\tvec2 s = vec2(a, b);\n    return 2.0 * fract(sin(dot(s.xy, vec2(12.9898, 78.233))) * 43758.5453) - 1.0;\n}\n\n// Returns value of a random 1D spline curve for input x\nfloat curve(float x, float seed, int npoints, float amount, float lock0, float smooth0, float lock1, float smooth1) {\n\t// Make some random control points, each at (x,y) with slope z\n\tvec3 points[20];\n\tfor(int i = 0; i < 20; i++) {\n\t\tpoints[i].x = (float(i) / float(npoints - 1)) + (amount/3.0) * (rando(float(i)+00.0, seed) - 0.5);\n\t\tpoints[i].y = (float(i) / float(npoints - 1)) + (amount/1.0) * (rando(float(i)+10.0, seed) - 0.5);\n\t\tpoints[i].z =                         1.0 + (amount/6.0) * (rando(float(i)+20.0, seed) - 0.5);\n\t}\n\n\t/* Sort them by ascending x, naive insertion sort\n\t   It doesn\'t make sense to skip this, but it makes things jump when\n\t   points move enough in x that they pass each other...\n\tfor(int i = 1; i < npoints; i++) {\n\t\tint j = i - 1;\n\t\twhile(j >= 0 && points[j].x > points[i].x) {\n\t\t\tpoints[j + 1] = points[j];\n\t\t\tj--;\n\t\t}\n\t\tpoints[j + 1] = points[i];\n\t} */\n\n\t// Lock first and last points to ends, optionally lock output at 0/1 to 0/1\n\tpoints[0].x = 0.0;\n\tpoints[0].y = mix(points[0].y, 0.0, lock0);\n\tpoints[0].z = mix(points[0].z, 0.0, smooth0);\n\tpoints[npoints-1].x = 1.0;\n\tpoints[npoints-1].y = mix(points[npoints-1].y, 1.0, lock1);\n\tpoints[npoints-1].z = mix(points[npoints-1].z, 0.0, smooth1);\n\n\t// Evaluate spline - first find the control points before and after the input in x\n\tint i = 1;\n\twhile(points[i].x < x && i < npoints - 1) i++;\n\tfloat x1 = points[i - 1].x;\n\tfloat x2 = points[i].x;\n\tfloat y1 = points[i - 1].y;\n\tfloat y2 = points[i].y;\n\tfloat k1 = points[i - 1].z;\n\tfloat k2 = points[i].z;\n\n\t// https://en.wikipedia.org/wiki/Spline_interpolation#Algorithm_to_find_the_interpolating_cubic_spline\n\tfloat t = (x - x1) / (x2 - x1);\n\tfloat a =  k1 * (x2 - x1) - (y2 - y1);\n\tfloat b =  -k2 * (x2 - x1) + (y2 - y1);\n\tfloat q = (1.0 - t) * y1 + t * y2 + t * (1.0 - t) * (a * (1.0 - t) + b * t);\n\treturn q;\n}\n\n// Random curves per RGB\nvec3 rgbcurves(vec3 i) {\n\tvec3 rgbcurved;\n\trgbcurved.r = curve(i.r, rgbseed+7.0, rgbpoints, rgbamount/10.0, lockblack, smoothblack, lockwhite, smoothwhite);\n\trgbcurved.g = curve(i.g, rgbseed+8.0, rgbpoints, rgbamount/10.0, lockblack, smoothblack, lockwhite, smoothwhite);\n\trgbcurved.b = curve(i.b, rgbseed+9.0, rgbpoints, rgbamount/10.0, lockblack, smoothblack, lockwhite, smoothwhite);\n\n\tvec3 diff = rgbcurved - i;\n\tfloat avgdiff = (diff.r + diff.g + diff.b) / 3.0;\n\tvec3 nocolourfulness = i + avgdiff;\n\trgbcurved = mix(nocolourfulness, rgbcurved, colourfulness);\n\n\tif(clampnegs == true) rgbcurved = clamp(rgbcurved, 0.0, 999999.0);\n\n\treturn rgbcurved;\n}\n\n// Random cross-transfer between channels - red from green, red from blue etc\nvec3 rgbmatrix(vec3 i) {\n\tmat3 m = mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0);\n\tmat3 r = mat3(1.0, rando(crossseed, 1.0) - 0.5, rando(crossseed, 2.0) - 0.5,\n\t              rando(crossseed, 3.0) - 0.5, 1.0, rando(crossseed, 5.0) - 0.5,\n\t              rando(crossseed, 6.0) - 0.5, rando(crossseed, 7.0) - 0.5, 1.0);\n\tvec3 crossed = i * (m + crossamount * r);\n\n\t// Don\'t affect the grayscale\n\tvec3 desat = vec3((i.r + i.g + i.b) / 3.0);\n\tfloat sat = length(i - desat);\n\treturn mix(i, crossed, sat);\n}\n\n// Draw RGB curves as a graph\nvec3 graph(vec3 i, vec2 xy) {\n\tvec2 pos = xy * 4.0;\n\tpos.x *= iResolution.x / iResolution.y;\n\tpos -= vec2(0.1, 0.1);\n\tif(pos.x < -0.1 || pos.x > 1.1 || pos.y < -0.1 || pos.y > 1.1) {\n\t\treturn i;\n\t}\n\tfloat ry = rgbcurves(vec3(pos.x)).r;\n\tfloat gy = rgbcurves(vec3(pos.x)).g;\n\tfloat by = rgbcurves(vec3(pos.x)).b;\n\tfloat rdist = abs(ry - pos.y);\n\tfloat gdist = abs(gy - pos.y);\n\tfloat bdist = abs(by - pos.y);\n\n\t// http://iquilezles.org/www/articles/distance/distance.htm\n  // (sadly dFd... sometimes returns really wrong things)\n  /*rdist /= min(length(vec2(dFdx(rdist), dFdy(rdist))), 0.005);\n  gdist /= min(length(vec2(dFdx(gdist), dFdy(gdist))), 0.005);\n  bdist /= min(length(vec2(dFdx(bdist), dFdy(bdist))), 0.005);\n*/\n  rdist *= 200.0;\n  gdist *= 200.0;\n  bdist *= 200.0;\n\n\tfloat rgraph = 1.0 - smoothstep(0.0, 2.0, rdist);\n\tfloat ggraph = 1.0 - smoothstep(0.0, 2.0, gdist);\n\tfloat bgraph = 1.0 - smoothstep(0.0, 2.0, bdist);\n\tvec3 graph = vec3(rgraph, ggraph, bgraph);\n\tvec2 lines = 1.0 - smoothstep(0.0, 0.08, fract(pos*10.04));\n\tif(pos.x > 0.0 && pos.x < 1.0 && pos.y > 0.0 && pos.y < 1.0) {\n\t\tgraph += 0.15 * length(lines);\n\t}\n\treturn mix(i, graph, 0.66666);\n}\n\n// Draw vectorscope-type thing\nvec3 hues(vec3 i, vec2 xy) {\n\tvec2 pos = xy * 4.0;\n\tpos.x *= iResolution.x / iResolution.y;\n\tpos -= vec2(0.1, 0.1);\n\tpos.x -= 1.2;\n\tif(pos.x < -0.1 || pos.x > 1.1 || pos.y < -0.1 || pos.y > 1.1) {\n\t\treturn i;\n\t}\n\tvec3 graph = vec3(0.0);\n\tvec3 cols[7];\n\tcols[0] = vec3(1.0, 0.0, 0.0);\n\tcols[1] = vec3(0.0, 1.0, 0.0);\n\tcols[2] = vec3(0.0, 0.0, 1.0);\n\tcols[3] = vec3(0.0, 1.0, 1.0);\n\tcols[4] = vec3(1.0, 0.0, 1.0);\n\tcols[5] = vec3(1.0, 1.0, 0.0);\n\tcols[6] = vec3(0.5, 0.5, 0.5);\n\tfor(int i = 0; i < 7; i++) {\n\t\tvec3 from = cols[i];\n\t\tvec3 to = rgbmatrix(from);\n\t\tif(i == 6) to = rgbcurves(from);\n\t\tvec2 fromcoords = yuv(from).gb / 2.0 + 0.5;\n\t\tvec2 tocoords = yuv(to).gb / 2.0 + 0.5;\n\t\tfloat fromring = 1.0 - smoothstep(0.0, 0.0035, abs(0.03 - length(pos - fromcoords)));\n\t\tfloat tocircle = 1.0 - smoothstep(0.02, 0.022, length(pos - tocoords));\n\t\tgraph += 0.5 * fromring * from + 0.75 * tocircle * to;\n\t}\n\n\tfloat circle = smoothstep(0.995, 1.0, 1.0 - abs(0.5 - length(pos - vec2(0.5, 0.5))));\n\tfloat lines = length(1.0 - smoothstep(0.0, 0.016, fract(pos*2.01)));\n\tif((pos.x > 0.48 && pos.x < 0.52) || (pos.y > 0.48 && pos.y < 0.52)) {\n\t\tlines += length(1.0 - smoothstep(0.0, 0.1, fract(pos*20.08)));\n\t}\n\tif(length(pos - vec2(0.5, 0.5)) > 0.5) lines = 0.0;\n\tgraph += 0.15 * max(lines, circle);\n\treturn mix(i, graph, 0.66666);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 coords = fragCoord.xy / iResolution.xy;\n\tvec3 frontpix = texture2D(iChannel0, coords).rgb;\n\tvec3 mattepix = texture2D(iChannel1, coords).rgb;\n\tfloat original = texture2D(iChannel0, coords).a;\n\n\tvec3 crossed = rgbmatrix(frontpix);\n\tvec3 rgbcurved = rgbcurves(crossed);\n\tvec3 mixed = mix(frontpix, rgbcurved, mixx * length(mattepix));\n\n\tif(overlays == true) {\n\t\tmixed = graph(mixed, coords);\n\t\tmixed = hues(mixed, coords);\n\t}\n\n\tfragColor = vec4(mixed, 1.0);\n\tfragColor.a = original;\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Mask")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(13, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("rgbseed")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Seed :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("seed")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("rgbamount")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("rgbpoints")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Curve points :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("curve points")
        del param

    param = lastNode.getParam("paramDefaultInt2")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramMinInt2")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramMaxInt2")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("colourfulness")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("colourfulness :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("colourfulness")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(0.75, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("crossseed")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Cross seed :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("cross seed")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(33, 0)
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(-1000, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(1000, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("crossamount")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Cross amount :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("cross amount")
        del param

    param = lastNode.getParam("paramDefaultFloat5")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat5")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat5")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("lockwhite")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Lock white :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("lock white")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat6")
    if param is not None:
        param.setValue(-1, 0)
        del param

    param = lastNode.getParam("paramMaxFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("smoothwhite")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Smooth white :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("smooth white")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("lockblack")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Lock white :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("lock white")
        del param

    param = lastNode.getParam("paramDefaultFloat8")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat8")
    if param is not None:
        param.setValue(-1, 0)
        del param

    param = lastNode.getParam("paramMaxFloat8")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("smoothblack")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Smooth white :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("smooth white")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(0.5, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("mixx")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Mix :")
        del param

    param = lastNode.getParam("paramHint10")
    if param is not None:
        param.setValue("mix")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("clampnegs")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("clampnegs")
        del param

    param = lastNode.getParam("paramDefaultBool11")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("overlays")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("overlays")
        del param

    param = lastNode.getParam("paramDefaultBool12")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Shadertoy1_2"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(4339, 3642)
    lastNode.setSize(80, 30)
    lastNode.setColor(1, 1, 1)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Crop_Mask"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Mask")
    lastNode.setLabel("Crop_Mask")
    lastNode.setPosition(4334, 3859)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Mask = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1920, 0)
        param.setValue(1080, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Mask"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(4134, 3769)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(4134, 3950)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult1"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupPremult1)
    groupShadertoy1_2.connectInput(0, groupUnpremult1)
    groupShadertoy1_2.connectInput(1, groupCrop_Mask)
    groupCrop_Mask.connectInput(0, groupMask)
    groupUnpremult1.connectInput(0, groupSource)
    groupPremult1.connectInput(0, groupShadertoy1_2)

    param = groupShadertoy1_2.getParam("paramValueFloat0")
    group.getParam("Shadertoy1_2paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat1")
    group.getParam("Shadertoy1_2paramValueFloat1").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueInt2")
    group.getParam("Shadertoy1_2paramValueInt2").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat3")
    group.getParam("Shadertoy1_2paramValueFloat3").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat4")
    group.getParam("Shadertoy1_2paramValueFloat4").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat5")
    group.getParam("Shadertoy1_2paramValueFloat5").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat6")
    group.getParam("Shadertoy1_2paramValueFloat6").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat7")
    group.getParam("Shadertoy1_2paramValueFloat7").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat8")
    group.getParam("Shadertoy1_2paramValueFloat8").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat9")
    group.getParam("Shadertoy1_2paramValueFloat9").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat10")
    group.getParam("Shadertoy1_2paramValueFloat10").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool11")
    group.getParam("Shadertoy1_2paramValueBool11").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool12")
    group.getParam("Shadertoy1_2paramValueBool12").setAsAlias(param)
    del param
    param = groupCrop_Mask.getParam("size")
    param.setExpression("myWidth = Mask.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Mask.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = groupUnpremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param
    param = groupPremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param

    try:
        extModule = sys.modules["Ls_RndmGrade_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
