# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_filmlook_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_filmlook_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "Crok_filmlook_GL"

def getLabel():
    return "Crok_filmlook_GL"

def getVersion():
    return 1

def getIconPath():
    return "Crok_filmlook_GL.png"

def getGrouping():
    return "Community/GLSL/Color"

def getPluginDescription():
    return "This shader gives you different FilmLook presets."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.2941, 0.5294, 1)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("OVERALL", "Overall")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OVERALL = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createChoiceParam("lookChoice", "Look : ")
    entries = [ ("None", ""),
    ("Kodak 2383", ""),
    ("Kodak 2393", ""),
    ("Kodak 2395", ""),
    ("Agfa 1905", ""),
    ("Agfa 1935", ""),
    ("Agfa 1978", ""),
    ("Fuji 4711", ""),
    ("ORWO 0815", ""),
    ("Beer 1933", ""),
    ("Beer 1973", ""),
    ("Beer 2001", ""),
    ("Beer 2006", ""),
    ("Polaroid", ""),
    ("Cuba Libre", ""),
    ("Tea Time", ""),
    ("Spearmint", ""),
    ("Purple Rain", ""),
    ("Black White", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    lastNode.lookChoice = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat0", "Saturation : ")
    param.setMinimum(-5, 0)
    param.setMaximum(5, 0)
    param.setDisplayMinimum(-5, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat0 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat1", "Contrast : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat1 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat2", "Gamma : ")
    param.setMinimum(0.001, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0.001, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat2 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat3", "Mix : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat3 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createSeparatorParam("SLOPE", "Slope")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.SLOPE = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat4", "Red Slope : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat4 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat5", "Green Slope : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat5 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat6", "Blue Slope : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat6 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("OFFSET", "Offset")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OFFSET = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat7", "Red Offset : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat7 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat8", "Green Offset : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat8 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat9", "Blue Offset : ")
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat9 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createSeparatorParam("POWER", "Power")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.POWER = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat10", "Red Power : ")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat10 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat11", "Green Power : ")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat11 = param
    del param

    param = lastNode.createDoubleParam("pass2paramValueFloat12", "Blue Power : ")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.pass2paramValueFloat12 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("OPTION", "Option")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OPTION = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createBooleanParam("DivMult", "Pre-Div / Posy-Mult : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(False)
    param.setValue(True)
    lastNode.DivMult = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_filmlook_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4156, 4398)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4159, 3734)
    lastNode.setSize(90, 33)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(4158, 3955)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(4156, 4204)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(False)
        del param

    del lastNode
    # End of node "Premult1"

    # Start of node "Crop_Source"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Source")
    lastNode.setLabel("Crop_Source")
    lastNode.setPosition(4159, 3833)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Source = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(1600, 0)
        param.setValue(490, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Source"

    # Start of node "pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass1")
    lastNode.setLabel("pass1")
    lastNode.setPosition(3999, 4070)
    lastNode.setSize(90, 34)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass1 = lastNode

    param = lastNode.getParam("paramValueInt0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_filmlook Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_filmlook Matchbox for Autodesk Flame\n\n// iChannel0: Source,filter=nearest,wrap=clamp\n// BBox: iChannel0\n\nuniform int look = 3; // Look : ,min=0, max=18\n\nvec2 resolution = vec2(iResolution.x, iResolution.y);\n\n// Algorithm from Chapter 16 of OpenGL Shading Language\nvec3 saturation(vec3 rgb, float adjustment)\n{\n    const vec3 W = vec3(0.2126, 0.7152, 0.0722);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n\n// Real contrast adjustments by  Miles\nvec3 contrast(vec3 col, vec4 con)\n{\n\tvec3 c = con.rgb * vec3(con.a);\n\tvec3 t = (vec3(1.0) - c) / vec3(2.0);\n\tt = vec3(.5);\n\tcol = (1.0 - c.rgb) * t + c.rgb * col;\nreturn col;\n}\n\nvec3 sig (vec3 s) \n{\n    return 1.0 / (1.0 + (exp(-(s - 0.5) * 7.0))); \n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / resolution.xy;\n    vec3 org = texture2D(iChannel0, uv).rgb;\n\tfloat alpha = texture2D(iChannel0, uv).a;\n\tvec3 c = org;\n\tvec3 slope = vec3(1.0);\n\tvec3 offset = vec3(0.0);\n\tvec3 power = vec3(1.0);\n\tfloat sat = 1.0;\n\tfloat con = 1.0;\n\tfloat gam = 1.0;\n\tint f_con = 0;\n\t\n\tif ( look == 1 ) \t\n\t{\n\t\tslope = vec3(1.01, 1.0, 1.0);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(0.95, 1.0, 1.00);\n\t\tsat = 1.2;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 2 ) \t\n\t{\n\t\tslope = vec3(1.08, 1.19, 1.07);\n\t\toffset = vec3(0.04, -0.06, 0.02);\n\t\tpower = vec3(1.07, 1.11, 1.20);\n\t\tsat = 1.0;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 3 ) \t\n\t{\n\t\tslope = vec3(0.98, 1.0, 1.03);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(0.84, 0.97, 1.10);\n\t\tsat = 1.0;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 4 ) \t\n\t{\n\t\tslope = vec3(1.12, 1.42, 1.19);\n\t\toffset = vec3(0.04, -0.06, 0.02);\n\t\tpower = vec3(0.94, 0.81, 0.83);\n\t\tsat = 0.7;\n\t\tcon = 1.06;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 5 ) \t\n\t{\n\t\tslope = vec3(1.0);\n\t\toffset = vec3(-0.05, -0.04, -0.03);\n\t\tpower = vec3(1.0);\n\t\tsat = 0.0;\n\t\tcon = 1.33;\n\t\tgam = 0.6;\n\t\tf_con = 0;\n\t}\n\tif ( look == 6 ) \t\n\t{\n\t\tslope = vec3(1.33, 1.01, 0.63);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.21, 0.96, 0.74);\n\t\tsat = 0.6;\n\t\tcon = 1.0;\n\t\tgam = 0.83;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 7 ) \t\n\t{\n\t\tslope = vec3(0.88, 0.96, 1.24);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.45, 1.29, 1.27);\n\t\tsat = 1.0;\n\t\tcon = 0.93;\n\t\tgam = 0.9;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 8 ) \t\n\t{\n\t\tslope = vec3(1.2, 1.2, 1.2);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.3, 1.3, 1.3);\n\t\tsat = 0.0;\n\t\tcon = 0.8;\n\t\tgam = 1.2;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 9 ) \t\n\t{\n\t\tslope = vec3(0.93, 0.94, 0.96);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.6, 1.1, 0.95);\n\t\tsat = 0.4;\n\t\tcon = 1.1;\n\t\tgam = 0.7;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 10 ) \t\n\t{\n\t\tslope = vec3(0.65, 1.0, 0.8);\n\t\toffset = vec3(0.07, 0.0, 0.08);\n\t\tpower = vec3(1.0);\n\t\tsat = 1.4;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\n\t\tf_con = 1;\t\t\n\t}\n\t\t\n\tif ( look == 11 ) \t\n\t{\n\t\tslope = vec3(1.19, 1.1, 0.77);\n\t\toffset = vec3(-0.04, -0.08, -0.07);\n\t\tpower = vec3(0.8);\n\t\tsat = 0.9;\n\t\tcon = 1.0;\n\t\tgam = 0.9;\n\t\tf_con = 1;\t\t\n\t}\n\tif ( look == 12 ) \t\n\t{\n\t\tslope = vec3(1.1, 1.0, 0.8);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.5, 1.0, 1.0);\n\t\tsat = 0.6;\n\t\tcon = 1.0;\n\t\tgam = 0.9;\n\t\tf_con = 1;\n\t\t\t\t\n\t}\n\tif ( look == 13 ) \t\n\t{\n\t\tslope = vec3(1.15, 1.11, 0.86);\n\t\toffset = vec3(0.0, 0.01, -0.02);\n\t\tpower = vec3(1.41, 1.0, 0.74);\n\t\tsat = 0.45;\n\t\tcon = 0.98;\n\t\tgam = 0.86;\n\t\tf_con = 1;\n\t}\n\tif ( look == 14 ) \t\n\t{\n\t\tslope = vec3(1.0);\n\t\toffset = vec3(0.0);\n\t\tpower = vec3(1.0);\n\t\tsat = 0.0;\n\t\tcon = 1.1;\n\t\tgam = 0.7;\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 15 ) \t\n\t{\n\t\tslope = vec3(1.02, 1.32, 1.09);\n\t\toffset = vec3(0.04, -0.06, 0.02);\n\t\tpower = vec3(0.70, 0.44, 0.51);\n\t\tsat = 0.8;\n\t\tcon = 1.00;\n\t\tgam = 1.30;\t\t\n\t\tf_con = 1;\n\t}\n\t\n\tif ( look == 16 ) \t\n\t{\n\t\tslope = vec3(1.297496, 0.943091, 0.501793);\n\t\toffset = vec3(-0.132450, 0.036699, 0.147457);\n\t\tpower = vec3(1.180667, 1.032265, 1.215274);\n\t\tsat = 1.0;\n\t\tcon = 1.00;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 17 ) \t\n\t{\n\t\tslope = vec3(1.616452, 1.331932, 0.842867);\n\t\toffset = vec3(-0.152205, 0.079621, 0.197558);\n\t\tpower = vec3(1.650251, 1.536614, 1.553357);\n\t\tsat = 0.7;\n\t\tcon = 1.0;\n\t\tgam = 1.1;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\tif ( look == 18 ) \t\n\t{\n\t\tslope = vec3(1.671897, 1.274243, 0.994490);\n\t\toffset = vec3(-0.052148, -0.026815, 0.483182);\n\t\tpower = vec3(1.650251, 1.536614, 1.553357);\n\t\tsat = 0.282609;\n\t\tcon = 1.0;\n\t\tgam = 1.0;\t\t\n\t\tf_con = 0;\n\t}\n\t\n\t//apply gamma correction \n\tc = pow(c, vec3(gam));\n\t// apply CDL values\n\tc = pow(clamp(((c * slope) + offset), 0.0, 1.0), power);\n\t// apply saturation\n\tc = saturation(c, (sat));\n\t// apply contrast\n\tc = contrast(c, vec4(con));\n\t\n\t//apply film contrast\n\tif ( f_con == 0 )\n\t\tc;\n\telse\n\t\tc = vec3(sig(c));\n\n\tc = clamp(c, 0.0, 1.0);\n\n    fragColor = vec4(c, alpha);\n}\n\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("look")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Look :")
        del param

    param = lastNode.getParam("paramDefaultInt0")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinInt0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt0")
    if param is not None:
        param.setValue(18, 0)
        del param

    del lastNode
    # End of node "pass1"

    # Start of node "pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("pass2")
    lastNode.setLabel("pass2")
    lastNode.setPosition(4158, 4070)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    grouppass2 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat4")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_filmlook Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_filmlook Matchbox for Autodesk Flame\n\n// iChannel0: Source,filter=nearest,wrap=clamp\n// iChannel1: pass1_result,filter=nearest,wrap=clamp\n// BBox: iChannel0\n\n\n\nuniform float m_sat = 1.0; // Saturation : , min=-5.0, max=5.0\nuniform float m_con = 1.0; // Contrast : , min=0.0, max=10.0\nuniform float m_gam = 1.0; // Gamma : , min=0.001, max=10.0\n\nuniform float blend = 1.0; // Mix : ,min=0.0, max=10.0\n\nuniform float m_slope_r = 1.0; // Red Slope : \nuniform float m_slope_g = 1.0; // Green Slope : \nuniform float m_slope_b = 1.0; // Blue Slope : \n\nuniform float m_offset_r = 0.0; // Red Offset : \nuniform float m_offset_g = 0.0; // Green Offset : \nuniform float m_offset_b = 0.0; // Blue Offset : \n\nuniform float m_power_r = 1.0; // Red Power : \nuniform float m_power_g = 1.0; // Green Power : \nuniform float m_power_b = 1.0; // Blue Power : \n\nuniform int look = 3; // Look : ,min=1, max=18\n\n\n\nvec2 resolution = vec2(iResolution.x, iResolution.y);\n\n// Algorithm from Chapter 16 of OpenGL Shading Language\nvec3 saturation(vec3 rgb, float adjustment)\n{\n    const vec3 W = vec3(0.2125, 0.7154, 0.0721);\n    vec3 intensity = vec3(dot(rgb, W));\n    return mix(intensity, rgb, adjustment);\n}\n\n// Real contrast adjustments by  Miles\nvec3 contrast(vec3 col, vec4 con)\n{\n\tvec3 c = con.rgb * vec3(con.a);\n\tvec3 t = (vec3(1.0) - c) / vec3(2.0);\n\tt = vec3(.5);\n\tcol = (1.0 - c.rgb) * t + c.rgb * col;\n\treturn col;\n}\n\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / resolution.xy;\n    vec3 org = texture2D(iChannel0, uv).rgb;\n\tfloat alpha = texture2D(iChannel0, uv).a;\n    vec3 res1 = texture2D(iChannel1, uv).rgb;\n\t\n\tvec3 c = res1;\n\tvec3 slope = vec3(1.0);\n\tvec3 offset = vec3(0.0);\n\tvec3 power = vec3(1.0);\n\tfloat sat = 1.0;\n\tfloat con = 1.0;\n\tfloat gam = 1.0;\n\t\n\tslope = vec3(m_slope_r, m_slope_g, m_slope_b);\n\toffset = vec3(m_offset_r, m_offset_g, m_offset_b);\n\tpower = vec3(m_power_r, m_power_g, m_power_b);\n\tsat = m_sat;\n\tcon = m_con;\n\tgam = m_gam;\t\t\n\n\t//apply gamma correction \n\tc = pow(c, vec3(gam));\n\t// apply CDL values\n\tc = pow(clamp(((c * slope) + offset), 0.0, 1.0), power);\n\t// apply saturation\n\tc = saturation(c, (sat));\n\t// apply contrast\n\tc = contrast(c, vec4(con));\n\t// blend original in/out\n\tc = mix(org, c, blend);\n\t\n    fragColor = vec4(c, alpha);\n}")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(13, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("m_sat")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Saturation :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(-5, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(5, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("m_con")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Contrast :")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("m_gam")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Gamma :")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0.001, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("blend")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Mix :")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("m_slope_r")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Red Slope :")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("m_slope_g")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Green Slope :")
        del param

    param = lastNode.getParam("paramDefaultFloat5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("m_slope_b")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Blue Slope :")
        del param

    param = lastNode.getParam("paramDefaultFloat6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("m_offset_r")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Red Offset :")
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("m_offset_g")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Green Offset :")
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("m_offset_b")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Blue Offset :")
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("m_power_r")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Red Power :")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("m_power_g")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Green Power :")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("m_power_b")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Blue Power :")
        del param

    param = lastNode.getParam("paramDefaultFloat12")
    if param is not None:
        param.setValue(1, 0)
        del param

    del lastNode
    # End of node "pass2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupPremult1)
    groupUnpremult1.connectInput(0, groupCrop_Source)
    groupPremult1.connectInput(0, grouppass2)
    groupCrop_Source.connectInput(0, groupSource)
    grouppass1.connectInput(0, groupUnpremult1)
    grouppass2.connectInput(0, groupUnpremult1)
    grouppass2.connectInput(1, grouppass1)

    param = groupUnpremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param
    param = groupPremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param
    param = groupCrop_Source.getParam("size")
    param.setExpression("myWidth = Source.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Source.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = grouppass1.getParam("paramValueInt0")
    param.setExpression("thisGroup.lookChoice.get()", False, 0)
    del param
    param = grouppass2.getParam("paramValueFloat0")
    group.getParam("pass2paramValueFloat0").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat1")
    group.getParam("pass2paramValueFloat1").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat2")
    group.getParam("pass2paramValueFloat2").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat3")
    group.getParam("pass2paramValueFloat3").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat4")
    group.getParam("pass2paramValueFloat4").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat5")
    group.getParam("pass2paramValueFloat5").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat6")
    group.getParam("pass2paramValueFloat6").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat7")
    group.getParam("pass2paramValueFloat7").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat8")
    group.getParam("pass2paramValueFloat8").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat9")
    group.getParam("pass2paramValueFloat9").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat10")
    group.getParam("pass2paramValueFloat10").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat11")
    group.getParam("pass2paramValueFloat11").setAsAlias(param)
    del param
    param = grouppass2.getParam("paramValueFloat12")
    group.getParam("pass2paramValueFloat12").setAsAlias(param)
    del param

    try:
        extModule = sys.modules["Crok_filmlook_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
