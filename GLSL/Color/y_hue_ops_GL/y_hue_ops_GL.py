# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named y_hue_ops_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from y_hue_ops_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "y_hue_ops_GL"

def getLabel():
    return "y_hue_ops_GL"

def getVersion():
    return 1

def getIconPath():
    return "y_hue_ops_GL.png"

def getGrouping():
    return "Community/GLSL/Color"

def getPluginDescription():
    return "Isolate hues, and adjust their color / saturation."

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.2941, 0.5294, 1)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("RGB", "RGB")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.RGB = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDoubleParam("R_angle", "Red Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.R_angle = param
    del param

    param = lastNode.createDoubleParam("G_angle", "Green  Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.G_angle = param
    del param

    param = lastNode.createDoubleParam("B_angle", "Blue Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.B_angle = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createDoubleParam("R_sat", "Red Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.R_sat = param
    del param

    param = lastNode.createDoubleParam("G_sat", "Green Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.G_sat = param
    del param

    param = lastNode.createDoubleParam("B_sat", "Blue Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.B_sat = param
    del param

    param = lastNode.createSeparatorParam("LINE02", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE02 = param
    del param

    param = lastNode.createDoubleParam("R_tolerance", "Red Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.R_tolerance = param
    del param

    param = lastNode.createDoubleParam("G_tolerance", "Green Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.G_tolerance = param
    del param

    param = lastNode.createDoubleParam("B_tolerance", "Blue Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.B_tolerance = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createSeparatorParam("CMYO", "CMYO")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CMYO = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createDoubleParam("C_angle", "Cyan Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.C_angle = param
    del param

    param = lastNode.createDoubleParam("M_angle", "Magenta Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.M_angle = param
    del param

    param = lastNode.createDoubleParam("Y_angle", "Yellow Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Y_angle = param
    del param

    param = lastNode.createDoubleParam("O_angle", "Orange Shift : ")
    param.setMinimum(-3600, 0)
    param.setMaximum(3600, 0)
    param.setDisplayMinimum(-360, 0)
    param.setDisplayMaximum(360, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.O_angle = param
    del param

    param = lastNode.createSeparatorParam("LINE03", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE03 = param
    del param

    param = lastNode.createDoubleParam("C_sat", "Cyan Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.C_sat = param
    del param

    param = lastNode.createDoubleParam("M_sat", "Magenta Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.M_sat = param
    del param

    param = lastNode.createDoubleParam("Y_sat", "Yellow Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Y_sat = param
    del param

    param = lastNode.createDoubleParam("O_sat", "Orange Saturation : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.O_sat = param
    del param

    param = lastNode.createSeparatorParam("LINE04", "")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE04 = param
    del param

    param = lastNode.createDoubleParam("C_tolerance", "Cyan Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.C_tolerance = param
    del param

    param = lastNode.createDoubleParam("M_tolerance", "Magenta Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.M_tolerance = param
    del param

    param = lastNode.createDoubleParam("Y_tolerance", "Yellow Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Y_tolerance = param
    del param

    param = lastNode.createDoubleParam("O_tolerance", "Orange Tolerance : ")
    param.setMinimum(0, 0)
    param.setMaximum(20, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(5, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.O_tolerance = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("OUTPUT", "Output")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.OUTPUT = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createChoiceParam("matteChoice", "Matte Out : ")
    entries = [ ("Matte", ""),
    ("Red", ""),
    ("Green", ""),
    ("Blue", ""),
    ("Cyan", ""),
    ("Magenta", ""),
    ("Yeoolw", ""),
    ("Orange", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.matteChoice = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool6", "Output YUV : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool6 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("MASK", "Mask")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.MASK = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createChoiceParam("channelChoice", "Mask : ")
    entries = [ ("Red", ""),
    ("Green", ""),
    ("Blue", ""),
    ("Alpha", "")]
    param.setOptions(entries)
    del entries
    param.setDefaultValue("Alpha")
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.channelChoice = param
    del param

    param = lastNode.createBooleanParam("DivMult", "Pre-Div / Posy-Mult : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(False)
    lastNode.DivMult = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "y_hue_ops_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE101", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE101 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4156, 4398)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4159, 3734)
    lastNode.setSize(90, 33)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Unpremult1"
    lastNode = app.createNode("net.sf.openfx.Unpremult", 2, group)
    lastNode.setScriptName("Unpremult1")
    lastNode.setLabel("Unpremult1")
    lastNode.setPosition(4158, 3955)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupUnpremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Unpremult1"

    # Start of node "Premult1"
    lastNode = app.createNode("net.sf.openfx.Premult", 2, group)
    lastNode.setScriptName("Premult1")
    lastNode.setLabel("Premult1")
    lastNode.setPosition(4156, 4205)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.3, 0.37, 0.776)
    groupPremult1 = lastNode

    param = lastNode.getParam("disableNode")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Premult1"

    # Start of node "Mask"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Mask")
    lastNode.setLabel("Mask")
    lastNode.setPosition(4307, 3735)
    lastNode.setSize(90, 33)
    lastNode.setColor(1, 1, 1)
    groupMask = lastNode

    del lastNode
    # End of node "Mask"

    # Start of node "Dot1"
    lastNode = app.createNode("fr.inria.built-in.Dot", 1, group)
    lastNode.setScriptName("Dot1")
    lastNode.setLabel("Dot1")
    lastNode.setPosition(4343, 4094)
    lastNode.setSize(16, 16)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupDot1 = lastNode

    del lastNode
    # End of node "Dot1"

    # Start of node "Crop_Source"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Source")
    lastNode.setLabel("Crop_Source")
    lastNode.setPosition(4159, 3833)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Source = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(920, 0)
        param.setValue(518, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Source"

    # Start of node "Crop_Mask"
    lastNode = app.createNode("net.sf.openfx.CropPlugin", 1, group)
    lastNode.setScriptName("Crop_Mask")
    lastNode.setLabel("Crop_Mask")
    lastNode.setPosition(4307, 3833)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.3, 0.1)
    groupCrop_Mask = lastNode

    param = lastNode.getParam("rectangleInteractEnable")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("size")
    if param is not None:
        param.setValue(920, 0)
        param.setValue(518, 1)
        del param

    param = lastNode.getParam("reformat")
    if param is not None:
        param.setValue(True)
        del param

    del lastNode
    # End of node "Crop_Mask"

    # Start of node "Shadertoy1_2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1_2")
    lastNode.setLabel("Shadertoy1_2")
    lastNode.setPosition(4156, 4084)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1_2 = lastNode

    param = lastNode.getParam("paramValueVec32")
    if param is not None:
        param.setValue(5, 0)
        param.setValue(5, 1)
        param.setValue(5, 2)
        del param

    param = lastNode.getParam("paramValueVec45")
    if param is not None:
        param.setValue(5, 0)
        param.setValue(5, 1)
        param.setValue(5, 2)
        param.setValue(5, 3)
        del param

    param = lastNode.getParam("paramValueInt7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramValueInt8")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : y_hue_ops pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : y_hue_ops for Autodesk Flame\n\n\n// iChannel0: Source,filter=nearest, wrap=clamp\n// iChannel1: Mask,filter=nearest, wrap=clamp\n// BBox: iChannel0\n\n\n#define PI 3.141592653589793238462643383279502884197969\n\nvec2 res = vec2(iResolution.x, iResolution.y);\nvec2 texel = vec2(1.0) / res;\n\n\n\nuniform float angle;\n\nuniform vec3 rgb_angle = vec3( 0.0 , 0.0 , 0.0 ); // RGB Angle : (Rotate the hue.)\nuniform vec3 rgb_sat = vec3( 1.0 , 1.0 , 1.0 ); // RGB Saturation : (Adjust the saturation.)\nuniform vec3 rgb_range = vec3( 1.0 , 1.0 , 1.0 ); // RGB Range : (Adjust the range that is to be effected.)\n\nuniform vec4 cmyo_angle = vec4(  0.0 , 0.0 , 0.0 , 0.0 ); // CMYO Angle : (Rotate the hue.)\nuniform vec4 cmyo_sat = vec4( 1.0 , 1.0 , 1.0 , 1.0 ); // CMYO Saturation : (Adjust the saturation.)\nuniform vec4 cmyo_range = vec4( 1.0 , 1.0 , 1.0 , 1.0 ); // CMYO Range : (Adjust the range that is to be effected.)\n\nuniform bool yuv = false; // Output YUV : (Output a YUV version of the image.)\nuniform int matte_out = 0; // Matte Out : , min=0, max=7\n\nuniform int channelSelect = 3; // Channel : ,min=0, max=3\n\n\nvec2 rotate(vec2 uv, float aa)\n{\n\tfloat a = radians(aa);\n\n\tmat2 rotationMatrice = mat2( cos(-a), -sin(-a),\n                          sin(-a), cos(-a) );\n\n\treturn uv * rotationMatrice;\n}\n\n\nvec3 to_yuv(vec3 col)\n{\n\tmat3 yuv = mat3\n\t(\n\t\t.2126, .7152, .0722,\n\t\t-.09991, -.33609, .436,\n\t\t.615, -.55861, -.05639\n\t);\n\n\treturn col * yuv;\n}\n\nvec3 to_rgb(vec3 col)\n{\n\tmat3 rgb = mat3\n\t(\n\t\t1.0, 0.0, 1.28033,\n\t\t1.0, -.21482, -.38059,\n\t\t1.0, 2.12798, 0.0\n\t);\n\n\treturn col * rgb;\n}\n\nfloat diff(vec3 a, vec3 b, float f)\n{\n\tvec2 q = a.gb;\n\tvec2 r = b.gb;\n\n\tq = normalize(q);\n\tr = normalize(r);\n\n\tfloat angle = acos(dot(q, r)) / PI;\n\tfloat falloff = pow(1.0 - angle, f);\n\n\treturn clamp(falloff, 0.0, 1.0);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 st = fragCoord.xy / res;\n\n\tvec3 front = texture2D(iChannel0, st).rgb;\n\tfloat matte = texture2D(iChannel1, st).a;\n\n\tif (channelSelect == 0)\n\t{\n\t\tmatte = texture2D(iChannel1, st).r;\n\t}\n\n\tif (channelSelect == 1)\n\t{\n\t\tmatte = texture2D(iChannel1, st).g;\n\t}\n\n\tif (channelSelect == 2)\n\t{\n\t\tmatte = texture2D(iChannel1, st).b;\n\t}\n\n\tfront = to_yuv(front);\n\tvec3 orig = front;\n\n\tvec2 uv = front.gb;\n\tfloat y = front.r;\n\tfloat u = front.g;\n\tfloat v = front.b;\n\n\tvec3 red = (vec3(y, -.09985, .61465) );\n\tvec3 green = (vec3(y, -.33594, -.55859) );\n\tvec3 blue = (vec3(y, .43579, -.05637) );\n\tvec3 cyan = (vec3(y, .09985, -.61475) );\n\tvec3 magenta = (vec3(y, .33594, .55859) );\n\tvec3 yellow = (vec3(y, -.43579, .05637) );\n\tvec3 orange = (vec3(y, -.31787, .64307) );\n\n\tfloat r_d = diff(red, front, rgb_range.r);\n\tfront.gb = mix(front.gb, rotate(front.gb, rgb_angle.r) * vec2(rgb_sat.r), r_d);\n\n\tfloat g_d = diff(green, front, rgb_range.g);\n\tfront.gb = mix(front.gb, rotate(front.gb, rgb_angle.g) * vec2(rgb_sat.g), g_d);\n\n\tfloat b_d = diff(blue, front, rgb_range.b);\n\tfront.gb = mix(front.gb, rotate(front.gb, rgb_angle.b) * vec2(rgb_sat.b), b_d);\n\n\tfloat c_d = diff(cyan, front, cmyo_range.r);\n\tfront.gb = mix(front.gb, rotate(front.gb, cmyo_angle.r) * vec2(cmyo_sat.r), c_d);\n\n\tfloat m_d = diff(magenta, front, cmyo_range.g);\n\tfront.gb = mix(front.gb, rotate(front.gb, cmyo_angle.g) * vec2(cmyo_sat.g), m_d);\n\n\tfloat y_d = diff(yellow, front, cmyo_range.b);\n\tfront.gb = mix(front.gb, rotate(front.gb, cmyo_angle.b) * vec2(cmyo_sat.b), y_d);\n\n\tfloat o_d = diff(orange, front, cmyo_range.a);\n\tfront.gb = mix(front.gb, rotate(front.gb, cmyo_angle.a) * vec2(cmyo_sat.a), o_d);\n\n\tif (! yuv) {\n\t\tfront = to_rgb(front);\n\t\torig = to_rgb(orig);\n\t}\n\n\tfront = mix(orig, front, matte);\n\n\tif (matte_out == 1) {\n\t\tmatte = r_d;\n\t} else if (matte_out == 2) {\n\t\tmatte = g_d;\n\t} else if (matte_out == 3) {\n\t\tmatte = b_d;\n\t} else if (matte_out == 4) {\n\t\tmatte = c_d;\n\t} else if (matte_out == 5) {\n\t\tmatte = m_d;\n\t} else if (matte_out == 6) {\n\t\tmatte = y_d;\n\t} else if (matte_out == 7) {\n\t\tmatte = o_d;\n\t}\n\n\n\tfragColor = vec4(front, matte);\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Mask")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(9, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("rgb_angle")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("RGB Angle :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("Rotate the hue.")
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("rgb_sat")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("RGB Saturation :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("Adjust the saturation.")
        del param

    param = lastNode.getParam("paramDefaultVec31")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("rgb_range")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("RGB Range :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("Adjust the range that is to be effected.")
        del param

    param = lastNode.getParam("paramDefaultVec32")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("cmyo_angle")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("CMYO Angle :")
        del param

    param = lastNode.getParam("paramHint3")
    if param is not None:
        param.setValue("Rotate the hue.")
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("cmyo_sat")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("CMYO Saturation :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("Adjust the saturation.")
        del param

    param = lastNode.getParam("paramDefaultVec44")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("vec4")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("cmyo_range")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("CMYO Range :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("Adjust the range that is to be effected.")
        del param

    param = lastNode.getParam("paramDefaultVec45")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        param.setValue(1, 3)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("yuv")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Output YUV :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("Output a YUV version of the image.")
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("matte_out")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Matte Out :")
        del param

    param = lastNode.getParam("paramMinInt7")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt7")
    if param is not None:
        param.setValue(7, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("channelSelect")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Channel :")
        del param

    param = lastNode.getParam("paramDefaultInt8")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinInt8")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt8")
    if param is not None:
        param.setValue(3, 0)
        del param

    del lastNode
    # End of node "Shadertoy1_2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupPremult1)
    groupUnpremult1.connectInput(0, groupCrop_Source)
    groupPremult1.connectInput(0, groupShadertoy1_2)
    groupDot1.connectInput(0, groupCrop_Mask)
    groupCrop_Source.connectInput(0, groupSource)
    groupCrop_Mask.connectInput(0, groupMask)
    groupShadertoy1_2.connectInput(0, groupUnpremult1)
    groupShadertoy1_2.connectInput(1, groupDot1)

    param = groupUnpremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param
    param = groupPremult1.getParam("disableNode")
    param.setExpression("not thisGroup.DivMult.get()", False, 0)
    del param
    param = groupCrop_Source.getParam("size")
    param.setExpression("myWidth = Source.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Source.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = groupCrop_Mask.getParam("size")
    param.setExpression("myWidth = Mask.getOutputFormat().width()\nret = myWidth", True, 0)
    param.setExpression("myWidth = Mask.getOutputFormat().height()\nret = myWidth", True, 1)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec30")
    param.slaveTo(group.getParam("R_angle"), 0, 0)
    param.slaveTo(group.getParam("G_angle"), 1, 0)
    param.slaveTo(group.getParam("B_angle"), 2, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec31")
    param.slaveTo(group.getParam("R_sat"), 0, 0)
    param.slaveTo(group.getParam("G_sat"), 1, 0)
    param.slaveTo(group.getParam("B_sat"), 2, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec32")
    param.slaveTo(group.getParam("R_tolerance"), 0, 0)
    param.slaveTo(group.getParam("G_tolerance"), 1, 0)
    param.slaveTo(group.getParam("B_tolerance"), 2, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec43")
    param.slaveTo(group.getParam("C_angle"), 0, 0)
    param.slaveTo(group.getParam("M_angle"), 1, 0)
    param.slaveTo(group.getParam("Y_angle"), 2, 0)
    param.slaveTo(group.getParam("O_angle"), 3, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec44")
    param.slaveTo(group.getParam("C_sat"), 0, 0)
    param.slaveTo(group.getParam("M_sat"), 1, 0)
    param.slaveTo(group.getParam("Y_sat"), 2, 0)
    param.slaveTo(group.getParam("O_sat"), 3, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec45")
    param.slaveTo(group.getParam("C_tolerance"), 0, 0)
    param.slaveTo(group.getParam("M_tolerance"), 1, 0)
    param.slaveTo(group.getParam("Y_tolerance"), 2, 0)
    param.slaveTo(group.getParam("O_tolerance"), 3, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool6")
    group.getParam("Shadertoy1_2paramValueBool6").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueInt7")
    param.setExpression("thisGroup.matteChoice.get()", False, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueInt8")
    param.setExpression("thisGroup.channelChoice.get()", False, 0)
    del param

    try:
        extModule = sys.modules["y_hue_ops_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
