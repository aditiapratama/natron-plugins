# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_dof_blur_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_dof_blur_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_dof_blur_GL"

def getLabel():
    return "Crok_dof_blur_GL"

def getVersion():
    return 1

def getIconPath():
    return "Crok_dof_blur_GL.png"

def getGrouping():
    return "Community/GLSL/Blur"

def getPluginDescription():
    return "Simulates depth of field with bokeh.\n( https://vimeo.com/82195519 )"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(1, 0.5686, 0.3333)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("BLUR", "Blur")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.BLUR = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat0", "Amount : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(20, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat0 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat1", "Threshold : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(2, 0)
    param.setDefaultValue(0.25, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat1 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat2", "Gain : ")
    param.setMinimum(0, 0)
    param.setMaximum(50, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1.2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat2 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat3", "Noise : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat3 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat4", "Chroma Aberration : ")
    param.setMinimum(-10, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(-10, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat4 = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createSeparatorParam("BOKEH", "Bokeh")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.BOKEH = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createIntParam("Shadertoy1_2paramValueInt5", "Rings : ")
    param.setMinimum(1, 0)
    param.setMaximum(50, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(50, 0)
    param.setDefaultValue(15, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueInt5 = param
    del param

    param = lastNode.createIntParam("Shadertoy1_2paramValueInt6", "Samples : ")
    param.setMinimum(1, 0)
    param.setMaximum(24, 0)
    param.setDisplayMinimum(1, 0)
    param.setDisplayMaximum(24, 0)
    param.setDefaultValue(10, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueInt6 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat9", "Feather Shape : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(3, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat9 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool8", "Pentagon Shape : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool8 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createSeparatorParam("FOCUS", "Focus")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FOCUS = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat10", "Focal Length : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(200, 0)
    param.setDefaultValue(40, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat10 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat11", "Aperture : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(5, 0)
    param.setDefaultValue(0.6, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat11 = param
    del param

    param = lastNode.createDoubleParam("ZnearSlider", "Znear : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("camera clipping start")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ZnearSlider = param
    del param

    param = lastNode.createDoubleParam("ZfarSlider", "Zfar : ")
    param.setMinimum(0, 0)
    param.setMaximum(10000, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(1000, 0)
    param.setDefaultValue(100, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.ZfarSlider = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createSeparatorParam("DEPTHMAP", "Depth Map")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.DEPTHMAP = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat13", "Focal Depth : ")
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(2, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat13 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool14", "Autofocus : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool14 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool15", "Show Focus : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool15 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool16", "Blur Depth Map : ")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(False)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool16 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy1_2paramValueFloat17", "Blur Value : ")
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(100, 0)
    param.setDefaultValue(1.25, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueFloat17 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    param = lastNode.createStringParam("sep20", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep20 = param
    del param

    param = lastNode.createSeparatorParam("NOISE", "Noise")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NOISE = param
    del param

    param = lastNode.createStringParam("sep21", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep21 = param
    del param

    param = lastNode.createStringParam("sep22", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep22 = param
    del param

    param = lastNode.createBooleanParam("Shadertoy1_2paramValueBool18", "Noise : ")
    param.setDefaultValue(True)
    param.restoreDefaultValue()

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy1_2paramValueBool18 = param
    del param

    param = lastNode.createStringParam("sep23", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep23 = param
    del param

    param = lastNode.createDoubleParam("noiseDither", "Dither : ")
    param.setMinimum(0, 0)
    param.setMaximum(3, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(3, 0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.noiseDither = param
    del param

    param = lastNode.createStringParam("sep24", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep24 = param
    del param

    param = lastNode.createDoubleParam("noiseBias", "Bias : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(0.25, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.noiseBias = param
    del param

    param = lastNode.createStringParam("sep25", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep25 = param
    del param

    param = lastNode.createStringParam("sep26", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep26 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_dof_blur_GL v1.0")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE103", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE103 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2018)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output1"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4445, 4857)
    lastNode.setSize(90, 33)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput1 = lastNode

    del lastNode
    # End of node "Output1"

    # Start of node "Source"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Source")
    lastNode.setLabel("Source")
    lastNode.setPosition(4534, 4470)
    lastNode.setSize(90, 33)
    lastNode.setColor(1, 1, 1)
    groupSource = lastNode

    del lastNode
    # End of node "Source"

    # Start of node "Depth_Map"
    lastNode = app.createNode("fr.inria.built-in.Input", 1, group)
    lastNode.setScriptName("Depth_Map")
    lastNode.setLabel("Depth_Map")
    lastNode.setPosition(4337, 4471)
    lastNode.setSize(90, 33)
    lastNode.setColor(1, 1, 1)
    groupDepth_Map = lastNode

    del lastNode
    # End of node "Depth_Map"

    # Start of node "Shadertoy1_2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy1_2")
    lastNode.setLabel("Shadertoy1_2")
    lastNode.setPosition(4445, 4671)
    lastNode.setSize(90, 36)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy1_2 = lastNode

    param = lastNode.getParam("paramValueVec212")
    if param is not None:
        param.setValue(100, 1)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_dof_blur Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_dof_blur Matchbox for Autodesk Flame\n\n\n// iChannel0: Source, filter = linear , wrap = clamp\n// iChannel1: Depth Map, filter = nearest , wrap = clamp\n// BBox: iChannel0\n\n\n\nuniform float maxblur = 1.0;\t\t// Amount : (clamp value of max blur), min=0.0\nuniform float threshold = 0.25;\t\t// Threshold : (highlight threshold), min=0.0001, max=10.0\nuniform float gain = 1.2;\t\t\t// Gain : (highlight gain), min=0.0, max=50.0\nuniform float exp_noise = 1.0; \t\t// Noise : , min=-10.0, max=10.0\nuniform float fringe = 3.0;\t\t\t// Chromatic Aberration : (bokeh chromatic aberration/fringing), min=-10.0, max=10.0\n\nuniform int rings = 15;\t\t\t\t// Rings : (ring count), min=1, max=50\nuniform int samples = 10;\t\t\t// Samples : (samples on the first ring), min=1, max=24\nuniform float aspect = 1.0; \t\t// Aspect : (aspect), min=1.0, max=24.0\nuniform bool pentagon = false;\t\t// Pentagon Shape : (use pentagon as bokeh shape ?)\nuniform float feather = 3.0;\t\t// Feather Shape : (pentagon shape feather), min=0.0, max=10.0\n\nuniform float focalLength = 40.0; \t// Focal Length : (focal length in mm), min=0.0\nuniform float aperture = 0.6; \t\t// Aperture : (pupil diameter in mm), min=0.0\n\nuniform vec2 znearZfar = vec2( 1.0 , 100.0 ); // Znear / Zfar\n\n//uniform float znear = 1.0;  \t\t// Znear : (camera clipping start), min=0.0\n//uniform float zfar = 100.0; \t\t// Zfar : (camera clipping end), min=0.0\n\nuniform float focalDepth = 2.0;\t\t// Focal Depth : (focal distance value in meters, but you may use autofocus option below)\nuniform bool autofocus = true;\t\t// Autofocus : (use autofocus in shader ? Disable if you use external focalDepth value)\nuniform bool showFocus = false; \t// Show Focus : (show debug focus point and focal range (red = focal point, green = focal range) )\nuniform bool depthblur = false;\t\t// Blur Depth Map : (blur the depth buffer ?)\nuniform float dbsize = 1.250;\t\t// Blur Value : (depthblursize), min=0.0\n\nuniform bool noise = true;\t\t\t// Noise : (use noise instead of pattern for sample dithering)\n\nuniform vec2 namountBias = vec2 ( 0.0 , 0.25 ); // Dither / Bias\n\n//uniform float namount = 0.0;\t\t// Dither : (dither amount), min=0.0, max=3.0\n//uniform float bias = 0.25;\t\t// Bias : (bokeh edge bias), min=0.0, max=10.0\n\n\n\n\n\n\n\n#define PI  3.14159265\n\nfloat width = iResolution.x; //texture width\nfloat height = iResolution.y; //texture height\n\nvec2 texel = vec2(1.0/width,1.0/height);\nvec2 focus = vec2(0.5,0.5); // autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\n\n\n\n\n\n\n/*\nnext part is experimental\nnot looking good with small sample and ring count\nlooks okay starting from samples = 4, rings = 4\n*/\n\nfloat penta(vec2 coords) //pentagonal shape\n{\n\tfloat scale = float(rings) - 1.3;\n\tvec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\n\tvec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\n\tvec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\n\tvec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\n\tvec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\n\tvec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\n\t\n\tvec4  one = vec4( 1.0 );\n\t\n\tvec4 P = vec4((coords),vec2(scale, scale)); \n\t\n\tvec4 dist = vec4(0.0);\n\tfloat inorout = -4.0;\n\t\n\tdist.x = dot( P, HS0 );\n\tdist.y = dot( P, HS1 );\n\tdist.z = dot( P, HS2 );\n\tdist.w = dot( P, HS3 );\n\t\n\tdist = smoothstep( -feather, feather, dist );\n\t\n\tinorout += dot( dist, one );\n\t\n\tdist.x = dot( P, HS4 );\n\tdist.y = HS5.w - abs( P.z );\n\t\n\tdist = smoothstep( -feather, feather, dist );\n\tinorout += dist.x;\n\t\n\treturn clamp( inorout, 0.0, 1.0 );\n}\n\nfloat bdepth(vec2 coords) //blurring depth\n{\n\tfloat d = 0.0;\n\tfloat kernel[9];\n\tvec2 offset[9];\n\t\n\tvec2 wh = vec2(texel.x, texel.y) * dbsize;\n\t\n\toffset[0] = vec2(-wh.x,-wh.y);\n\toffset[1] = vec2( 0.0, -wh.y);\n\toffset[2] = vec2( wh.x -wh.y);\n\t\n\toffset[3] = vec2(-wh.x,  0.0);\n\toffset[4] = vec2( 0.0,   0.0);\n\toffset[5] = vec2( wh.x,  0.0);\n\t\n\toffset[6] = vec2(-wh.x, wh.y);\n\toffset[7] = vec2( 0.0,  wh.y);\n\toffset[8] = vec2( wh.x, wh.y);\n\t\n\tkernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\n\tkernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\n\tkernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\n\t\n\t\n\tfor( int i=0; i<9; i++ )\n\t{\n\t\tfloat tmp = texture2D(iChannel1, coords + offset[i]).r;\n\t\td += tmp * kernel[i];\n\t}\n\t\n\treturn d;\n}\n\n\nvec3 color(vec2 coords,float blur) //processing the sample\n{\n\tvec3 col = vec3(0.0);\n\t\n\tcol.r = texture2D(iChannel0,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\n\tcol.g = texture2D(iChannel0,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\n\tcol.b = texture2D(iChannel0,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\n\t\n\tvec3 lumcoeff = vec3(0.299,0.587,0.114);\n\tfloat lum = dot(col.rgb, lumcoeff);\n\tfloat thresh = max((lum-threshold)*gain, 0.0);\n\treturn col+mix(vec3(0.0),col,thresh*blur);\n}\n\nvec2 rand(vec2 coord) //generating noise/pattern texture for dithering\n{\n\tfloat noiseX = ((fract(1.0-coord.s*(width/2.0))*0.25)+(fract(coord.t*(height/2.0))*0.75))*2.0-1.0;\n\tfloat noiseY = ((fract(1.0-coord.s*(width/2.0))*0.75)+(fract(coord.t*(height/2.0))*0.25))*2.0-1.0;\n\t\n\tif (noise)\n\t{\n\t\tnoiseX = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233))) * 43758.5453),0.0,1.0)*2.0-1.0;\n\t\tnoiseY = clamp(fract(sin(dot(coord ,vec2(12.9898,78.233)*2.0)) * 43758.5453),0.0,1.0)*2.0-1.0;\n\t}\n\treturn vec2(noiseX,noiseY);\n}\n\nvec3 debugFocus(vec3 col, float blur)\n{\n\tfloat m = smoothstep(0.0,0.01,blur);\n\tfloat e = smoothstep(0.99,1.0,blur);\n\tfloat ee = smoothstep(0.97,1.0,blur)-e;\n\t\n\tcol = mix(vec3(1.0,0.0,0.0),col,m);\n\tcol = mix(vec3(0.0,1.0,0.0),col,(1.0-ee)-(1.0-e)*0.1);\n\treturn col;\n}\n\nfloat linearize(float depth)\n{\n\treturn -znearZfar.y * znearZfar.x / (depth * (znearZfar.y - znearZfar.x) - znearZfar.y);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tfloat blur = 0.0;\n\t\n\tfloat depth = linearize(texture2D(iChannel1,uv.xy).x);\n\t\n\tif (depthblur)\n\t{\n\t\tdepth = linearize(bdepth(uv.xy));\n\t}\n \n    blur = abs(aperture * (focalLength * (depth - focalDepth)) /(depth * (focalDepth - focalLength)));\n    \n\tif (autofocus)\n\t{\n\t\tfloat fDepth = linearize(texture2D(iChannel1,focus).x);\n\t\tblur = abs(aperture * (focalLength * (depth - fDepth)) /\n        (depth * (fDepth - focalLength)));\n\t}\n\n\tblur = clamp(blur,0.0,1.0);\n\n\tvec2 noise = rand(uv.xy)*namountBias.x*0.005*blur;\n\t\n\tfloat w = (1.0/width)*blur*maxblur+noise.x;\n\tfloat h = (1.0/height)*blur*maxblur+noise.y;\n\t\n\tvec3 col = texture2D(iChannel0, uv.xy).rgb;\n\tfloat s = 1.0;\n\t\n\tint ringsamples;\n\t\n\tfor (int i = 1; i <= rings; i += 1)\n\t{   \n\t\tringsamples = i * samples;\n\t\t \n\t\tfor (int j = 0 ; j < ringsamples ; j += 1)   \n\t\t{\n\t\t\tfloat step = PI*2.0 * exp_noise / float(ringsamples);\n\t\t\tfloat pw = (cos(float(j)*step)*float(i));\n\t\t\tfloat ph = (sin(float(j)*step)*float(i));\n\t\t\t\n\t\t\tfloat p = 1.0;\n\t\t\tif (pentagon)\n\t\t\t{ \n\t\t\tp = penta(vec2(pw,ph));\n\t\t\t}\n\t\t\t\n\t\t\tif ( aspect > 1.0 )\n\t\t\t{\n\t\t\t\tph *= aspect;\n\t\t\t}\n\t\t\t\n\t\t\telse if ( aspect < 1.0 )\n\t\t\t{\n\t\t\t\tpw /= aspect;\n\t\t\t}\n\t\t\t\n\n\t\t\tcol += color(uv.xy + vec2(pw*w,ph*h),blur)*mix(1.0,(float(i))/(float(rings)),namountBias.y)*p;  \n\t\t\ts += 1.0*mix(1.0,(float(i))/(float(rings)),namountBias.y)*p;   \n\t\t}\n\t}\n\t\n\t\n\tcol /= s;   \n\t\n\tif (showFocus)\n\t{\n\t    col = debugFocus(col, blur);\n\t}\n\t\n\tfragColor.rgb = col;\n\tfragColor.a = 1.0;\n}")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("wrap0")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("Source")
        del param

    param = lastNode.getParam("mipmap1")
    if param is not None:
        param.set("nearest")
        del param

    param = lastNode.getParam("wrap1")
    if param is not None:
        param.set("clamp")
        del param

    param = lastNode.getParam("inputLabel1")
    if param is not None:
        param.setValue("Depth Map")
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(20, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("maxblur")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramHint0")
    if param is not None:
        param.setValue("clamp value of max blur")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("threshold")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Threshold :")
        del param

    param = lastNode.getParam("paramHint1")
    if param is not None:
        param.setValue("highlight threshold")
        del param

    param = lastNode.getParam("paramDefaultFloat1")
    if param is not None:
        param.setValue(0.25, 0)
        del param

    param = lastNode.getParam("paramMinFloat1")
    if param is not None:
        param.setValue(9.999999999999999e-05, 0)
        del param

    param = lastNode.getParam("paramMaxFloat1")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("gain")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Gain :")
        del param

    param = lastNode.getParam("paramHint2")
    if param is not None:
        param.setValue("highlight gain")
        del param

    param = lastNode.getParam("paramDefaultFloat2")
    if param is not None:
        param.setValue(1.2, 0)
        del param

    param = lastNode.getParam("paramMinFloat2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat2")
    if param is not None:
        param.setValue(49.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("exp_noise")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("Noise :")
        del param

    param = lastNode.getParam("paramDefaultFloat3")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat3")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat3")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType4")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName4")
    if param is not None:
        param.setValue("fringe")
        del param

    param = lastNode.getParam("paramLabel4")
    if param is not None:
        param.setValue("Chromatic Aberration :")
        del param

    param = lastNode.getParam("paramHint4")
    if param is not None:
        param.setValue("bokeh chromatic aberration/fringing")
        del param

    param = lastNode.getParam("paramDefaultFloat4")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinFloat4")
    if param is not None:
        param.setValue(-10, 0)
        del param

    param = lastNode.getParam("paramMaxFloat4")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType5")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName5")
    if param is not None:
        param.setValue("rings")
        del param

    param = lastNode.getParam("paramLabel5")
    if param is not None:
        param.setValue("Rings :")
        del param

    param = lastNode.getParam("paramHint5")
    if param is not None:
        param.setValue("ring count")
        del param

    param = lastNode.getParam("paramDefaultInt5")
    if param is not None:
        param.setValue(15, 0)
        del param

    param = lastNode.getParam("paramMinInt5")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxInt5")
    if param is not None:
        param.setValue(50, 0)
        del param

    param = lastNode.getParam("paramType6")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName6")
    if param is not None:
        param.setValue("samples")
        del param

    param = lastNode.getParam("paramLabel6")
    if param is not None:
        param.setValue("Samples :")
        del param

    param = lastNode.getParam("paramHint6")
    if param is not None:
        param.setValue("samples on the first ring")
        del param

    param = lastNode.getParam("paramDefaultInt6")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramMinInt6")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxInt6")
    if param is not None:
        param.setValue(24, 0)
        del param

    param = lastNode.getParam("paramType7")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName7")
    if param is not None:
        param.setValue("aspect")
        del param

    param = lastNode.getParam("paramLabel7")
    if param is not None:
        param.setValue("Aspect :")
        del param

    param = lastNode.getParam("paramHint7")
    if param is not None:
        param.setValue("aspect")
        del param

    param = lastNode.getParam("paramDefaultFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat7")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMaxFloat7")
    if param is not None:
        param.setValue(24, 0)
        del param

    param = lastNode.getParam("paramType8")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName8")
    if param is not None:
        param.setValue("pentagon")
        del param

    param = lastNode.getParam("paramLabel8")
    if param is not None:
        param.setValue("Pentagon Shape :")
        del param

    param = lastNode.getParam("paramHint8")
    if param is not None:
        param.setValue("use pentagon as bokeh shape ?")
        del param

    param = lastNode.getParam("paramType9")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName9")
    if param is not None:
        param.setValue("feather")
        del param

    param = lastNode.getParam("paramLabel9")
    if param is not None:
        param.setValue("Feather Shape :")
        del param

    param = lastNode.getParam("paramHint9")
    if param is not None:
        param.setValue("pentagon shape feather")
        del param

    param = lastNode.getParam("paramDefaultFloat9")
    if param is not None:
        param.setValue(3, 0)
        del param

    param = lastNode.getParam("paramMinFloat9")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat9")
    if param is not None:
        param.setValue(10, 0)
        del param

    param = lastNode.getParam("paramType10")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName10")
    if param is not None:
        param.setValue("focalLength")
        del param

    param = lastNode.getParam("paramLabel10")
    if param is not None:
        param.setValue("Focal Length :")
        del param

    param = lastNode.getParam("paramHint10")
    if param is not None:
        param.setValue("focal length in mm")
        del param

    param = lastNode.getParam("paramDefaultFloat10")
    if param is not None:
        param.setValue(40, 0)
        del param

    param = lastNode.getParam("paramMinFloat10")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType11")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName11")
    if param is not None:
        param.setValue("aperture")
        del param

    param = lastNode.getParam("paramLabel11")
    if param is not None:
        param.setValue("Aperture :")
        del param

    param = lastNode.getParam("paramHint11")
    if param is not None:
        param.setValue("pupil diameter in mm")
        del param

    param = lastNode.getParam("paramDefaultFloat11")
    if param is not None:
        param.setValue(0.6, 0)
        del param

    param = lastNode.getParam("paramMinFloat11")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType12")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName12")
    if param is not None:
        param.setValue("znearZfar")
        del param

    param = lastNode.getParam("paramLabel12")
    if param is not None:
        param.setValue("Znear / Zfar")
        del param

    param = lastNode.getParam("paramDefaultVec212")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(99.99999999999999, 1)
        del param

    param = lastNode.getParam("paramType13")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName13")
    if param is not None:
        param.setValue("focalDepth")
        del param

    param = lastNode.getParam("paramLabel13")
    if param is not None:
        param.setValue("Focal Depth :")
        del param

    param = lastNode.getParam("paramHint13")
    if param is not None:
        param.setValue("focal distance value in meters, but you may use autofocus option below")
        del param

    param = lastNode.getParam("paramDefaultFloat13")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType14")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName14")
    if param is not None:
        param.setValue("autofocus")
        del param

    param = lastNode.getParam("paramLabel14")
    if param is not None:
        param.setValue("Autofocus :")
        del param

    param = lastNode.getParam("paramHint14")
    if param is not None:
        param.setValue("use autofocus in shader ? Disable if you use external focalDepth value")
        del param

    param = lastNode.getParam("paramDefaultBool14")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType15")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName15")
    if param is not None:
        param.setValue("showFocus")
        del param

    param = lastNode.getParam("paramLabel15")
    if param is not None:
        param.setValue("Show Focus :")
        del param

    param = lastNode.getParam("paramHint15")
    if param is not None:
        param.setValue("show debug focus point and focal range (red = focal point, green = focal range)")
        del param

    param = lastNode.getParam("paramType16")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName16")
    if param is not None:
        param.setValue("depthblur")
        del param

    param = lastNode.getParam("paramLabel16")
    if param is not None:
        param.setValue("Blur Depth Map :")
        del param

    param = lastNode.getParam("paramHint16")
    if param is not None:
        param.setValue("blur the depth buffer ?")
        del param

    param = lastNode.getParam("paramType17")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName17")
    if param is not None:
        param.setValue("dbsize")
        del param

    param = lastNode.getParam("paramLabel17")
    if param is not None:
        param.setValue("Blur Value :")
        del param

    param = lastNode.getParam("paramHint17")
    if param is not None:
        param.setValue("depthblursize")
        del param

    param = lastNode.getParam("paramDefaultFloat17")
    if param is not None:
        param.setValue(1.25, 0)
        del param

    param = lastNode.getParam("paramMinFloat17")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType18")
    if param is not None:
        param.set("bool")
        del param

    param = lastNode.getParam("paramName18")
    if param is not None:
        param.setValue("noise")
        del param

    param = lastNode.getParam("paramLabel18")
    if param is not None:
        param.setValue("Noise :")
        del param

    param = lastNode.getParam("paramHint18")
    if param is not None:
        param.setValue("use noise instead of pattern for sample dithering")
        del param

    param = lastNode.getParam("paramDefaultBool18")
    if param is not None:
        param.setValue(True)
        del param

    param = lastNode.getParam("paramType19")
    if param is not None:
        param.set("vec2")
        del param

    param = lastNode.getParam("paramName19")
    if param is not None:
        param.setValue("namountBias")
        del param

    param = lastNode.getParam("paramLabel19")
    if param is not None:
        param.setValue("Dither / Bias")
        del param

    param = lastNode.getParam("paramDefaultVec219")
    if param is not None:
        param.setValue(0.25, 1)
        del param

    del lastNode
    # End of node "Shadertoy1_2"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput1.connectInput(0, groupShadertoy1_2)
    groupShadertoy1_2.connectInput(0, groupSource)
    groupShadertoy1_2.connectInput(1, groupDepth_Map)

    param = groupShadertoy1_2.getParam("paramValueFloat0")
    group.getParam("Shadertoy1_2paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat1")
    group.getParam("Shadertoy1_2paramValueFloat1").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat2")
    group.getParam("Shadertoy1_2paramValueFloat2").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat3")
    group.getParam("Shadertoy1_2paramValueFloat3").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat4")
    group.getParam("Shadertoy1_2paramValueFloat4").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueInt5")
    group.getParam("Shadertoy1_2paramValueInt5").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueInt6")
    group.getParam("Shadertoy1_2paramValueInt6").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool8")
    group.getParam("Shadertoy1_2paramValueBool8").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat9")
    group.getParam("Shadertoy1_2paramValueFloat9").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat10")
    group.getParam("Shadertoy1_2paramValueFloat10").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat11")
    group.getParam("Shadertoy1_2paramValueFloat11").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec212")
    param.slaveTo(group.getParam("ZnearSlider"), 0, 0)
    param.slaveTo(group.getParam("ZfarSlider"), 1, 0)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat13")
    group.getParam("Shadertoy1_2paramValueFloat13").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool14")
    group.getParam("Shadertoy1_2paramValueBool14").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool15")
    group.getParam("Shadertoy1_2paramValueBool15").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool16")
    group.getParam("Shadertoy1_2paramValueBool16").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueFloat17")
    group.getParam("Shadertoy1_2paramValueFloat17").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueBool18")
    group.getParam("Shadertoy1_2paramValueBool18").setAsAlias(param)
    del param
    param = groupShadertoy1_2.getParam("paramValueVec219")
    param.slaveTo(group.getParam("noiseDither"), 0, 0)
    param.slaveTo(group.getParam("noiseBias"), 1, 0)
    del param

    try:
        extModule = sys.modules["Crok_dof_blur_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
