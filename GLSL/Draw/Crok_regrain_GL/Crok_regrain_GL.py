# -*- coding: utf-8 -*-
# DO NOT EDIT THIS FILE
# This file was automatically generated by Natron PyPlug exporter version 10.

# Hand-written code should be added in a separate file named Crok_regrain_GLExt.py
# See http://natron.readthedocs.org/en/master/devel/groups.html#adding-hand-written-code-callbacks-etc
# Note that Viewers are never exported

import NatronEngine
import sys

# Try to import the extensions file where callbacks and hand-written code should be located.
try:
    from Crok_regrain_GLExt import *
except ImportError:
    pass

def getPluginID():
    return "natron.community.plugins.Crok_regrain_GL"

def getLabel():
    return "Crok_regrain_GL"

def getVersion():
    return 1.0

def getIconPath():
    return "Crok_regrain_GL.png"

def getGrouping():
    return "Community/GLSL/Draw"

def getPluginDescription():
    return "Simulates film grain.\n ( http://vimeo.com/107276957 )"

def createInstance(app,group):
    # Create all nodes in the group

    # Create the parameters of the group node the same way we did for all internal nodes
    lastNode = group
    lastNode.setColor(0.3647, 0.549, 0.2353)

    # Create the user parameters
    lastNode.Controls = lastNode.createPageParam("Controls", "Controls")
    param = lastNode.createStringParam("sep01", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep01 = param
    del param

    param = lastNode.createStringParam("sep02", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep02 = param
    del param

    param = lastNode.createSeparatorParam("GRAIN", "Grain")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.GRAIN = param
    del param

    param = lastNode.createStringParam("sep03", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep03 = param
    del param

    param = lastNode.createStringParam("sep04", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep04 = param
    del param

    param = lastNode.createChoiceParam("stockChoice", "Stock : ")
    entries = [ ("Kodak 5245", ""),
    ("Kodak 5248", ""),
    ("Kodak 5287", ""),
    ("Kodak 5293", ""),
    ("Kodak 5296", ""),
    ("Kodak 5298", ""),
    ("Kodak 5217", ""),
    ("Kodak 5218", ""),
    ("Kodak BW", ""),
    ("Custom grain stock", ""),
    ("Alan Skin BW", ""),
    ("BW Static grain", ""),
    ("Custom Static grain stock", "")]
    param.setOptions(entries)
    del entries

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.stockChoice = param
    del param

    param = lastNode.createStringParam("sep05", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep05 = param
    del param

    param = lastNode.createStringParam("sep06", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep06 = param
    del param

    param = lastNode.createStringParam("sep07", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep07 = param
    del param

    param = lastNode.createStringParam("sep08", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep08 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass1paramValueFloat0", "Amount : ")
    param.setMinimum(0, 0)
    param.setMaximum(99.99999999999999, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(99.99999999999999, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass1paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep09", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep09 = param
    del param

    param = lastNode.createDoubleParam("Shadertoy_pass3paramValueFloat0", "Softness : ")
    param.setMinimum(0, 0)
    param.setMaximum(10, 0)
    param.setDisplayMinimum(0, 0)
    param.setDisplayMaximum(10, 0)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("softness")
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass3paramValueFloat0 = param
    del param

    param = lastNode.createStringParam("sep10", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep10 = param
    del param

    param = lastNode.createStringParam("sep11", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep11 = param
    del param

    param = lastNode.createSeparatorParam("AMOUNT", "Amount")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.AMOUNT = param
    del param

    param = lastNode.createStringParam("sep12", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep12 = param
    del param

    param = lastNode.createStringParam("sep13", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep13 = param
    del param

    param = lastNode.createColorParam("Shadertoy_pass1paramValueVec31", "Amount : ", False)
    param.setDefaultValue(1, 0)
    param.restoreDefaultValue(0)
    param.setDefaultValue(1, 1)
    param.restoreDefaultValue(1)
    param.setDefaultValue(1, 2)
    param.restoreDefaultValue(2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass1paramValueVec31 = param
    del param

    param = lastNode.createStringParam("sep14", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep14 = param
    del param

    param = lastNode.createStringParam("sep15", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep15 = param
    del param

    param = lastNode.createSeparatorParam("LEVELS", "Levels")

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LEVELS = param
    del param

    param = lastNode.createStringParam("sep16", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep16 = param
    del param

    param = lastNode.createStringParam("sep17", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep17 = param
    del param

    param = lastNode.createColorParam("Shadertoy_pass2paramValueVec30", "Levels : ", False)
    param.setMinimum(0, 0)
    param.setDisplayMinimum(0, 0)
    param.setMinimum(0, 1)
    param.setDisplayMinimum(0, 1)
    param.setMinimum(0, 2)
    param.setDisplayMinimum(0, 2)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setAddNewLine(True)
    param.setAnimationEnabled(True)
    lastNode.Shadertoy_pass2paramValueVec30 = param
    del param

    param = lastNode.createStringParam("sep18", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep18 = param
    del param

    param = lastNode.createStringParam("sep19", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Controls.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep19 = param
    del param

    lastNode.Credits = lastNode.createPageParam("Credits", "Credits")
    param = lastNode.createStringParam("sep101", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep101 = param
    del param

    param = lastNode.createStringParam("sep102", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep102 = param
    del param

    param = lastNode.createSeparatorParam("NAME", "Crok_regrain_GL v1.1")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.NAME = param
    del param

    param = lastNode.createStringParam("sep103", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep103 = param
    del param

    param = lastNode.createStringParam("sep104", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep104 = param
    del param

    param = lastNode.createSeparatorParam("LINE01", "")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.LINE01 = param
    del param

    param = lastNode.createStringParam("sep105", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep105 = param
    del param

    param = lastNode.createStringParam("sep106", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep106 = param
    del param

    param = lastNode.createSeparatorParam("FR", "ShaderToy 0.8.8")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.FR = param
    del param

    param = lastNode.createStringParam("sep107", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep107 = param
    del param

    param = lastNode.createStringParam("sep108", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep108 = param
    del param

    param = lastNode.createSeparatorParam("CONVERSION", " (Fabrice Fernandez - 2019)")

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setPersistent(False)
    param.setEvaluateOnChange(False)
    lastNode.CONVERSION = param
    del param

    param = lastNode.createStringParam("sep109", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep109 = param
    del param

    param = lastNode.createStringParam("sep110", "")
    param.setType(NatronEngine.StringParam.TypeEnum.eStringTypeLabel)

    # Add the param to the page
    lastNode.Credits.addParam(param)

    # Set param properties
    param.setHelp("")
    param.setAddNewLine(True)
    param.setEvaluateOnChange(False)
    param.setAnimationEnabled(False)
    lastNode.sep110 = param
    del param

    # Refresh the GUI with the newly created parameters
    lastNode.setPagesOrder(['Controls', 'Credits', 'Node', 'Settings'])
    lastNode.refreshUserParamsGUI()
    del lastNode

    # Start of node "Output2"
    lastNode = app.createNode("fr.inria.built-in.Output", 1, group)
    lastNode.setLabel("Output2")
    lastNode.setPosition(4343, 3931)
    lastNode.setSize(80, 32)
    lastNode.setColor(0.7, 0.7, 0.7)
    groupOutput2 = lastNode

    del lastNode
    # End of node "Output2"

    # Start of node "Shadertoy_pass1"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass1")
    lastNode.setLabel("Shadertoy_pass1")
    lastNode.setPosition(4140, 3266)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass1 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueVec31")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramValueInt2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("\nfloat time = iTime *.05;\n\nuniform float overall = 1.0;\t\t\t\t // Amount : ,min=0.0, max=100.0\nuniform vec3 amount = vec3(1.0,1.0,1.0);\t // Gain : \nuniform int stock = 0 ;\t\t\t\t\t\t // Stock : ,min=0, max=12\nuniform float offset;\n\nvec3 noise(vec3 p3)\n{\n\tp3 = fract(p3 * vec3(.1031, .1030, .0973));\n  p3 += dot(p3, p3.yxz+19.19);\n  return fract((p3.xxy + p3.yxx)*p3.zyx);\n}\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 position = fragCoord.xy;\n\tvec3 pos = vec3(position, time*.3) + time * 500. + 50.0;\n\n\tif ( stock == 11 )\n\t\tpos = vec3(position, time*0.0+ offset) + offset;\n\telse if ( stock == 12 )\n\t\tpos = vec3(position, time*0.0+offset) + offset;\n\n\tvec3 grain = noise(pos);\n\tvec3 grau = vec3 (0.5);\n\tvec3 c = vec3(0.0);\n\n\n// Kodak 5245\n\tif ( stock == 0)\n\t{\n\t\tfloat p_red = 4.16;\n\t\tfloat p_green = 5.31;\n\t\tfloat p_blue = 12.00;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5248\n\telse if ( stock == 1)\n\t{\n\t\tfloat p_red = 2.91;\n\t\tfloat p_green = 4.09;\n\t\tfloat p_blue = 7.50;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5287\n\telse if ( stock == 2)\n\t{\n\t\tfloat p_red = 1.98;\n\t\tfloat p_green = 2.05;\n\t\tfloat p_blue = 3.64;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5293\n\telse if ( stock == 3)\n\t{\n\t\tfloat p_red = 4.08;\n\t\tfloat p_green = 4.63;\n\t\tfloat p_blue = 5.78;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5296\n\telse if ( stock == 4)\n\t{\n\t\tfloat p_red = 3.41;\n\t\tfloat p_green = 4.48;\n\t\tfloat p_blue = 16.43;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5298\n\telse if ( stock == 5)\n\t{\n\t\tfloat p_red = 1.50;\n\t\tfloat p_green = 1.59;\n\t\tfloat p_blue = 1.96;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5217\n\telse if ( stock == 6)\n\t{\n\t\tfloat p_red = 3.61;\n\t\tfloat p_green = 4.05;\n\t\tfloat p_blue = 8.09;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak 5218\n\telse if ( stock == 7)\n\t{\n\t\tfloat p_red = 2.73;\n\t\tfloat p_green = 2.51;\n\t\tfloat p_blue = 11.60;\n\n\t\tgrain.r = mix(grau.r, grain.r, p_red * amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, p_green * amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, p_blue * amount.b * .05 * overall);\n\t}\n\n// Kodak BW\n\telse if ( stock == 8)\n\t{\n\t\tgrain = mix(grau, grain, overall * .1);\n\t\tgrain = vec3(grain.r);\n\t}\n\n\n// Custom grain stock\n\telse if (stock == 9 )\n\t{\n\t\tgrain.r = mix(grau.r, grain.r, amount.r * .05 * overall);\n\t\tgrain.g = mix(grau.g, grain.g, amount.g * .05 * overall);\n\t\tgrain.b = mix(grau.b, grain.b, amount.b * .05 * overall);\n\t}\n\n// Alan Skin BW\n\telse if ( stock == 10 )\n\t{\n\t\tgrain = mix(grau, grain, overall* 1.5);\n\t\tgrain = vec3(grain.r);\n\t}\n\n// BW Static grain\n\telse if ( stock == 11)\n\t{\n\t\tgrain = mix(grau, grain, overall * .1);\n\t\tgrain = vec3(grain.r);\n\t}\n\n\t// Custom Static grain stock\n\t\telse if (stock == 12 )\n\t\t{\n\t\t\tgrain.r = mix(grau.r, grain.r, amount.r * .05 * overall);\n\t\t\tgrain.g = mix(grau.g, grain.g, amount.g * .05 * overall);\n\t\t\tgrain.b = mix(grau.b, grain.b, amount.b * .05 * overall);\n\t\t}\n\n\tfragColor = vec4(grain, 1.0);\n}\n")
        del param

    param = lastNode.getParam("inputEnable0")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(4, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("overall")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Amount :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxFloat0")
    if param is not None:
        param.setValue(99.99999999999999, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("amount")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Gain :")
        del param

    param = lastNode.getParam("paramDefaultVec31")
    if param is not None:
        param.setValue(1, 0)
        param.setValue(1, 1)
        param.setValue(1, 2)
        del param

    param = lastNode.getParam("paramType2")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName2")
    if param is not None:
        param.setValue("stock")
        del param

    param = lastNode.getParam("paramLabel2")
    if param is not None:
        param.setValue("Stock :")
        del param

    param = lastNode.getParam("paramMinInt2")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt2")
    if param is not None:
        param.setValue(12, 0)
        del param

    param = lastNode.getParam("paramType3")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName3")
    if param is not None:
        param.setValue("offset")
        del param

    param = lastNode.getParam("paramLabel3")
    if param is not None:
        param.setValue("offset")
        del param

    del lastNode
    # End of node "Shadertoy_pass1"

    # Start of node "Shadertoy_pass2"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass2")
    lastNode.setLabel("Shadertoy_pass2")
    lastNode.setPosition(4140, 3500)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass2 = lastNode

    param = lastNode.getParam("paramValueVec30")
    if param is not None:
        param.setValue(0, 0)
        param.setValue(0, 1)
        param.setValue(0, 2)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_regrain Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_regrain Matchbox for Autodesk Flame\n\n\n// iChannel0: pass1_result, filter=linear, wrap=repeat\n// BBox: iChannel0\n\nvec2 resolution = vec2(iResolution.x, iResolution.y);\nuniform vec3 rgb_blur = vec3(0.0,0.0,0.0); // Softness : \n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n\tvec2 uv = fragCoord.xy / resolution;\n    int denominator = 0;\n    const float intensity = 1.0;\n    vec2 pixelWidth = vec2(1.0)/resolution.xy * intensity;\n    const int size = 5;\n\n\tvec3 noise = texture2D(iChannel0, uv).rgb;\n\n\tif ( rgb_blur != vec3(0.0) )\n        {\n\t\t    for (int x=-size; x<size; x++) {\n\t\t        for (int y=-size; y<size; y++) {\n\n\t\t        \tfloat fx_r = float(x) * pixelWidth.x*rgb_blur.r;\n\t\t           \tfloat fy_r = float(y) * pixelWidth.y*rgb_blur.r;\n\t\t\t\t\tnoise.r += texture2D(iChannel0, uv + vec2(fx_r,fy_r)).r;\n\n\t\t        \tfloat fx_g = float(x) * pixelWidth.x*rgb_blur.g;\n\t\t           \tfloat fy_g = float(y) * pixelWidth.y*rgb_blur.g;\n\t\t\t\t\tnoise.g += texture2D(iChannel0, uv + vec2(fx_g,fy_g)).g;\n\n\t\t        \tfloat fx_b = float(x) * pixelWidth.x*rgb_blur.b;\n\t\t           \tfloat fy_b = float(y) * pixelWidth.y*rgb_blur.b;\n\t\t\t\t\tnoise.b += texture2D(iChannel0, uv + vec2(fx_b,fy_b)).b;\n\n\t\t        \tdenominator++;\n\t\t        }\n\t\t    }\n\t\t\tnoise /= float(denominator);\n        }\n\t\tfragColor.rgb = noise;\n\t}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass1_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("vec3")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("rgb_blur")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Softness :")
        del param

    del lastNode
    # End of node "Shadertoy_pass2"

    # Start of node "Shadertoy_pass3"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass3")
    lastNode.setLabel("Shadertoy_pass3")
    lastNode.setPosition(4347, 3500)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass3 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueInt1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_regrain Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_regrain Matchbox for Autodesk Flame\n\n\n// iChannel0: pass2_result, filter=linear, wrap=repeat\n// BBox: iChannel0\n\nuniform float blur = 1.0;               // Softness : ,min=0.0, minx=10.0\nuniform int stock = 0 ;                 // Stock : ,min=0, max=12\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n   vec2 coords = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n   float p_blur = 1.0;\n\n// Alan Skin BW\n\tif ( stock == 10 )\n\t{\n\t\tp_blur = 0.73;\n\t}\n\n   float softness = (blur + 1.) * p_blur;\n   int f0int = int(softness);\n   vec4 accu = vec4(0.0);\n   float energy = 0.0;\n   vec4 finalColor = vec4(0.0);\n\n   for( int x = -f0int; x <= f0int; x++)\n   {\n      vec2 currentCoord = vec2(coords.x+float(x)/iResolution.x, coords.y);\n      vec4 aSample = texture2D(iChannel0, currentCoord).rgba;\n      float anEnergy = 1.0 - ( abs(float(x)) / softness);\n      energy += anEnergy;\n      accu += aSample * anEnergy;\n   }\n\n   finalColor =\n\t   energy > 0.0 ? (accu / energy) :\n                    texture2D(iChannel0, coords).rgba;\n\n\n   fragColor = vec4( finalColor );\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass2_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("blur")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Softness :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("stock")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Stock :")
        del param

    param = lastNode.getParam("paramMinInt1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt1")
    if param is not None:
        param.setValue(12, 0)
        del param

    del lastNode
    # End of node "Shadertoy_pass3"

    # Start of node "Shadertoy_pass4"
    lastNode = app.createNode("net.sf.openfx.Shadertoy", 1, group)
    lastNode.setScriptName("Shadertoy_pass4")
    lastNode.setLabel("Shadertoy_pass4")
    lastNode.setPosition(4347, 3700)
    lastNode.setSize(80, 60)
    lastNode.setColor(0.3, 0.5, 0.2)
    groupShadertoy_pass4 = lastNode

    param = lastNode.getParam("paramValueFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramValueInt1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("imageShaderSource")
    if param is not None:
        param.setValue("//\n//\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//                        MM.                          .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                     MM.  .MMMM        MMMMMMM    MMM.  .MM\n//                    MM.  .MMM           MMMMMM     MMM.  .MM\n//                   MM.  .MmM              MMMM      MMM.  .MM\n//                  MM.  .MMM                 MM       MMM.  .MM\n//                 MM.  .MMM                   M        MMM.  .MM\n//                MM.  .MMM                              MMM.  .MM\n//                 MM.  .MMM                            MMM.  .MM\n//                  MM.  .MMM       M                  MMM.  .MM\n//                   MM.  .MMM      MM                MMM.  .MM\n//                    MM.  .MMM     MMM              MMM.  .MM\n//                     MM.  .MMM    MMMM            MMM.  .MM\n//                      MM.  .MMMMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                       MM.  .MMMMMMMMMMMMMMMMMMMMMM.  .MM\n//                        MM.                          .MM\n//                          MMMMMMMMMMMMMMMMMMMMMMMMMMMM\n//\n//\n//\n//\n// Adaptation pour Natron par F. Fernandez\n// Code original : crok_regrain Matchbox pour Autodesk Flame\n\n// Adapted to Natron by F.Fernandez\n// Original code : crok_regrain Matchbox for Autodesk Flame\n\n\n// iChannel0: pass3_result, filter=linear, wrap=repeat\n// BBox: iChannel0\n\nuniform float blur = 1.0;               // Softness : ,min=0.0, minx=10.0\nuniform int stock = 0 ;                 // Stock : ,min=0, max=12\n\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord ) \n{\n   vec2 coords = fragCoord.xy / vec2( iResolution.x, iResolution.y );\n   float p_blur = 1.0;\n\n// Alan Skin BW\n\tif ( stock == 10 )\n\t{\n\t\tp_blur = 0.73;\n\t}\n\n   float softness = (blur + 1.) * p_blur;\n   int f0int = int(softness);\n   vec4 accu = vec4(0);\n   float energy = 0.0;\n   vec4 finalColor = vec4(0.0);\n\n   for( int y = -f0int; y <= f0int; y++)\n   {\n      vec2 currentCoord = vec2(coords.x, coords.y+float(y)/iResolution.y);\n      vec4 aSample = texture2D(iChannel0, currentCoord).rgba;\n      float anEnergy = 1.0 - ( abs(float(y)) / softness);\n      energy += anEnergy;\n      accu+= aSample * anEnergy;\n   }\n\n   finalColor =\n      energy > 0.0 ? (accu / energy) :\n                     texture2D(iChannel0, coords).rgba;\n\n   fragColor = vec4( finalColor );\n}\n")
        del param

    param = lastNode.getParam("mipmap0")
    if param is not None:
        param.set("linear")
        del param

    param = lastNode.getParam("inputLabel0")
    if param is not None:
        param.setValue("pass3_result")
        del param

    param = lastNode.getParam("inputEnable1")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable2")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("inputEnable3")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("bbox")
    if param is not None:
        param.set("iChannel0")
        del param

    param = lastNode.getParam("NatronParamFormatChoice")
    if param is not None:
        param.set("PC_Video")
        del param

    param = lastNode.getParam("mouseParams")
    if param is not None:
        param.setValue(False)
        del param

    param = lastNode.getParam("paramCount")
    if param is not None:
        param.setValue(2, 0)
        del param

    param = lastNode.getParam("paramType0")
    if param is not None:
        param.set("float")
        del param

    param = lastNode.getParam("paramName0")
    if param is not None:
        param.setValue("blur")
        del param

    param = lastNode.getParam("paramLabel0")
    if param is not None:
        param.setValue("Softness :")
        del param

    param = lastNode.getParam("paramDefaultFloat0")
    if param is not None:
        param.setValue(1, 0)
        del param

    param = lastNode.getParam("paramMinFloat0")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramType1")
    if param is not None:
        param.set("int")
        del param

    param = lastNode.getParam("paramName1")
    if param is not None:
        param.setValue("stock")
        del param

    param = lastNode.getParam("paramLabel1")
    if param is not None:
        param.setValue("Stock :")
        del param

    param = lastNode.getParam("paramMinInt1")
    if param is not None:
        param.setValue(0, 0)
        del param

    param = lastNode.getParam("paramMaxInt1")
    if param is not None:
        param.setValue(12, 0)
        del param

    del lastNode
    # End of node "Shadertoy_pass4"

    # Now that all nodes are created we can connect them together, restore expressions
    groupOutput2.connectInput(0, groupShadertoy_pass4)
    groupShadertoy_pass2.connectInput(0, groupShadertoy_pass1)
    groupShadertoy_pass3.connectInput(0, groupShadertoy_pass2)
    groupShadertoy_pass4.connectInput(0, groupShadertoy_pass3)

    param = groupShadertoy_pass1.getParam("paramValueFloat0")
    group.getParam("Shadertoy_pass1paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy_pass1.getParam("paramValueVec31")
    group.getParam("Shadertoy_pass1paramValueVec31").setAsAlias(param)
    del param
    param = groupShadertoy_pass1.getParam("paramValueInt2")
    param.setExpression("thisGroup.stockChoice.get()", False, 0)
    del param
    param = groupShadertoy_pass2.getParam("paramValueVec30")
    group.getParam("Shadertoy_pass2paramValueVec30").setAsAlias(param)
    del param
    param = groupShadertoy_pass3.getParam("paramValueFloat0")
    group.getParam("Shadertoy_pass3paramValueFloat0").setAsAlias(param)
    del param
    param = groupShadertoy_pass3.getParam("paramValueInt1")
    param.setExpression("thisGroup.stockChoice.get()", False, 0)
    param.slaveTo(groupShadertoy_pass1.getParam("paramValueInt2"), 0, 0)
    del param
    param = groupShadertoy_pass4.getParam("paramValueFloat0")
    param.slaveTo(groupShadertoy_pass3.getParam("paramValueFloat0"), 0, 0)
    del param
    param = groupShadertoy_pass4.getParam("paramValueInt1")
    param.setExpression("thisGroup.stockChoice.get()", False, 0)
    param.slaveTo(groupShadertoy_pass1.getParam("paramValueInt2"), 0, 0)
    del param

    try:
        extModule = sys.modules["Crok_regrain_GLExt"]
    except KeyError:
        extModule = None
    if extModule is not None and hasattr(extModule ,"createInstanceExt") and hasattr(extModule.createInstanceExt,"__call__"):
        extModule.createInstanceExt(app,group)
